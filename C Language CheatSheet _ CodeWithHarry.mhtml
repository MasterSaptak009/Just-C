From: <Saved by Blink>
Snapshot-Content-Location: https://www.codewithharry.com/blogpost/c-cheatsheet/
Subject: C Language CheatSheet | CodeWithHarry
Date: Sat, 17 Feb 2024 20:03:32 +0530
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--jp4s04Prax7r58rcbeQOam2nREQD6vuJy3WOXxojCZ----"


------MultipartBoundary--jp4s04Prax7r58rcbeQOam2nREQD6vuJy3WOXxojCZ----
Content-Type: text/html
Content-ID: <frame-982249BD9FF0F7EB3759D95D2A78DAA9@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.codewithharry.com/blogpost/c-cheatsheet/

<!DOCTYPE html><html foxified=3D""><head><meta http-equiv=3D"Content-Type" =
content=3D"text/html; charset=3DUTF-8"><link rel=3D"shortcut icon" href=3D"=
https://www.codewithharry.com/img/favicon.ico" type=3D"image/x-icon"><meta =
name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"><titl=
e>C Language CheatSheet | CodeWithHarry</title><meta name=3D"description" c=
ontent=3D"Access a comprehensive cheatsheet for C programming. This downloa=
dable PDF offers concise explanations, examples, and quick references for f=
unctions, syntax, and key concepts. Perfect for both beginners and seasoned=
 programmers."><link rel=3D"icon" href=3D"https://www.codewithharry.com/img=
/favicon.ico"><link href=3D"https://fonts.googleapis.com/css2?family=3DPopp=
ins:wght@300;400;500;600&amp;display=3Dswap" rel=3D"stylesheet" data-optimi=
zed-fonts=3D"true"><meta name=3D"next-head-count" content=3D"8"><meta name=
=3D"next-font-preconnect"><link rel=3D"preload" href=3D"https://www.codewit=
hharry.com/_next/static/css/20a6651d5aa346c5.css" as=3D"style"><link rel=3D=
"stylesheet" href=3D"https://www.codewithharry.com/_next/static/css/20a6651=
d5aa346c5.css" data-n-g=3D""><link rel=3D"preload" href=3D"https://www.code=
withharry.com/_next/static/css/470c5e8db7cdc7e9.css" as=3D"style"><link rel=
=3D"stylesheet" href=3D"https://www.codewithharry.com/_next/static/css/470c=
5e8db7cdc7e9.css" data-n-p=3D""><link rel=3D"preload" href=3D"https://www.c=
odewithharry.com/_next/static/css/15f7f4f00b653c3e.css" as=3D"style"><link =
rel=3D"stylesheet" href=3D"https://www.codewithharry.com/_next/static/css/1=
5f7f4f00b653c3e.css" data-n-p=3D""><link as=3D"script" rel=3D"prefetch" hre=
f=3D"https://www.codewithharry.com/_next/static/chunks/8010-30985a3ffa82839=
f.js"><link as=3D"script" rel=3D"prefetch" href=3D"https://www.codewithharr=
y.com/_next/static/chunks/pages/index-ca2c963e3e043274.js"><link as=3D"scri=
pt" rel=3D"prefetch" href=3D"https://www.codewithharry.com/_next/static/chu=
nks/pages/videos-03bd799c2daefb95.js"><link as=3D"script" rel=3D"prefetch" =
href=3D"https://www.codewithharry.com/_next/static/chunks/pages/tutorials-b=
6f71ac7d895e844.js"><link as=3D"script" rel=3D"prefetch" href=3D"https://ww=
w.codewithharry.com/_next/static/chunks/pages/blog-3d4a4d1ac6de7f9d.js"><li=
nk as=3D"script" rel=3D"prefetch" href=3D"https://www.codewithharry.com/_ne=
xt/static/chunks/pages/notes-edbe135cd0eae796.js"><link as=3D"script" rel=
=3D"prefetch" href=3D"https://www.codewithharry.com/_next/static/chunks/1bf=
c9850-3d42d4baea78057f.js"><link as=3D"script" rel=3D"prefetch" href=3D"htt=
ps://www.codewithharry.com/_next/static/chunks/pages/contact-8842ad463dc553=
cf.js"><link as=3D"script" rel=3D"prefetch" href=3D"https://www.codewithhar=
ry.com/_next/static/chunks/pages/my-gear-8bb82632c68f2a6b.js"><link as=3D"s=
cript" rel=3D"prefetch" href=3D"https://www.codewithharry.com/_next/static/=
chunks/3326-b6ec87ba466573a4.js"><link as=3D"script" rel=3D"prefetch" href=
=3D"https://www.codewithharry.com/_next/static/chunks/4853-6efd321bfca4310b=
.js"><link as=3D"script" rel=3D"prefetch" href=3D"https://www.codewithharry=
.com/_next/static/chunks/pages/work-ac2721d36cc77cf5.js"><link as=3D"script=
" rel=3D"prefetch" href=3D"https://www.codewithharry.com/_next/static/chunk=
s/pages/login-74c2097d8682c395.js"><link as=3D"script" rel=3D"prefetch" hre=
f=3D"https://www.codewithharry.com/_next/static/chunks/pages/signup-35a6be3=
444d021bd.js"><link as=3D"script" rel=3D"prefetch" href=3D"https://www.code=
withharry.com/_next/static/chunks/545f34e4-ec767841d4c695c3.js"><link as=3D=
"script" rel=3D"prefetch" href=3D"https://www.codewithharry.com/_next/stati=
c/chunks/pages/tutorial/%5Bslug%5D-02d38716094f1f47.js"></head><body data-n=
ew-gr-c-s-check-loaded=3D"14.1155.0" data-gr-ext-installed=3D""><div id=3D"=
__next"><div class=3D""><div class=3D"" style=3D"position:fixed;top:0;left:=
0;height:2px;background:transparent;z-index:99999999999;width:100%"><div cl=
ass=3D"" style=3D"height:100%;background:purple;transition:all 500ms ease;w=
idth:0%"><div style=3D"box-shadow: purple 0px 0px 10px, purple 0px 0px 5px;=
 width: 5%; opacity: 1; position: absolute; height: 100%; transition: all 5=
00ms ease 0s; transform: rotate(3deg) translate(0px, -4px); left: -10rem;">=
</div></div></div><div id=3D"imgpreview2" class=3D"w-full z-10 sticky bg-wh=
ite top-0 border-b border-grey-light shadow-md dark:bg-gray-800 dark:border=
-black"><div class=3D"w-full flex flex-wrap items-center lg:justify-between=
 mt-0 py-4 "><div class=3D"px-0 lg:pl-4 flex items-center lg:mx-4 cursor-po=
inter text-purple-700 text-md md:text-xl font-bold mx-3 dark:text-purple-30=
0"><span><b class=3D"font-bold">&lt;/&gt;</b> CodeWithHarry<!-- --></span><=
/div><div class=3D"flex items-center md:hidden"><div class=3D"text-purple-7=
00 text-md font-semibold">Menu</div><svg stroke=3D"currentColor" fill=3D"cu=
rrentColor" stroke-width=3D"0" viewBox=3D"0 0 1024 1024" class=3D"text-purp=
le-700 mt-1" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/s=
vg"><path d=3D"M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 1=
0.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z"></path></svg></div>=
<svg stroke=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewB=
ox=3D"0 0 16 16" class=3D"md:hidden w-4 text-purple-700 mt-1 ml-2 cursor-po=
inter dark:text-white" height=3D"28" width=3D"28" xmlns=3D"http://www.w3.or=
g/2000/svg"><path d=3D"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.87=
8 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0=
 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 1=
2.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z"></path><p=
ath d=3D"M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.=
097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.09=
7 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.3=
1 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.09=
7-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.=
617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732=
.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732=
l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.=
863.1z"></path></svg><button class=3D"md:hidden text-white bg-purple-700 ho=
ver:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg=
 text-sm px-3 py-2 text-center inline-flex items-center mx-1 absolute right=
-3 md:right-12">Login</button><div class=3D"w-full flex-grow lg:flex lg:fle=
x-1 lg:content-center lg:justify-end lg:w-auto h-0 lg:h-auto overflow-hidde=
n mt-2 lg:mt-0 z-20 transition-all" id=3D"nav-content"><ul class=3D"flex it=
ems-center flex-col lg:flex-row"><div id=3D"search-toggle" class=3D"search-=
icon cursor-pointer px-6 hidden"><svg class=3D"fill-current pointer-events-=
none text-grey-darkest w-4 h-4 inline" xmlns=3D"http://www.w3.org/2000/svg"=
 viewBox=3D"0 0 20 20"><path d=3D"M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33=
-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z"></path></svg></di=
v><li class=3D"mx-2 my-2 text-black hover:border-b-2 hover:border-purple-70=
0 dark:text-white"><a href=3D"https://www.codewithharry.com/">Home</a></li>=
<li class=3D"mx-2 my-2 text-black hover:border-b-2 hover:border-purple-700 =
dark:text-white"><a href=3D"https://www.codewithharry.com/videos/">Courses<=
/a></li><li class=3D"mx-2 my-2 text-black hover:border-b-2 hover:border-pur=
ple-700 dark:text-white"><a href=3D"https://www.codewithharry.com/tutorials=
/">Tutorial</a></li><li class=3D"mx-2 my-2 text-black hover:border-b-2 hove=
r:border-purple-700 dark:text-white"><a href=3D"https://www.codewithharry.c=
om/blog/">Blog</a></li><li class=3D"mx-2 my-2 text-black hover:border-b-2 h=
over:border-purple-700 dark:text-white"><a href=3D"https://www.codewithharr=
y.com/notes/">Notes</a></li><li class=3D"mx-2 my-2 text-black hover:border-=
b-2 hover:border-purple-700 dark:text-white"><a href=3D"https://www.codewit=
hharry.com/contact/">Contact</a></li><li class=3D"mx-2 my-2 text-black hove=
r:border-b-2 hover:border-purple-700 dark:text-white"><a href=3D"https://ww=
w.codewithharry.com/my-gear/">My Gear</a></li><li class=3D"mx-2 my-2 text-b=
lack hover:border-b-2 hover:border-purple-700 dark:text-white"><a href=3D"h=
ttps://www.codewithharry.com/work/">Work With Us</a></li><li><svg stroke=3D=
"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 16 1=
6" class=3D"hidden md:block text-purple-700 mt-1 ml-2 cursor-pointer dark:t=
ext-white" height=3D"28" width=3D"28" xmlns=3D"http://www.w3.org/2000/svg">=
<path d=3D"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.0=
21 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316=
.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71=
 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z"></path><path d=3D"M10=
.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.=
162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.38=
7 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.1=
62-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387=
-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l=
.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.7=
74a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a=
.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z"></pa=
th></svg></li></ul><div class=3D"text-center my-2 pr-4 pl-2"><button class=
=3D"text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-pu=
rple-300 font-medium rounded-lg text-sm px-3 py-2 text-center inline-flex i=
tems-center mx-1 dark:bg-purple-500 dark:hover:bg-purple-800">Login</button=
><button class=3D"text-white bg-purple-700 hover:bg-purple-800 focus:ring-4=
 focus:ring-purple-300 font-medium rounded-lg text-sm px-3 py-2 text-center=
 inline-flex items-center mx-1 dark:bg-purple-500 dark:hover:bg-purple-800"=
>Signup</button></div></div></div><hr class=3D"dark:border-gray-500"><div c=
lass=3D"max-h-[6vh] min-h-[40px] flex items-center ml-3 mr-3 md:ml-10 md:mr=
-10 my-1"><span><svg stroke=3D"currentColor" fill=3D"currentColor" stroke-w=
idth=3D"0" viewBox=3D"0 0 1024 1024" class=3D"text-purple-700 text-xl curso=
r-pointer dark:text-purple-300" height=3D"1em" width=3D"1em" xmlns=3D"http:=
//www.w3.org/2000/svg"><path d=3D"M946.5 505L534.6 93.4a31.93 31.93 0 0 0-4=
5.2 0L77.5 505c-12 12-18.8 28.3-18.8 45.3 0 35.3 28.7 64 64 64h43.4V908c0 1=
7.7 14.3 32 32 32H448V716h112v224h265.9c17.7 0 32-14.3 32-32V614.3h43.4c17 =
0 33.3-6.7 45.3-18.8 24.9-25 24.9-65.5-.1-90.5z"></path></svg></span><ul cl=
ass=3D"space-x-7 m-auto text-purple-700 font-semibold hidden md:flex items-=
center"><li class=3D"cursor-pointer hover:border-b-2 hover:border-purple-70=
0 active:border-b-4 dark:text-purple-300"><a href=3D"https://www.codewithha=
rry.com/tutorial/html-home/">HTML</a></li><li class=3D"cursor-pointer hover=
:border-b-2 hover:border-purple-700 active:border-b-4 dark:text-purple-300"=
><a href=3D"https://www.codewithharry.com/tutorial/css-home/">CSS</a></li><=
li class=3D"cursor-pointer hover:border-b-2 hover:border-purple-700 active:=
border-b-4 dark:text-purple-300"><a href=3D"https://www.codewithharry.com/t=
utorial/js/">JS</a></li><li class=3D"cursor-pointer hover:border-b-2 hover:=
border-purple-700 active:border-b-4 dark:text-purple-300"><a href=3D"https:=
//www.codewithharry.com/tutorial/c/">C</a></li><li class=3D"cursor-pointer =
hover:border-b-2 hover:border-purple-700 active:border-b-4 dark:text-purple=
-300"><a href=3D"https://www.codewithharry.com/tutorial/cplusplus/">C++</a>=
</li><li class=3D"cursor-pointer hover:border-b-2 hover:border-purple-700 a=
ctive:border-b-4 dark:text-purple-300"><a href=3D"https://www.codewithharry=
.com/tutorial/java/">JAVA</a></li><li class=3D"cursor-pointer hover:border-=
b-2 hover:border-purple-700 active:border-b-4 dark:text-purple-300"><a href=
=3D"https://www.codewithharry.com/tutorial/python/">PYTHON</a></li><li clas=
s=3D"cursor-pointer hover:border-b-2 hover:border-purple-700 active:border-=
b-4 dark:text-purple-300"><a href=3D"https://www.codewithharry.com/tutorial=
/php/">PHP</a></li><li class=3D"cursor-pointer hover:border-b-2 hover:borde=
r-purple-700 active:border-b-4 dark:text-purple-300"><a href=3D"https://www=
.codewithharry.com/tutorial/react-home/">REACT JS</a></li></ul><input id=3D=
"search" class=3D"hidden right-10 md:right-10 absolute w-48 md:w-60 h-8 bg-=
white rounded border-2 border-purple-500 focus:border-purple-700 focus:ring=
-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 lea=
ding-8 transition-colors duration-200 ease-in-out dark:bg-gray-500 dark:tex=
t-gray-200 " placeholder=3D"Search..."><svg stroke=3D"currentColor" fill=3D=
"currentColor" stroke-width=3D"0" viewBox=3D"0 0 1024 1024" class=3D"text-p=
urple-700 dark:text-purple-300 cursor-pointer text-2xl absolute right-3 md:=
right-12 }" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/sv=
g"><path d=3D"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-3=
1.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C1=
43.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8=
 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0 0 11.6 0l43.6=
-43.5a8.2 8.2 0 0 0 0-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23=
.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 3=
52.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 1=
58.4z"></path></svg></div><div class=3D"bg-purple-100 text-center shadow-lg=
 absolute w-full dark:bg-gray-600 hidden mt-1 md:hidden"><ul><li class=3D"p=
t-4 text-purple-500 font-bold"><a href=3D"https://www.codewithharry.com/">H=
ome</a></li><li class=3D"pt-4 text-purple-500 font-bold"><a href=3D"https:/=
/www.codewithharry.com/videos/">Courses</a></li><li class=3D"pt-4 text-purp=
le-500 font-bold flex justify-center ml-3">Tutorial <!-- --><svg stroke=3D"=
currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 1024 =
1024" class=3D"mt-1" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.or=
g/2000/svg"><path d=3D"M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380=
.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z"></path></sv=
g></li><li class=3D"my-2 text-purple-500 font-semibold text-sm bg-purple-20=
0 dark:bg-gray-700  hidden"><ul><li class=3D"cursor-pointer py-1 border-y-2=
 dark:border-gray-400"><a href=3D"https://www.codewithharry.com/tutorial/ht=
ml-home/">HTML</a></li><li class=3D"cursor-pointer py-1 border-b-2 dark:bor=
der-gray-400"><a href=3D"https://www.codewithharry.com/tutorial/css-home/">=
CSS</a></li><li class=3D"cursor-pointer py-1 border-b-2 dark:border-gray-40=
0"><a href=3D"https://www.codewithharry.com/tutorial/js/">JS</a></li><li cl=
ass=3D"cursor-pointer py-1 border-b-2 dark:border-gray-400"><a href=3D"http=
s://www.codewithharry.com/tutorial/c/">C</a></li><li class=3D"cursor-pointe=
r py-1 border-b-2 dark:border-gray-400"><a href=3D"https://www.codewithharr=
y.com/tutorial/cplusplus/">C++</a></li><li class=3D"cursor-pointer py-1 bor=
der-b-2 dark:border-gray-400"><a href=3D"https://www.codewithharry.com/tuto=
rial/java/">JAVA</a></li><li class=3D"cursor-pointer py-1 border-b-2 dark:b=
order-gray-400"><a href=3D"https://www.codewithharry.com/tutorial/python/">=
PYTHON</a></li><li class=3D"cursor-pointer py-1 border-b-2 dark:border-gray=
-400"><a href=3D"https://www.codewithharry.com/tutorial/php/">PHP</a></li><=
li class=3D"cursor-pointer py-1 border-b-2 dark:border-gray-400"><a href=3D=
"https://www.codewithharry.com/tutorial/react-home/">REACT JS</a></li></ul>=
</li><li class=3D"pt-4 text-purple-500 font-bold"><a href=3D"https://www.co=
dewithharry.com/blog/">Blog</a></li><li class=3D"pt-4 text-purple-500 font-=
bold"><a href=3D"https://www.codewithharry.com/notes/">Notes</a></li><li cl=
ass=3D"pt-4 text-purple-500 font-bold"><a href=3D"https://www.codewithharry=
.com/contact/">Contact</a></li><li class=3D"pt-4 text-purple-500 font-bold"=
><a href=3D"https://www.codewithharry.com/my-gear/">My Gear</a></li><li cla=
ss=3D"pt-4 pb-4 text-purple-500 font-bold"><a href=3D"https://www.codewithh=
arry.com/work/">Work With Us</a></li></ul></div></div><div class=3D"Toastif=
y"></div><div class=3D"dark:bg-gray-900"><div class=3D"py-0 md:mx-2" id=3D"=
imgpreview"><div class=3D"lg:min-h-screen bg-gray-50 dark:bg-gray-900"><div=
 class=3D"dark:bg-gray-900 min-h-screen md:px-4 "><div class=3D"bg-gray-50 =
dark:bg-gray-900 min-h-screen p-4 lg:p-12"><div class=3D"max-w-screen-lg mx=
-auto bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 lg:p-10"><h1 class=
=3D"text-center text-xl md:text-3xl justify-center lg:text-4xl font-semibol=
d text-gray-800 dark:text-white mb-1 flex">C Language CheatSheet<!-- --></h=
1><div class=3D"flex items-center mb-6 flex-col md:flex-row md:justify-cent=
er"><div class=3D"image flex justify-center items-center"><div class=3D"h-8=
 w-8 overflow-hidden rounded-full"><a href=3D"https://www.codewithharry.com=
/" class=3D"block w-full h-full"><img alt=3D"Haris Ali Khan's photo" src=3D=
"https://www.codewithharry.com/img/logo-blue.png" class=3D"w-full h-full ob=
ject-cover"></a></div><a href=3D"https://www.codewithharry.com/" class=3D"t=
ext-sm text-slate-900 dark:text-white hover:text-purple-700 transition ease=
-in-out duration-150 mx-2">Haris Ali Khan</a></div><div class=3D"rest flex =
mt-3 md:mt-0"><span class=3D"mx-1 hidden font-bold dark:text-gray-400 text-=
slate-500 md:block">=C2=B7</span><span class=3D"text-sm dark:text-gray-400 =
text-gray-500 mx-2"> <!-- -->August 13, 2023<!-- --></span><span class=3D"m=
x-1 hidden font-bold dark:text-gray-400 text-slate-500 md:block">=C2=B7</sp=
an><span class=3D"text-sm dark:text-gray-400 text-gray-500 flex mx-2"> <!--=
 --><svg class=3D"mr-2 h-5 w-5 fill-current opacity-75" viewBox=3D"0 0 576 =
512"><path d=3D"M540.9 56.77c-45.95-16.66-90.23-24.09-129.1-24.75-60.7.94-1=
02.7 17.45-123.8 27.72-21.1-10.27-64.1-26.8-123.2-27.74-40-.05-84.4 8.35-12=
9.7 24.77C14.18 64.33 0 84.41 0 106.7v302.9c0 14.66 6.875 28.06 18.89 36.8 =
11.81 8.531 26.64 10.98 40.73 6.781 118.9-36.34 209.3 19.05 214.3 22.19C277=
.8 477.6 281.2 480 287.1 480c6.52 0 10.12-2.373 14.07-4.578 10.78-6.688 98.=
3-57.66 214.3-22.27 14.11 4.25 28.86 1.75 40.75-6.812C569.1 437.6 576 424.2=
 576 409.6V106.7c0-22.28-14.2-42.35-35.1-49.93zM272 438.1c-24.95-12.03-71.0=
1-29.37-130.5-29.37-27.83 0-58.5 3.812-91.19 13.77-4.406 1.344-9 .594-12.69=
-2.047C34.02 417.8 32 413.1 32 409.6V106.7c0-8.859 5.562-16.83 13.86-19.83C=
87.66 71.7 127.9 63.95 164.5 64c51.8.81 89.7 15.26 107.5 23.66V438.1zm272-2=
8.5c0 4.375-2.016 8.234-5.594 10.84-3.766 2.703-8.297 3.422-12.69 2.125C424=
.1 391.6 341.3 420.4 304 438.3V87.66c17.8-8.4 55.7-22.85 107.4-23.66 35.31-=
.063 76.34 7.484 118.8 22.88 8.2 3 13.8 10.96 13.8 19.82v302.9z"></path></s=
vg>9<!-- --> min read<!-- --></span> <!-- --></div></div><div class=3D"cont=
   leading-relaxed text-dark dark:text-gray-100"><p>This C cheatsheet is ai=
med to provide you with a quick syntax revision of C language. This will be=
 helpful for students who need a quick syntax revision right before their e=
xams or professionals to quickly look at the C language syntax. Let's start=
 with the basics and move toward the more intricate aspects of C programmin=
g.</p>
<h2>Basics</h2>
<p>Basic syntax and functions from the C programming language.</p>
<h3>Boilerplate Code</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span> <span class=3D"t=
oken comment">//header files</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span> <span class=3D"token comment">//main function</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token comment">// Your code here</span>
    <span class=3D"token keyword">return</span><span class=3D"token punctua=
tion">(</span><span class=3D"token number">0</span><span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">;</span> <span class=3D=
"token comment">//returning value to int main()</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>printf function</h3>
<p>It is used to show output on the screen</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">printf</span><span clas=
s=3D"token punctuation">(</span><span class=3D"token string">"Hello World!"=
</span><span class=3D"token punctuation">)</span><span class=3D"token punct=
uation">;</span></code></pre><div class=3D"toolbar"><div class=3D"toolbar-i=
tem"><button class=3D"copy-to-clipboard-button" type=3D"button" data-copy-s=
tate=3D"copy"><span>Copy</span></button></div></div></div>
<h3>scanf function</h3>
<p>It is used to take input from the user</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">scanf</span><span class=
=3D"token punctuation">(</span><span class=3D"token string">"format_specifi=
er"</span><span class=3D"token punctuation">,</span> <span class=3D"token o=
perator">&amp;</span>variables<span class=3D"token punctuation">)</span></c=
ode></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button class=
=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><spa=
n>Copy</span></button></div></div></div>
<p>We use &amp; with the variable name to represent "address of". This is h=
ow the syntax works:</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">int</span> a<span class=
=3D"token punctuation">;</span>
<span class=3D"token function">scanf</span><span class=3D"token punctuation=
">(</span><span class=3D"token string">"%d"</span><span class=3D"token punc=
tuation">,</span><span class=3D"token operator">&amp;</span>a<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">;</span> <spa=
n class=3D"token comment">// Store keyboard input in a variable with addres=
s (address of a or &amp;a)</span>
<span class=3D"token function">printf</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token string">"%d"</span><span class=3D"token pun=
ctuation">,</span><span class=3D"token operator">&amp;</span>a<span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">;</span></=
code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button class=
=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><spa=
n>Copy</span></button></div></div></div>
<h2>Comments</h2>
<p>A comment is a code that is not executed by the compiler, and the progra=
mmer uses it to annotate their code, providing explanations or reminders ab=
out the code's functionality, which aids in readability and future maintena=
nce.</p>
<h3>Single line comment</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token comment">// This is a single line=
 comment</span></code></pre><div class=3D"toolbar"><div class=3D"toolbar-it=
em"><button class=3D"copy-to-clipboard-button" type=3D"button" data-copy-st=
ate=3D"copy"><span>Copy</span></button></div></div></div>
<h3>Multi-line comment</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token comment">/* This is a=20
multi-line
comment
*/</span></code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><b=
utton class=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D=
"copy"><span>Copy</span></button></div></div></div>
<h2>Data types</h2>
<p>The data type defines the kind of data that can be stored in a variable,=
 such as integers, floating-point numbers, characters, or more complex stru=
ctures. It dictates how the data is stored, interpreted, and manipulated wi=
thin the program.</p>
<h3>Character type</h3>
<p>The character type, often represented as a single octet (one byte), is u=
sed to store individual characters in the C programming language.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">char</span> variable_nam=
e<span class=3D"token punctuation">;</span></code></pre><div class=3D"toolb=
ar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" =
type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></=
div></div>
<p>The format specifier for a character in C is "%c". To print a character,=
 we use this specifier within the <code>printf</code> function, following t=
he syntax like this:</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">char</span> x<span class=
=3D"token punctuation">;</span>
<span class=3D"token function">scanf</span><span class=3D"token punctuation=
">(</span><span class=3D"token string">" %c"</span><span class=3D"token pun=
ctuation">,</span><span class=3D"token operator">&amp;</span>x<span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">;</span>
<span class=3D"token function">printf</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token string">"character is %c"</span><span class=
=3D"token punctuation">,</span>x<span class=3D"token punctuation">)</span><=
/code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button clas=
s=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><sp=
an>Copy</span></button></div></div></div>
<h3>Integer type</h3>
<p>To store non-decimal numeric values, an integer type is used</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">int</span> variable_name=
<span class=3D"token punctuation">;</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<p>The format specifier of an integer is "%d"</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">int</span> a<span class=
=3D"token punctuation">;</span>
<span class=3D"token function">scanf</span><span class=3D"token punctuation=
">(</span><span class=3D"token string">"%d"</span><span class=3D"token punc=
tuation">,</span><span class=3D"token operator">&amp;</span>a<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">;</span>
<span class=3D"token function">printf</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token string">"%d"</span><span class=3D"token pun=
ctuation">,</span>a<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span></code></pre><div class=3D"toolbar"><div class=
=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" type=3D"button=
" data-copy-state=3D"copy"><span>Copy</span></button></div></div></div>
<h3>Float type</h3>
<p>To store decimal numeric values, float type is used</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">float</span> variable_na=
me<span class=3D"token punctuation">;</span></code></pre><div class=3D"tool=
bar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button"=
 type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div><=
/div></div>
<p>The format specifier of a float is "%f"</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">float</span> b<span clas=
s=3D"token punctuation">;</span>
<span class=3D"token function">scanf</span><span class=3D"token punctuation=
">(</span><span class=3D"token string">"%f"</span><span class=3D"token punc=
tuation">,</span><span class=3D"token operator">&amp;</span>b<span class=3D=
"token punctuation">)</span><span class=3D"token punctuation">;</span>
<span class=3D"token function">printf</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token string">"%f"</span><span class=3D"token pun=
ctuation">,</span>b<span class=3D"token punctuation">)</span><span class=3D=
"token punctuation">;</span></code></pre><div class=3D"toolbar"><div class=
=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" type=3D"button=
" data-copy-state=3D"copy"><span>Copy</span></button></div></div></div>
<h3>Double type</h3>
<p>To store a double-precision floating-point value we use double.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">double</span> variable_n=
ame<span class=3D"token punctuation">;</span></code></pre><div class=3D"too=
lbar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button=
" type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div>=
</div></div>
<p>The format specifier of double is "%f"</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">double</span> ch<span cl=
ass=3D"token punctuation">;</span>
<span class=3D"token function">scanf</span><span class=3D"token punctuation=
">(</span><span class=3D"token string">"%lf"</span><span class=3D"token pun=
ctuation">,</span><span class=3D"token operator">&amp;</span>ch<span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">;</span>
<span class=3D"token function">printf</span><span class=3D"token punctuatio=
n">(</span><span class=3D"token string">"%lf"</span><span class=3D"token pu=
nctuation">,</span>ch<span class=3D"token punctuation">)</span><span class=
=3D"token punctuation">;</span></code></pre><div class=3D"toolbar"><div cla=
ss=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" type=3D"butt=
on" data-copy-state=3D"copy"><span>Copy</span></button></div></div></div>
<h3>Void type</h3>
<p>The void type in C represents the absence of a type. It's often used in =
function declarations to specify that the function does not return any valu=
e. For example:</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">void</span> <span class=
=3D"token function">myFunction</span><span class=3D"token punctuation">(</s=
pan><span class=3D"token punctuation">)</span> <span class=3D"token punctua=
tion">{</span>
  <span class=3D"token comment">// Function code here</span>
<span class=3D"token punctuation">}</span>
</code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cla=
ss=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><s=
pan>Copy</span></button></div></div></div>
<p>In this context, the <code>void</code> keyword indicates that <code>myFu=
nction</code> does not return a value. It can also be used for function par=
ameters to indicate that a function takes no arguments</p>
<p></p><div class=3D"cwhads my-4"><ins class=3D"adsbygoogle" style=3D"displ=
ay:block" data-ad-client=3D"ca-pub-9655830461045889" data-ad-slot=3D"899997=
9664" data-ad-format=3D"auto" data-full-width-responsive=3D"true"></ins></d=
iv><p></p>
<h2>Escape Sequences</h2>
<p>Escape sequences in C are combinations of characters that begin with a b=
ackslash (<code>\</code>) and are used to represent characters that cannot =
be typed directly. These sequences are interpreted in a special way when us=
ed inside string literals or character constants.</p>
<p>For example, the escape sequence <code>\n</code> represents a newline ch=
aracter, and <code>\t</code> represents a tab character. Here are some esca=
pe sequence characters used in C language.</p>
<h3>Alarm or Beep</h3>
<p>\a produces a beep sound</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"\a"</span><span class=3D"token=
 punctuation">)</span><span class=3D"token punctuation">;</span> <span clas=
s=3D"token comment">// It produces a beep sound</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Backspace</h3>
<p>\b adds a backspace</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"Hello\bWorld"</span><span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation">;</span> =
<span class=3D"token comment">// It prints "HellWorld"</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Form feed</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"Page break here\fContinue text=
"</span><span class=3D"token punctuation">)</span><span class=3D"token punc=
tuation">;</span> <span class=3D"token comment">// It may create a page bre=
ak, but it's not supported everywhere</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Newline</h3>
<p>Newline Character</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"Line one\nLine two"</span><spa=
n class=3D"token punctuation">)</span><span class=3D"token punctuation">;</=
span> <span class=3D"token comment">// Prints two lines</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Carriage return</h3>
<p>The carriage return, represented by the escape sequence <code>\r</code> =
in the C programming language, is a control character that resets the curso=
r position to the beginning of the current line. It doesn't erase any chara=
cters but simply moves the cursor to the start of the line. The string "Hel=
lo" is printed first, then the carriage return moves the cursor back to the=
 beginning of the line, and "World" is printed, overwriting "Hello."</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>=20
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"Hello\rWorld"</span><span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation">;</span> =
<span class=3D"token comment">// Outputs "World" but behavior might vary de=
pending on the OS</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Tab</h3>
<p>It gives a tab space</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"Tabbed\ttext"</span><span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation">;</span> =
<span class=3D"token comment">// Adds a tab space</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Backslash</h3>
<p>It adds a backslash</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"\\"</span><span class=3D"token=
 punctuation">)</span><span class=3D"token punctuation">;</span> <span clas=
s=3D"token comment">// Prints a backslash</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Single quote</h3>
<p>It adds a single quotation mark</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"\'"</span><span class=3D"token=
 punctuation">)</span><span class=3D"token punctuation">;</span> <span clas=
s=3D"token comment">// Prints a single quotation mark</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Question mark</h3>
<p>It adds a question mark</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"\?"</span><span class=3D"token=
 punctuation">)</span><span class=3D"token punctuation">;</span> <span clas=
s=3D"token comment">// Prints a question mark</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Octal No.</h3>
<p>It represents the value of an octal number</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"\101"</span><span class=3D"tok=
en punctuation">)</span><span class=3D"token punctuation">;</span> <span cl=
ass=3D"token comment">// Prints 'A', which is 101 in octal</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Hexadecimal No.</h3>
<p>It represents the value of a hexadecimal number</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"\x41"</span><span class=3D"tok=
en punctuation">)</span><span class=3D"token punctuation">;</span> <span cl=
ass=3D"token comment">// Prints 'A', which is 41 in hexadecimal</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Null</h3>
<p>The null character is usually used to terminate a string</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span></span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"\0"</span><span class=3D"token=
 punctuation">)</span><span class=3D"token punctuation">;</span>
    <span class=3D"token keyword">char</span> str<span class=3D"token punct=
uation">[</span><span class=3D"token punctuation">]</span> <span class=3D"t=
oken operator">=3D</span> <span class=3D"token string">"Hello\0World"</span=
><span class=3D"token punctuation">;</span> <span class=3D"token comment">/=
/ The null character is used to terminate a string</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h2>Conditional Instructions</h2>
<p>Conditional statements are used to perform operations based on some cond=
ition.</p>
<h3>If Statement</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">if</span> <span class=3D=
"token punctuation">(</span><span class=3D"token comment">/* condition */</=
span><span class=3D"token punctuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token comment">/* code */</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>If-else Statement</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">if</span> <span class=3D=
"token punctuation">(</span><span class=3D"token comment">/* condition */</=
span><span class=3D"token punctuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token comment">/* code */</span>
<span class=3D"token punctuation">}</span>
<span class=3D"token keyword">else</span><span class=3D"token punctuation">=
{</span>
    <span class=3D"token comment">/* Code */</span>
<span class=3D"token punctuation">}</span>
</code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cla=
ss=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><s=
pan>Copy</span></button></div></div></div>
<h3>if else-if Statement</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">if</span> <span class=3D=
"token punctuation">(</span>condition<span class=3D"token punctuation">)</s=
pan> <span class=3D"token punctuation">{</span>
    <span class=3D"token comment">// Statements;</span>
<span class=3D"token punctuation">}</span>
<span class=3D"token keyword">else</span> <span class=3D"token keyword">if<=
/span> <span class=3D"token punctuation">(</span>condition<span class=3D"to=
ken punctuation">)</span><span class=3D"token punctuation">{</span>
    <span class=3D"token comment">// Statements;</span>
<span class=3D"token punctuation">}</span>
<span class=3D"token keyword">else</span><span class=3D"token punctuation">=
{</span>
    <span class=3D"token comment">// Statements</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>nested if-else</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">if</span> <span class=3D=
"token punctuation">(</span><span class=3D"token comment">/* condition */</=
span><span class=3D"token punctuation">)</span> <span class=3D"token punctu=
ation">{</span>
    <span class=3D"token keyword">if</span> <span class=3D"token punctuatio=
n">(</span><span class=3D"token comment">/* condition */</span><span class=
=3D"token punctuation">)</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token comment">/* code */</span>
    <span class=3D"token punctuation">}</span> <span class=3D"token keyword=
">else</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token comment">/* Code */</span>
    <span class=3D"token punctuation">}</span>
<span class=3D"token punctuation">}</span> <span class=3D"token keyword">el=
se</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token comment">/* Code */</span>
<span class=3D"token punctuation">}</span>
</code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cla=
ss=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><s=
pan>Copy</span></button></div></div></div>
<h3>Switch Case Statement</h3>
<p>It allows a variable to be tested for equality against a list of values =
(cases).</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">switch</span> <span clas=
s=3D"token punctuation">(</span>expression<span class=3D"token punctuation"=
>)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">case</span> constant<span class=3D"token =
operator">-</span>expression<span class=3D"token operator">:</span>
        statement1<span class=3D"token punctuation">;</span>
        statement2<span class=3D"token punctuation">;</span>
        <span class=3D"token keyword">break</span><span class=3D"token punc=
tuation">;</span>
    <span class=3D"token keyword">case</span> constant<span class=3D"token =
operator">-</span>expression<span class=3D"token operator">:</span>
        statement<span class=3D"token punctuation">;</span>
        <span class=3D"token keyword">break</span><span class=3D"token punc=
tuation">;</span>
    <span class=3D"token comment">// ...</span>
    <span class=3D"token keyword">default</span><span class=3D"token operat=
or">:</span>
        statement<span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span>
</code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cla=
ss=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><s=
pan>Copy</span></button></div></div></div>
<p></p><div class=3D"cwhads my-4"><ins class=3D"adsbygoogle" style=3D"displ=
ay:block" data-ad-client=3D"ca-pub-9655830461045889" data-ad-slot=3D"899997=
9664" data-ad-format=3D"auto" data-full-width-responsive=3D"true"></ins></d=
iv><p></p>
<h2>Iterative Statements</h2>
<p>Iterative statements facilitate programmers to execute any block of code=
 lines repeatedly and can be controlled as per conditions added by the prog=
rammer.</p>
<h3>while Loop</h3>
<p>It allows the execution of statements inside the block of the loop until=
 the condition of the loop succeeds.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">while</span> <span class=
=3D"token punctuation">(</span><span class=3D"token comment">/* condition *=
/</span><span class=3D"token punctuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token comment">/* code */</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>do-while loop</h3>
<p>It is an exit-controlled loop. It is very similar to the while loop with=
 one difference, i.e., the body of the do-while loop is executed at least o=
nce even if the expression is false</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">do</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token comment">/* code */</span>
<span class=3D"token punctuation">}</span> <span class=3D"token keyword">wh=
ile</span> <span class=3D"token punctuation">(</span><span class=3D"token c=
omment">/* condition */</span><span class=3D"token punctuation">)</span><sp=
an class=3D"token punctuation">;</span></code></pre><div class=3D"toolbar">=
<div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" type=
=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></div>=
</div>
<h3>for loop</h3>
<p>It is used to iterate the statements or a part of the program several ti=
mes. It is frequently used to traverse the data structures like the array a=
nd linked list.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">for</span> <span class=
=3D"token punctuation">(</span><span class=3D"token keyword">int</span> i <=
span class=3D"token operator">=3D</span> <span class=3D"token number">0</sp=
an><span class=3D"token punctuation">;</span> i <span class=3D"token operat=
or">&lt;</span> count<span class=3D"token punctuation">;</span> i<span clas=
s=3D"token operator">++</span><span class=3D"token punctuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token comment">/* code */</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Break Statement</h3>
<p>break keyword inside the loop is used to terminate the loop</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span> <span class=3D"token string">&lt;stdio.h&gt;</span></span>

<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">for</span> <span class=3D"token punctuati=
on">(</span><span class=3D"token keyword">int</span> i <span class=3D"token=
 operator">=3D</span> <span class=3D"token number">0</span><span class=3D"t=
oken punctuation">;</span> i <span class=3D"token operator">&lt;</span> <sp=
an class=3D"token number">10</span><span class=3D"token punctuation">;</spa=
n> i<span class=3D"token operator">++</span><span class=3D"token punctuatio=
n">)</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token keyword">if</span> <span class=3D"token punctu=
ation">(</span>i <span class=3D"token operator">=3D=3D</span> <span class=
=3D"token number">5</span><span class=3D"token punctuation">)</span> <span =
class=3D"token punctuation">{</span>
            <span class=3D"token function">printf</span><span class=3D"toke=
n punctuation">(</span><span class=3D"token string">"Loop is breaking at i =
=3D 5\n"</span><span class=3D"token punctuation">)</span><span class=3D"tok=
en punctuation">;</span>
            <span class=3D"token keyword">break</span><span class=3D"token =
punctuation">;</span> <span class=3D"token comment">// Exit the loop when i=
 is 5</span>
        <span class=3D"token punctuation">}</span>
        <span class=3D"token function">printf</span><span class=3D"token pu=
nctuation">(</span><span class=3D"token string">"i =3D %d\n"</span><span cl=
ass=3D"token punctuation">,</span> i<span class=3D"token punctuation">)</sp=
an><span class=3D"token punctuation">;</span>
    <span class=3D"token punctuation">}</span>

    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span>
</code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cla=
ss=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><s=
pan>Copy</span></button></div></div></div>
<p>Here is the output of the above code:</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">i <span class=3D"token operator">=3D</span> <span clas=
s=3D"token number">0</span>
i <span class=3D"token operator">=3D</span> <span class=3D"token number">1<=
/span>
i <span class=3D"token operator">=3D</span> <span class=3D"token number">2<=
/span>
i <span class=3D"token operator">=3D</span> <span class=3D"token number">3<=
/span>
i <span class=3D"token operator">=3D</span> <span class=3D"token number">4<=
/span>
Loop is breaking at i <span class=3D"token operator">=3D</span> <span class=
=3D"token number">5</span>
</code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cla=
ss=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><s=
pan>Copy</span></button></div></div></div>
<h3>Continue Statement</h3>
<p>continue keyword skips the rest of the current iteration of the loop and=
 returns to the starting point of the loop</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span> <span class=3D"token string">&lt;stdio.h&gt;</span></span>

<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">for</span> <span class=3D"token punctuati=
on">(</span><span class=3D"token keyword">int</span> i <span class=3D"token=
 operator">=3D</span> <span class=3D"token number">1</span><span class=3D"t=
oken punctuation">;</span> i <span class=3D"token operator">&lt;=3D</span> =
<span class=3D"token number">10</span><span class=3D"token punctuation">;</=
span> i<span class=3D"token operator">++</span><span class=3D"token punctua=
tion">)</span> <span class=3D"token punctuation">{</span>
        <span class=3D"token keyword">if</span> <span class=3D"token punctu=
ation">(</span>i <span class=3D"token operator">%</span> <span class=3D"tok=
en number">2</span> <span class=3D"token operator">=3D=3D</span> <span clas=
s=3D"token number">0</span><span class=3D"token punctuation">)</span> <span=
 class=3D"token punctuation">{</span>
            <span class=3D"token keyword">continue</span><span class=3D"tok=
en punctuation">;</span> <span class=3D"token comment">// Skip the rest of =
the loop body if i is even</span>
        <span class=3D"token punctuation">}</span>
        <span class=3D"token function">printf</span><span class=3D"token pu=
nctuation">(</span><span class=3D"token string">"%d "</span><span class=3D"=
token punctuation">,</span> i<span class=3D"token punctuation">)</span><spa=
n class=3D"token punctuation">;</span> <span class=3D"token comment">// Pri=
nt the odd numbers</span>
    <span class=3D"token punctuation">}</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span>

<span class=3D"token comment">// Output is 1 3 5 7 9</span>
</code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cla=
ss=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><s=
pan>Copy</span></button></div></div></div>
<h2>Functions &amp; Recursion</h2>
<p>Functions are used to divide an extensive program into smaller pieces. I=
t can be called multiple times to provide reusability and modularity to the=
 C program.</p>
<h3>Function Definition</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">return_type <span class=3D"token function">function_na=
me</span><span class=3D"token punctuation">(</span>data_type parameter<span=
 class=3D"token punctuation">.</span><span class=3D"token punctuation">.</s=
pan><span class=3D"token punctuation">.</span><span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">{</span>=20
<span class=3D"token comment">//code to be executed </span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Function Call</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">function_name</span><sp=
an class=3D"token punctuation">(</span>parameters<span class=3D"token punct=
uation">.</span><span class=3D"token punctuation">.</span><span class=3D"to=
ken punctuation">.</span><span class=3D"token punctuation">)</span><span cl=
ass=3D"token punctuation">;</span></code></pre><div class=3D"toolbar"><div =
class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" type=3D"b=
utton" data-copy-state=3D"copy"><span>Copy</span></button></div></div></div=
>
<h3>return_type in functions</h3>
<p>The function return statement returns the specified value or data item t=
o the caller. If we do not want to return any value simply place a void bef=
ore the function name while defining it.</p>
<div class=3D"code-toolbar"><pre class=3D"language-python" tabindex=3D"0"><=
code class=3D"language-python">return_type function_name<span class=3D"toke=
n punctuation">(</span><span class=3D"token punctuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">return</span> value<span class=3D"token p=
unctuation">;</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Parameters in Python function</h3>
<p>Parameters are the values passed inside the parenthesis of the function =
while defining as well as while calling.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">return_type <span class=3D"token function">function_na=
me</span><span class=3D"token punctuation">(</span>data_type parameter<span=
 class=3D"token punctuation">.</span><span class=3D"token punctuation">.</s=
pan><span class=3D"token punctuation">.</span><span class=3D"token punctuat=
ion">)</span><span class=3D"token punctuation">{</span>    <span class=3D"t=
oken comment">//defining the functions with parameters</span>
    <span class=3D"token comment">//code to be executed </span>
<span class=3D"token punctuation">}</span>
<span class=3D"token function">function_name</span><span class=3D"token pun=
ctuation">(</span>parameter<span class=3D"token punctuation">.</span><span =
class=3D"token punctuation">.</span><span class=3D"token punctuation">.</sp=
an><span class=3D"token punctuation">)</span><span class=3D"token punctuati=
on">;</span>    <span class=3D"token comment">//calling the functions with =
parameters</span></code></pre><div class=3D"toolbar"><div class=3D"toolbar-=
item"><button class=3D"copy-to-clipboard-button" type=3D"button" data-copy-=
state=3D"copy"><span>Copy</span></button></div></div></div>
<h3>Ways of calling a function</h3>
<ol>
<li>With return value and with parameters</li>
<li>Without return value and with parameters</li>
<li>With return value and without parameters</li>
<li>Without return value and without parameters</li>
</ol>
<h3>Recursion</h3>
<p>Recursion is when a function calls a copy of itself to work on a minor p=
roblem. And the function that calls itself is known as the Recursive functi=
on.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">void</span> <span class=
=3D"token function">recurse</span><span class=3D"token punctuation">(</span=
><span class=3D"token punctuation">)</span>
<span class=3D"token punctuation">{</span>
    <span class=3D"token punctuation">.</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token punctuation">.</span> <span class=3D"toke=
n punctuation">.</span><span class=3D"token punctuation">.</span> <span cla=
ss=3D"token punctuation">.</span><span class=3D"token punctuation">.</span>=
<span class=3D"token punctuation">.</span>
    <span class=3D"token function">recurse</span><span class=3D"token punct=
uation">(</span><span class=3D"token punctuation">)</span><span class=3D"to=
ken punctuation">;</span>
    <span class=3D"token punctuation">.</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token punctuation">.</span> <span class=3D"toke=
n punctuation">.</span><span class=3D"token punctuation">.</span> <span cla=
ss=3D"token punctuation">.</span><span class=3D"token punctuation">.</span>=
<span class=3D"token punctuation">.</span>
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h2>Pointers</h2>
<p>A pointer is a variable that contains the address of another variable,</=
p>
<h3>Declaration</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">datatype <span class=3D"token operator">*</span>var_na=
me<span class=3D"token punctuation">;</span></code></pre><div class=3D"tool=
bar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button"=
 type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div><=
/div></div>
<p>We can allocate the address of the pointing variable to the pointer vari=
able</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span> <span class=3D"token string">&lt;stdio.h&gt;</span></span>

<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">int</span> <span class=3D"token operator"=
>*</span>ptr<span class=3D"token punctuation">,</span> x<span class=3D"toke=
n punctuation">;</span>
    x <span class=3D"token operator">=3D</span> <span class=3D"token number=
">15</span><span class=3D"token punctuation">;</span>
    ptr <span class=3D"token operator">=3D</span> <span class=3D"token oper=
ator">&amp;</span>x<span class=3D"token punctuation">;</span>

    <span class=3D"token comment">// This will print the address of x, not =
the value 15</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"%p"</span><span class=3D"token=
 punctuation">,</span> ptr<span class=3D"token punctuation">)</span><span c=
lass=3D"token punctuation">;</span>

    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span>
 </code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cl=
ass=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><=
span>Copy</span></button></div></div></div>
<h3>Dereferencing pointer variable</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span> <span class=3D"token string">&lt;stdio.h&gt;</span></span>

<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">int</span> <span class=3D"token operator"=
>*</span>ptr<span class=3D"token punctuation">,</span> x<span class=3D"toke=
n punctuation">;</span>
    x <span class=3D"token operator">=3D</span> <span class=3D"token number=
">12</span><span class=3D"token punctuation">;</span>
    ptr <span class=3D"token operator">=3D</span> <span class=3D"token oper=
ator">&amp;</span>x<span class=3D"token punctuation">;</span> <span class=
=3D"token comment">// Assign the address of x to ptr</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"%d"</span><span class=3D"token=
 punctuation">,</span> <span class=3D"token operator">*</span>ptr<span clas=
s=3D"token punctuation">)</span><span class=3D"token punctuation">;</span> =
<span class=3D"token comment">// Dereference ptr to print the value of x</s=
pan>

    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span>
</code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cla=
ss=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><s=
pan>Copy</span></button></div></div></div>
<h2>Arrays</h2>
<p>An array is a collection of data items of the same type.</p>
<h3>Declaration</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">data_type array_name<span class=3D"token punctuation">=
[</span>array_size<span class=3D"token punctuation">]</span><span class=3D"=
token punctuation">;</span></code></pre><div class=3D"toolbar"><div class=
=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" type=3D"button=
" data-copy-state=3D"copy"><span>Copy</span></button></div></div></div>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span><span class=3D"token string">&lt;stdio.h&gt;</span>                 =
        </span>
<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span>                              =20
<span class=3D"token punctuation">{</span>
<span class=3D"token keyword">int</span> arr<span class=3D"token punctuatio=
n">[</span><span class=3D"token number">10</span><span class=3D"token punct=
uation">]</span><span class=3D"token punctuation">;</span>  =20
<span class=3D"token punctuation">}</span></code></pre><div class=3D"toolba=
r"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" t=
ype=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></d=
iv></div>
<h3>Accessing element</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">data_type variable_name <span class=3D"token operator"=
>=3D</span> array<span class=3D"token punctuation">[</span>index<span class=
=3D"token punctuation">]</span><span class=3D"token punctuation">;</span></=
code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button class=
=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><spa=
n>Copy</span></button></div></div></div>
<p></p><div class=3D"cwhads my-4"><ins class=3D"adsbygoogle" style=3D"displ=
ay:block" data-ad-client=3D"ca-pub-9655830461045889" data-ad-slot=3D"899997=
9664" data-ad-format=3D"auto" data-full-width-responsive=3D"true"></ins></d=
iv><p></p>
<h2>Strings</h2>
<p>A string is a 1-D character array terminated by a null character ('\0')<=
/p>
<h3>Declaration</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">char</span> str_name<spa=
n class=3D"token punctuation">[</span>size<span class=3D"token punctuation"=
>]</span><span class=3D"token punctuation">;</span></code></pre><div class=
=3D"toolbar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard=
-button" type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button=
></div></div></div>
<h3>gets() function</h3>
<p>It allows you to enter a multi-word string.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">gets</span><span class=
=3D"token punctuation">(</span><span class=3D"token string">"string"</span>=
<span class=3D"token punctuation">)</span><span class=3D"token punctuation"=
>;</span></code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><b=
utton class=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D=
"copy"><span>Copy</span></button></div></div></div>
<h3>puts() function</h3>
<p>It is used to show string output</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">puts</span><span class=
=3D"token punctuation">(</span><span class=3D"token string">"string"</span>=
<span class=3D"token punctuation">)</span><span class=3D"token punctuation"=
>;</span></code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><b=
utton class=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D=
"copy"><span>Copy</span></button></div></div></div>
<h3>fgets() function</h3>
<p>The&nbsp;<code>gets()</code> function is considered unsafe, and it is be=
tter to use <code>fgets()</code> instead.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token macro property"><span class=3D"to=
ken directive-hash">#</span><span class=3D"token directive keyword">include=
</span> <span class=3D"token string">&lt;stdio.h&gt;</span></span>

<span class=3D"token keyword">int</span> <span class=3D"token function">mai=
n</span><span class=3D"token punctuation">(</span><span class=3D"token punc=
tuation">)</span> <span class=3D"token punctuation">{</span>
    <span class=3D"token keyword">char</span> str<span class=3D"token punct=
uation">[</span><span class=3D"token number">50</span><span class=3D"token =
punctuation">]</span><span class=3D"token punctuation">;</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"Enter a string: "</span><span =
class=3D"token punctuation">)</span><span class=3D"token punctuation">;</sp=
an>
    <span class=3D"token function">fgets</span><span class=3D"token punctua=
tion">(</span>str<span class=3D"token punctuation">,</span> <span class=3D"=
token keyword">sizeof</span><span class=3D"token punctuation">(</span>str<s=
pan class=3D"token punctuation">)</span><span class=3D"token punctuation">,=
</span> <span class=3D"token constant">stdin</span><span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">;</span>
    <span class=3D"token function">printf</span><span class=3D"token punctu=
ation">(</span><span class=3D"token string">"You entered: %s"</span><span c=
lass=3D"token punctuation">,</span> str<span class=3D"token punctuation">)<=
/span><span class=3D"token punctuation">;</span>
    <span class=3D"token keyword">return</span> <span class=3D"token number=
">0</span><span class=3D"token punctuation">;</span>
<span class=3D"token punctuation">}</span>
</code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cla=
ss=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><s=
pan>Copy</span></button></div></div></div>
<h3>String Functions</h3>
<h3>strlen() function</h3>
<p>It is used to calculate the length of the string</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">strlen</span><span clas=
s=3D"token punctuation">(</span>string_name<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">;</span></code></pre><div class=
=3D"toolbar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard=
-button" type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button=
></div></div></div>
<h3>strcpy() function</h3>
<p>It is used to copy the content of second-string into the first string pa=
ssed to it</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">strcpy</span><span clas=
s=3D"token punctuation">(</span>destination<span class=3D"token punctuation=
">,</span> source<span class=3D"token punctuation">)</span><span class=3D"t=
oken punctuation">;</span></code></pre><div class=3D"toolbar"><div class=3D=
"toolbar-item"><button class=3D"copy-to-clipboard-button" type=3D"button" d=
ata-copy-state=3D"copy"><span>Copy</span></button></div></div></div>
<h3>strcat() function</h3>
<p>It is used to concatenate two strings</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">strcat</span><span clas=
s=3D"token punctuation">(</span>first_string<span class=3D"token punctuatio=
n">,</span> second_string<span class=3D"token punctuation">)</span><span cl=
ass=3D"token punctuation">;</span></code></pre><div class=3D"toolbar"><div =
class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" type=3D"b=
utton" data-copy-state=3D"copy"><span>Copy</span></button></div></div></div=
>
<h3>strcmp() function</h3>
<p>It is used to compare two strings</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">strcmp</span><span clas=
s=3D"token punctuation">(</span>first_string<span class=3D"token punctuatio=
n">,</span> second_string<span class=3D"token punctuation">)</span><span cl=
ass=3D"token punctuation">;</span></code></pre><div class=3D"toolbar"><div =
class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" type=3D"b=
utton" data-copy-state=3D"copy"><span>Copy</span></button></div></div></div=
>
<h3>strlwr() function</h3>
<p>It is used to convert characters of strings into lowercase</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">strlwr</span><span clas=
s=3D"token punctuation">(</span>string_name<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">;</span></code></pre><div class=
=3D"toolbar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard=
-button" type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button=
></div></div></div>
<h3>strupr() function</h3>
<p>It is used to convert characters of strings into uppercase</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">strupr</span><span clas=
s=3D"token punctuation">(</span>string_name<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">;</span></code></pre><div class=
=3D"toolbar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard=
-button" type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button=
></div></div></div>
<h3>strrev() function</h3>
<p>It is used to reverse the string</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">strrev</span><span clas=
s=3D"token punctuation">(</span>string_name<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">;</span></code></pre><div class=
=3D"toolbar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard=
-button" type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button=
></div></div></div>
<h2>Structures</h2>
<p>The structure is a collection of variables of different types under a si=
ngle name. Defining structure means creating a new data type.</p>
<h3>Structure syntax</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">struct</span> <span clas=
s=3D"token class-name">structureName</span>=20
<span class=3D"token punctuation">{</span>
    dataType member1<span class=3D"token punctuation">;</span>
    dataType member2<span class=3D"token punctuation">;</span>
    <span class=3D"token punctuation">.</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token punctuation">.</span>
<span class=3D"token punctuation">}</span><span class=3D"token punctuation"=
>;</span></code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><b=
utton class=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D=
"copy"><span>Copy</span></button></div></div></div>
<h3>typedef keyword</h3>
<p>typedef function allows users to provide alternative names for the primi=
tive and user-defined data types.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token keyword">typedef</span> <span cla=
ss=3D"token keyword">struct</span> <span class=3D"token class-name">structu=
reName</span>=20
<span class=3D"token punctuation">{</span>
    dataType member1<span class=3D"token punctuation">;</span>
    dataType member2<span class=3D"token punctuation">;</span>
    <span class=3D"token punctuation">.</span><span class=3D"token punctuat=
ion">.</span><span class=3D"token punctuation">.</span>
<span class=3D"token punctuation">}</span> new_name<span class=3D"token pun=
ctuation">;</span></code></pre><div class=3D"toolbar"><div class=3D"toolbar=
-item"><button class=3D"copy-to-clipboard-button" type=3D"button" data-copy=
-state=3D"copy"><span>Copy</span></button></div></div></div>
<p></p><div class=3D"cwhads my-4"><ins class=3D"adsbygoogle" style=3D"displ=
ay:block" data-ad-client=3D"ca-pub-9655830461045889" data-ad-slot=3D"899997=
9664" data-ad-format=3D"auto" data-full-width-responsive=3D"true"></ins></d=
iv><p></p>
<h2>File Handling</h2>
<p>A set of methods for handling File IO (read/write/append) in C language<=
/p>
<h3>FILE pointer</h3>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">FILE <span class=3D"token operator">*</span>filePointe=
r<span class=3D"token punctuation">;</span></code></pre><div class=3D"toolb=
ar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" =
type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></=
div></div>
<h3>Opening a file</h3>
<p>It is used to open a file in C.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">filePointer <span class=3D"token operator">=3D</span> =
<span class=3D"token function">fopen</span><span class=3D"token punctuation=
">(</span>fileName<span class=3D"token punctuation">.</span>txt<span class=
=3D"token punctuation">,</span> w<span class=3D"token punctuation">)</span>=
</code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button cla=
ss=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><s=
pan>Copy</span></button></div></div></div>
<h3>fscanf() function</h3>
<p>It is used to read the content of a file.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">fscanf</span><span clas=
s=3D"token punctuation">(</span>FILE <span class=3D"token operator">*</span=
>stream<span class=3D"token punctuation">,</span> <span class=3D"token keyw=
ord">const</span> <span class=3D"token keyword">char</span> <span class=3D"=
token operator">*</span>format<span class=3D"token punctuation">,</span> <s=
pan class=3D"token punctuation">.</span><span class=3D"token punctuation">.=
</span><span class=3D"token punctuation">.</span><span class=3D"token punct=
uation">)</span></code></pre><div class=3D"toolbar"><div class=3D"toolbar-i=
tem"><button class=3D"copy-to-clipboard-button" type=3D"button" data-copy-s=
tate=3D"copy"><span>Copy</span></button></div></div></div>
<h3>fprintf() function</h3>
<p>It is used to write content into the file.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">fprintf</span><span cla=
ss=3D"token punctuation">(</span>FILE <span class=3D"token operator">*</spa=
n>fptr<span class=3D"token punctuation">,</span> <span class=3D"token keywo=
rd">const</span> <span class=3D"token keyword">char</span> <span class=3D"t=
oken operator">*</span>str<span class=3D"token punctuation">,</span> <span =
class=3D"token punctuation">.</span><span class=3D"token punctuation">.</sp=
an><span class=3D"token punctuation">.</span><span class=3D"token punctuati=
on">)</span><span class=3D"token punctuation">;</span></code></pre><div cla=
ss=3D"toolbar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboa=
rd-button" type=3D"button" data-copy-state=3D"copy"><span>Copy</span></butt=
on></div></div></div>
<h3>fgetc() function</h3>
<p>It reads a character from a file opened in read mode. It returns EOF on =
reaching the end of the file.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">fgetc</span><span class=
=3D"token punctuation">(</span>FILE <span class=3D"token operator">*</span>=
pointer<span class=3D"token punctuation">)</span><span class=3D"token punct=
uation">;</span></code></pre><div class=3D"toolbar"><div class=3D"toolbar-i=
tem"><button class=3D"copy-to-clipboard-button" type=3D"button" data-copy-s=
tate=3D"copy"><span>Copy</span></button></div></div></div>
<h3>fputc() function</h3>
<p>It writes a character to a file opened in write mode</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">fputc</span><span class=
=3D"token punctuation">(</span><span class=3D"token keyword">char</span><sp=
an class=3D"token punctuation">,</span> FILE <span class=3D"token operator"=
>*</span>pointer<span class=3D"token punctuation">)</span><span class=3D"to=
ken punctuation">;</span></code></pre><div class=3D"toolbar"><div class=3D"=
toolbar-item"><button class=3D"copy-to-clipboard-button" type=3D"button" da=
ta-copy-state=3D"copy"><span>Copy</span></button></div></div></div>
<h3>Closing a file</h3>
<p>It closes the file.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">fclose</span><span clas=
s=3D"token punctuation">(</span>filePointer<span class=3D"token punctuation=
">)</span><span class=3D"token punctuation">;</span></code></pre><div class=
=3D"toolbar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard=
-button" type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button=
></div></div></div>
<h2>Dynamic Memory Allocation</h2>
<p>A set of functions for dynamic memory allocation from the heap. These me=
thods are used to use the dynamic memory which makes our C programs more ef=
ficient</p>
<h3>malloc() function</h3>
<p>Stands for 'Memory allocation' and reserves a block of memory with the g=
iven amount of bytes.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">ptr <span class=3D"token operator">=3D</span> <span cl=
ass=3D"token punctuation">(</span>castType<span class=3D"token operator">*<=
/span><span class=3D"token punctuation">)</span> <span class=3D"token funct=
ion">malloc</span><span class=3D"token punctuation">(</span>size<span class=
=3D"token punctuation">)</span><span class=3D"token punctuation">;</span></=
code></pre><div class=3D"toolbar"><div class=3D"toolbar-item"><button class=
=3D"copy-to-clipboard-button" type=3D"button" data-copy-state=3D"copy"><spa=
n>Copy</span></button></div></div></div>
<h3>calloc() function</h3>
<p>Stands for 'Contiguous allocation' and reserves n blocks of memory with =
the given amount of bytes.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">ptr <span class=3D"token operator">=3D</span> <span cl=
ass=3D"token punctuation">(</span>castType<span class=3D"token operator">*<=
/span><span class=3D"token punctuation">)</span><span class=3D"token functi=
on">calloc</span><span class=3D"token punctuation">(</span>n<span class=3D"=
token punctuation">,</span> size<span class=3D"token punctuation">)</span><=
span class=3D"token punctuation">;</span></code></pre><div class=3D"toolbar=
"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" ty=
pe=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></di=
v></div>
<h3>free function</h3>
<p>It is used to free the allocated memory.</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c"><span class=3D"token function">free</span><span class=
=3D"token punctuation">(</span>ptr<span class=3D"token punctuation">)</span=
><span class=3D"token punctuation">;</span></code></pre><div class=3D"toolb=
ar"><div class=3D"toolbar-item"><button class=3D"copy-to-clipboard-button" =
type=3D"button" data-copy-state=3D"copy"><span>Copy</span></button></div></=
div></div>
<h3>realloc() function</h3>
<p>If the allocated memory is insufficient, then we can change the size of =
previously allocated memory using this function for efficiency purposes</p>
<div class=3D"code-toolbar"><pre class=3D"language-c" tabindex=3D"0"><code =
class=3D"language-c">ptr <span class=3D"token operator">=3D</span> <span cl=
ass=3D"token function">realloc</span><span class=3D"token punctuation">(</s=
pan>ptr<span class=3D"token punctuation">,</span> x<span class=3D"token pun=
ctuation">)</span><span class=3D"token punctuation">;</span></code></pre><d=
iv class=3D"toolbar"><div class=3D"toolbar-item"><button class=3D"copy-to-c=
lipboard-button" type=3D"button" data-copy-state=3D"copy"><span>Copy</span>=
</button></div></div></div>
<p>I hope the provided information covers what you need. I tried to cover a=
lmost all the important topics of C If you'd like to download my handwritte=
n notes, please visit&nbsp;<a title=3D"cwh notes" href=3D"https://www.codew=
ithharry.com/notes/" target=3D"_blank" rel=3D"noopener">Code with Harry's N=
otes</a></p>
<p>For your convenience, a link to download this cheatsheet as a PDF is pro=
vided below:</p>
<div><a class=3D"" role=3D"button" href=3D"https://api.codewithharry.com/me=
dia/blogFiles/c-cheatsheet/C_Cheatsheet_CodeWithHarry.pdf" target=3D"_blank=
" rel=3D"noopener">Download this Cheatsheet as PDF</a></div></div></div></d=
iv></div><div class=3D"flex items-center justify-center mt-2 mb-7 w-full ma=
x-w-5xl mx-auto rounded-lg dark:border-black"><form class=3D"w-full bg-whit=
e shadow-xl mx-4 md:mx-16 lg:mx-0 mb-4 rounded-lg px-4 pt-2 dark:bg-slate-7=
00"><div class=3D"flex flex-wrap -mx-3 mb-6"><h2 class=3D"px-4 pt-3 pb-2 te=
xt-gray-800 text-lg lg:text-xl font-bold my-4 dark:text-gray-300">Add a new=
 comment</h2><div class=3D"w-full md:w-full px-3 mb-2 mt-2"><textarea class=
=3D"bg-gray-100 rounded border border-gray-400 leading-normal resize-none w=
-full h-20 py-2 px-3 font-medium placeholder-gray-700 focus:outline-none fo=
cus:bg-white dark:bg-slate-600 dark:text-gray-200 dark:placeholder-gray-400=
" name=3D"comment" placeholder=3D"Type Your Comment" required=3D""></textar=
ea></div><div class=3D"w-full md:w-full flex items-start px-3"><div class=
=3D"-mr-1"><input type=3D"submit" class=3D"disabled:bg-gray-200 disabled:te=
xt-gray-400 disabled:cursor-default text-white bg-purple-700 hover:bg-purpl=
e-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-=
3 py-2 text-center inline-flex items-center mx-1 cursor-pointer " value=3D"=
Post Comment"></div></div></div></form></div><div class=3D"max-w-5xl mx-aut=
o pt-4 pb-8"><h3 class=3D"mb-2 mx-4 text-2xl font-semibold dark:text-gray-3=
00 ">Comments (33)</h3><hr class=3D"mb-1"><div class=3D"infinite-scroll-com=
ponent__outerdiv"><div class=3D"infinite-scroll-component " style=3D"height=
: auto; overflow: auto;"><div class=3D"max-w-screen-sm px-4"><div class=3D"=
flex my-3 "><div class=3D"flex-shrink-0 mr-3"><img src=3D"https://www.codew=
ithharry.com/img/user.png" alt=3D"" class=3D"mt-2 rounded-full w-8 h-8 sm:w=
-10 sm:h-10"></div><div class=3D"flex-1 border rounded-lg px-4 py-2 sm:px-6=
 sm:py-4 leading-relaxed max-w-[75vw] break-words dark:bg-slate-700 dark:bo=
rder-black"><strong class=3D"dark:text-gray-200">xaarya999_gm</strong><span=
 class=3D"text-xs text-gray-500 ml-2 dark:text-gray-400">2024-02-14</span><=
div class=3D"flex"><p class=3D"text-sm mt-1 dark:text-gray-100">The Coolest=
 programming teacher ever!=F0=9F=98=8E</p></div><button class=3D"mt-3 upper=
case tracking-wide text-white bg-purple-600 rounded p-2 font-bold text-xs c=
ursor-pointer block">Reply</button><div class=3D"flex space-x-4"></div></di=
v></div></div><div class=3D"max-w-screen-sm px-4"><div class=3D"flex my-3 "=
><div class=3D"flex-shrink-0 mr-3"><img src=3D"https://www.codewithharry.co=
m/img/user.png" alt=3D"" class=3D"mt-2 rounded-full w-8 h-8 sm:w-10 sm:h-10=
"></div><div class=3D"flex-1 border rounded-lg px-4 py-2 sm:px-6 sm:py-4 le=
ading-relaxed max-w-[75vw] break-words dark:bg-slate-700 dark:border-black"=
><strong class=3D"dark:text-gray-200">mohitkiritbhaipatel159</strong><span =
class=3D"text-xs text-gray-500 ml-2 dark:text-gray-400">2024-02-04</span><d=
iv class=3D"flex"><p class=3D"text-sm mt-1 dark:text-gray-100">Thank you so=
 much Harry sir =E2=9D=A4=EF=B8=8F=F0=9F=98=8A</p></div><button class=3D"mt=
-3 uppercase tracking-wide text-white bg-purple-600 rounded p-2 font-bold t=
ext-xs cursor-pointer block">Reply</button><div class=3D"flex space-x-4"></=
div></div></div></div><div class=3D"max-w-screen-sm px-4"><div class=3D"fle=
x my-3 "><div class=3D"flex-shrink-0 mr-3"><img src=3D"https://www.codewith=
harry.com/img/user.png" alt=3D"" class=3D"mt-2 rounded-full w-8 h-8 sm:w-10=
 sm:h-10"></div><div class=3D"flex-1 border rounded-lg px-4 py-2 sm:px-6 sm=
:py-4 leading-relaxed max-w-[75vw] break-words dark:bg-slate-700 dark:borde=
r-black"><strong class=3D"dark:text-gray-200">makwanagautam411_gm</strong><=
span class=3D"text-xs text-gray-500 ml-2 dark:text-gray-400">2024-01-22</sp=
an><div class=3D"flex"><p class=3D"text-sm mt-1 dark:text-gray-100">Thank y=
ou Harry sir you provide one the best notes and cheatSheet.</p></div><div c=
lass=3D"flex space-x-4"><button class=3D"my-3 uppercase tracking-wide text-=
gray-400 font-bold text-xs cursor-pointer">View all replies</button></div><=
button class=3D"mt-3 uppercase tracking-wide text-white bg-purple-600 round=
ed p-2 font-bold text-xs cursor-pointer block">Reply</button><div class=3D"=
flex space-x-4"></div></div></div></div><div class=3D"max-w-screen-sm px-4"=
><div class=3D"flex my-3 "><div class=3D"flex-shrink-0 mr-3"><img src=3D"ht=
tps://www.codewithharry.com/img/user.png" alt=3D"" class=3D"mt-2 rounded-fu=
ll w-8 h-8 sm:w-10 sm:h-10"></div><div class=3D"flex-1 border rounded-lg px=
-4 py-2 sm:px-6 sm:py-4 leading-relaxed max-w-[75vw] break-words dark:bg-sl=
ate-700 dark:border-black"><strong class=3D"dark:text-gray-200">shoaibhasan=
0940_gm</strong><span class=3D"text-xs text-gray-500 ml-2 dark:text-gray-40=
0">2023-12-05</span><div class=3D"flex"><p class=3D"text-sm mt-1 dark:text-=
gray-100">Exam saviour cheet sheet how can i appreciate this man ? Love you=
 harry bhai =E2=9D=A4=EF=B8=8F</p></div><button class=3D"mt-3 uppercase tra=
cking-wide text-white bg-purple-600 rounded p-2 font-bold text-xs cursor-po=
inter block">Reply</button><div class=3D"flex space-x-4"></div></div></div>=
</div><div class=3D"max-w-screen-sm px-4"><div class=3D"flex my-3 "><div cl=
ass=3D"flex-shrink-0 mr-3"><img src=3D"https://www.codewithharry.com/img/us=
er.png" alt=3D"" class=3D"mt-2 rounded-full w-8 h-8 sm:w-10 sm:h-10"></div>=
<div class=3D"flex-1 border rounded-lg px-4 py-2 sm:px-6 sm:py-4 leading-re=
laxed max-w-[75vw] break-words dark:bg-slate-700 dark:border-black"><strong=
 class=3D"dark:text-gray-200">kushalgahlyan</strong><span class=3D"text-xs =
text-gray-500 ml-2 dark:text-gray-400">2023-11-10</span><div class=3D"flex"=
><p class=3D"text-sm mt-1 dark:text-gray-100">Thiankyou soo much sir for th=
ese important content. No can do this. Again Thankyou soo much sir.
</p></div><button class=3D"mt-3 uppercase tracking-wide text-white bg-purpl=
e-600 rounded p-2 font-bold text-xs cursor-pointer block">Reply</button><di=
v class=3D"flex space-x-4"></div></div></div></div></div></div></div></div>=
</div></div><footer class=3D"text-gray-600 bg-white body-font dark:bg-gray-=
800 dark:text-white "><div class=3D"container mx-auto py-4 px-5 flex flex-w=
rap flex-col sm:flex-row"><div class=3D"flex title-font font-medium items-c=
enter md:justify-start justify-center text-gray-900 dark:text-gray-200"><im=
g width=3D"48" height=3D"48" src=3D"https://www.codewithharry.com/img/logo-=
blue.png" name=3D"logo" alt=3D"CodeWithHarry Logo" class=3D"rounded h-12"><=
div class=3D"ml-3 text-xl">CodeWithHarry</div></div><p class=3D"text-sm tex=
t-gray-500 sm:ml-4 sm:pl-4 sm:border-l-2 sm:border-gray-200 sm:py-2 mt-4 md=
:mt-2 mb-2 md:mb-0 text-center dark:text-gray-400">Copyright =C2=A9 <!-- --=
>2024<!-- --> CodeWithHarry.com<!-- --></p><div class=3D"inline-flex sm:ml-=
auto sm:mt-0 mt-2 justify-center sm:justify-start" style=3D"align-items:cen=
ter"><a href=3D"https://www.facebook.com/codewithharry" aria-label=3D"faceb=
ook" target=3D"_blank" rel=3D"noreferrer" class=3D"text-gray-500 dark:text-=
gray-300"><svg fill=3D"currentColor" stroke-linecap=3D"round" stroke-linejo=
in=3D"round" stroke-width=3D"2" class=3D"w-5 h-5" viewBox=3D"0 0 24 24"><pa=
th d=3D"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z"></p=
ath></svg></a><a href=3D"https://www.twitter.com/codewithharry" aria-label=
=3D"twitter" target=3D"_blank" rel=3D"noreferrer" class=3D"ml-3 text-gray-5=
00 dark:text-gray-300"><svg fill=3D"currentColor" stroke-linecap=3D"round" =
stroke-linejoin=3D"round" stroke-width=3D"2" class=3D"w-5 h-5" viewBox=3D"0=
 0 24 24"><path d=3D"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1=
A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.=
5 0 00-.08-.83A7.72 7.72 0 0023 3z"></path></svg></a><a href=3D"https://www=
.instagram.com/codewithharry" aria-label=3D"instagram" target=3D"_blank" re=
l=3D"noreferrer" class=3D"ml-3 text-gray-500 dark:text-gray-300"><svg fill=
=3D"none" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-linejoin=
=3D"round" stroke-width=3D"2" class=3D"w-5 h-5" viewBox=3D"0 0 24 24"><rect=
 width=3D"20" height=3D"20" x=3D"2" y=3D"2" rx=3D"5" ry=3D"5"></rect><path =
d=3D"M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01"></path></svg=
></a><a href=3D"https://www.github.com/codewithharry" aria-label=3D"github"=
 target=3D"_blank" rel=3D"noreferrer" class=3D"ml-3 text-gray-500 dark:text=
-gray-300"><svg stroke=3D"currentColor" fill=3D"currentColor" stroke-width=
=3D"0" viewBox=3D"0 0 1024 1024" class=3D"text-xl" height=3D"1em" width=3D"=
1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M511.6 76.3C264.3 76.2=
 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.=
2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-=
15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60=
.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-1=
12.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.=
4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5=
 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 =
0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-=
247.2-200.4-447.3-447.5-447.3z"></path></svg></a></div></div></footer></div=
></div><next-route-announcer><p aria-live=3D"assertive" id=3D"__next-route-=
announcer__" role=3D"alert" style=3D"border: 0px; clip: rect(0px, 0px, 0px,=
 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position:=
 absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;"></p></n=
ext-route-announcer></body><grammarly-desktop-integration data-grammarly-sh=
adow-root=3D"true"><template shadowmode=3D"open"><div aria-label=3D"grammar=
ly-integration" role=3D"group" tabindex=3D"-1" class=3D"grammarly-desktop-i=
ntegration" data-content=3D"{&quot;mode&quot;:&quot;full&quot;,&quot;isActi=
ve&quot;:true,&quot;isUserDisabled&quot;:false}"></div></template></grammar=
ly-desktop-integration></html>
------MultipartBoundary--jp4s04Prax7r58rcbeQOam2nREQD6vuJy3WOXxojCZ----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap

@charset "utf-8";

@font-face { font-family: Poppins; font-style: normal; font-weight: 300; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiByp8=
kv8JHgFVrLDz8Z11lFc-K.woff2") format("woff2"); unicode-range: U+900-97F, U+=
1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0=
-A8FF, U+11B00-11B09; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 300; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiByp8=
kv8JHgFVrLDz8Z1JlFc-K.woff2") format("woff2"); unicode-range: U+100-2AF, U+=
304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20=
C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 300; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiByp8=
kv8JHgFVrLDz8Z1xlFQ.woff2") format("woff2"); unicode-range: U+0-FF, U+131, =
U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F=
, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 400; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiEyp8=
kv8JHgFVrJJbecmNE.woff2") format("woff2"); unicode-range: U+900-97F, U+1CD0=
-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0-A8F=
F, U+11B00-11B09; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 400; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiEyp8=
kv8JHgFVrJJnecmNE.woff2") format("woff2"); unicode-range: U+100-2AF, U+304,=
 U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, =
U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 400; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiEyp8=
kv8JHgFVrJJfecg.woff2") format("woff2"); unicode-range: U+0-FF, U+131, U+15=
2-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+=
2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 500; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiByp8=
kv8JHgFVrLGT9Z11lFc-K.woff2") format("woff2"); unicode-range: U+900-97F, U+=
1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0=
-A8FF, U+11B00-11B09; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 500; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiByp8=
kv8JHgFVrLGT9Z1JlFc-K.woff2") format("woff2"); unicode-range: U+100-2AF, U+=
304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20=
C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 500; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiByp8=
kv8JHgFVrLGT9Z1xlFQ.woff2") format("woff2"); unicode-range: U+0-FF, U+131, =
U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F=
, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 600; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiByp8=
kv8JHgFVrLEj6Z11lFc-K.woff2") format("woff2"); unicode-range: U+900-97F, U+=
1CD0-1CF9, U+200C-200D, U+20A8, U+20B9, U+20F0, U+25CC, U+A830-A839, U+A8E0=
-A8FF, U+11B00-11B09; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 600; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiByp8=
kv8JHgFVrLEj6Z1JlFc-K.woff2") format("woff2"); unicode-range: U+100-2AF, U+=
304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20=
C0, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Poppins; font-style: normal; font-weight: 600; fo=
nt-display: swap; src: url("https://fonts.gstatic.com/s/poppins/v20/pxiByp8=
kv8JHgFVrLEj6Z1xlFQ.woff2") format("woff2"); unicode-range: U+0-FF, U+131, =
U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F=
, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--jp4s04Prax7r58rcbeQOam2nREQD6vuJy3WOXxojCZ----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.codewithharry.com/_next/static/css/20a6651d5aa346c5.css

@charset "utf-8";

*, ::after, ::before { box-sizing: border-box; border: 0px solid rgb(229, 2=
31, 235); }

::after, ::before { --tw-content: ""; }

html { line-height: 1.5; text-size-adjust: 100%; tab-size: 4; font-family: =
Poppins, sans-serif; }

body { margin: 0px; line-height: inherit; }

hr { height: 0px; color: inherit; border-top-width: 1px; }

abbr:where([title]) { text-decoration: underline dotted; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, pre, samp { font-family: ui-monospace, SFMono-Regular, Menlo, Mo=
naco, Consolas, "Liberation Mono", "Courier New", monospace; font-size: 1em=
; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { text-indent: 0px; border-color: inherit; border-collapse: collapse;=
 }

button, input, optgroup, select, textarea { font-family: inherit; font-size=
: 100%; line-height: inherit; color: inherit; margin: 0px; padding: 0px; }

button, select { text-transform: none; }

[type=3D"button"], [type=3D"reset"], [type=3D"submit"], button { appearance=
: button; background-color: transparent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dd, dl, figure, h1, h2, h3, h4, h5, h6, hr, p, pre { margin: 0p=
x; }

fieldset { margin: 0px; }

fieldset, legend { padding: 0px; }

menu, ol, ul { list-style: none; margin: 0px; padding: 0px; }

textarea { resize: vertical; }

input::placeholder, textarea::placeholder { opacity: 1; color: rgb(156, 163=
, 175); }

[role=3D"button"], button { cursor: pointer; }

:disabled { cursor: default; }

audio, canvas, embed, iframe, img, object, svg, video { display: block; ver=
tical-align: middle; }

img, video { max-width: 100%; height: auto; }

[hidden] { display: none; }

*, ::after, ::before { --tw-translate-x: 0; --tw-translate-y: 0; --tw-rotat=
e: 0; --tw-skew-x: 0; --tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --t=
w-pan-x: ; --tw-pan-y: ; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: pr=
oximity; --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-n=
umeric-spacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-off=
set-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(59,130,=
246,.5); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; -=
-tw-shadow: 0 0 #0000; --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-br=
ightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-inve=
rt: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur=
: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-gra=
yscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop=
-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; }

html { scroll-behavior: smooth; }

body { overflow-x: hidden !important; }

.cont ul { list-style-type: disc; margin-left: 40px; }

.cont ol { list-style-type: decimal; margin-left: 40px; }

.cont p { margin-left: 15px; }

.cont { word-break: break-word; }

.cont a { color: blue; text-decoration: underline; }

.cont h1 { --tw-text-opacity: 1; color: rgb(31 41 55/var(--tw-text-opacity)=
); }

.dark .cont h1 { --tw-text-opacity: 1; color: rgb(243 244 246/var(--tw-text=
-opacity)); }

.cont h1 { font-size: 2rem; font-weight: 700; line-height: 1.2; margin: 15p=
x 0px 12px; }

.cont h2 { --tw-text-opacity: 1; color: rgb(31 41 55/var(--tw-text-opacity)=
); }

.dark .cont h2 { --tw-text-opacity: 1; color: rgb(243 244 246/var(--tw-text=
-opacity)); }

.cont h2 { font-size: 1.7rem; font-weight: 700; line-height: 1.2; margin: 1=
5px 0px 12px 5px; }

.cont h3 { --tw-text-opacity: 1; color: rgb(31 41 55/var(--tw-text-opacity)=
); }

.dark .cont h3 { --tw-text-opacity: 1; color: rgb(243 244 246/var(--tw-text=
-opacity)); }

.cont h3 { font-size: 1.5rem; font-weight: 700; line-height: 1.5; margin: 1=
5px 0px 12px 10px; }

.cont h4 { --tw-text-opacity: 1; color: rgb(31 41 55/var(--tw-text-opacity)=
); }

.dark .cont h4 { --tw-text-opacity: 1; color: rgb(243 244 246/var(--tw-text=
-opacity)); }

.cont h4 { font-size: 1.3rem; font-weight: 700; line-height: 1.5; margin: 1=
5px 0px 12px 15px; }

.cont h5 { --tw-text-opacity: 1; color: rgb(31 41 55/var(--tw-text-opacity)=
); }

.dark .cont h5 { --tw-text-opacity: 1; color: rgb(243 244 246/var(--tw-text=
-opacity)); }

.cont h5 { font-size: 1rem; font-weight: 700; line-height: 1.5; }

.cont h6 { --tw-text-opacity: 1; color: rgb(31 41 55/var(--tw-text-opacity)=
); }

.dark .cont h6 { --tw-text-opacity: 1; color: rgb(243 244 246/var(--tw-text=
-opacity)); }

.cont h6 { font-size: 0.7rem; font-weight: 700; line-height: 1.5; }

.cont img, video { cursor: pointer; border-radius: 5px; margin: 25px; max-w=
idth: 80%; height: auto !important; }

.dark { color-scheme: dark; }

.cont a { --tw-text-opacity: 1; color: rgb(37 99 235/var(--tw-text-opacity)=
); }

.cont a:visited { color: rgb(147, 51, 234); }

.cont a:hover { --tw-text-opacity: 1; color: rgb(30 64 175/var(--tw-text-op=
acity)); }

.dark .cont a { --tw-text-opacity: 1; color: rgb(147 197 253/var(--tw-text-=
opacity)); }

.dark .cont a:visited { color: rgb(216, 180, 254); }

.dark .cont a:hover { --tw-text-opacity: 1; color: rgb(219 234 254/var(--tw=
-text-opacity)); }

.cont .code-toolbar { font-size: 1rem; overflow-y: auto; max-height: 48vh; =
z-index: 0; margin: 0px 22px; }

::-webkit-scrollbar { width: 10px; height: 10px; }

::-webkit-scrollbar-thumb { background: rgb(216, 212, 212); border-radius: =
10px; box-shadow: rgba(0, 0, 0, 0.3) 0px 0px 6px inset; }

::-webkit-scrollbar-thumb:hover { background: rgb(169, 169, 169); }

::-webkit-scrollbar-track { border-radius: 10px; box-shadow: rgba(0, 0, 0, =
0.1) 0px 0px 6px inset; }

.container { width: 100%; }

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: now=
rap; border-width: 0px; }

.pointer-events-none { pointer-events: none; }

.visible { visibility: visible; }

.invisible { visibility: hidden; }

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.sticky { position: sticky; }

.inset-0 { right: 0px; left: 0px; }

.inset-0, .inset-y-0 { top: 0px; bottom: 0px; }

.right-6 { right: 1.5rem; }

.top-3 { top: 0.75rem; }

.right-0 { right: 0px; }

.left-0 { left: 0px; }

.top-\[110px\] { top: 110px; }

.top-\[120px\] { top: 120px; }

.-left-10 { left: -2.5rem; }

.right-2 { right: 0.5rem; }

.top-0 { top: 0px; }

.right-3 { right: 0.75rem; }

.right-10 { right: 2.5rem; }

.z-20 { z-index: 20; }

.z-10 { z-index: 10; }

.z-\[9\] { z-index: 9; }

.-m-4 { margin: -1rem; }

.m-5 { margin: 1.25rem; }

.m-3 { margin: 0.75rem; }

.m-6 { margin: 1.5rem; }

.m-4 { margin: 1rem; }

.m-2 { margin: 0.5rem; }

.m-auto { margin: auto; }

.mx-auto { margin-left: auto; margin-right: auto; }

.my-2 { margin-top: 0.5rem; margin-bottom: 0.5rem; }

.mx-4 { margin-left: 1rem; margin-right: 1rem; }

.mx-1 { margin-left: 0.25rem; margin-right: 0.25rem; }

.mx-2 { margin-left: 0.5rem; margin-right: 0.5rem; }

.my-5 { margin-top: 1.25rem; margin-bottom: 1.25rem; }

.mx-6 { margin-left: 1.5rem; margin-right: 1.5rem; }

.my-10 { margin-top: 2.5rem; margin-bottom: 2.5rem; }

.my-3 { margin-top: 0.75rem; margin-bottom: 0.75rem; }

.-mx-4 { margin-left: -1rem; margin-right: -1rem; }

.my-1 { margin-top: 0.25rem; margin-bottom: 0.25rem; }

.my-4 { margin-top: 1rem; margin-bottom: 1rem; }

.-mx-3 { margin-left: -0.75rem; margin-right: -0.75rem; }

.mx-\[40\%\] { margin-left: 40%; margin-right: 40%; }

.my-6 { margin-top: 1.5rem; margin-bottom: 1.5rem; }

.mx-10 { margin-left: 2.5rem; margin-right: 2.5rem; }

.my-14 { margin-top: 3.5rem; margin-bottom: 3.5rem; }

.my-0 { margin-top: 0px; margin-bottom: 0px; }

.my-11 { margin-top: 2.75rem; margin-bottom: 2.75rem; }

.mx-3 { margin-left: 0.75rem; margin-right: 0.75rem; }

.mt-2 { margin-top: 0.5rem; }

.mb-1 { margin-bottom: 0.25rem; }

.mb-2 { margin-bottom: 0.5rem; }

.mt-5 { margin-top: 1.25rem; }

.mt-6 { margin-top: 1.5rem; }

.mr-2 { margin-right: 0.5rem; }

.mt-4 { margin-top: 1rem; }

.mb-3 { margin-bottom: 0.75rem; }

.mb-12 { margin-bottom: 3rem; }

.mb-4 { margin-bottom: 1rem; }

.mb-6 { margin-bottom: 1.5rem; }

.mt-8 { margin-top: 2rem; }

.mb-16 { margin-bottom: 4rem; }

.mt-10 { margin-top: 2.5rem; }

.mb-10 { margin-bottom: 2.5rem; }

.-mb-10 { margin-bottom: -2.5rem; }

.-mt-4 { margin-top: -1rem; }

.ml-2 { margin-left: 0.5rem; }

.mb-5 { margin-bottom: 1.25rem; }

.mt-1 { margin-top: 0.25rem; }

.ml-4 { margin-left: 1rem; }

.mt-3 { margin-top: 0.75rem; }

.mb-7 { margin-bottom: 1.75rem; }

.-mr-1 { margin-right: -0.25rem; }

.mr-3 { margin-right: 0.75rem; }

.mt-\[15\%\] { margin-top: 15%; }

.mt-7 { margin-top: 1.75rem; }

.ml-1 { margin-left: 0.25rem; }

.mt-28 { margin-top: 7rem; }

.mr-4 { margin-right: 1rem; }

.ml-5 { margin-left: 1.25rem; }

.ml-3 { margin-left: 0.75rem; }

.mt-0 { margin-top: 0px; }

.block { display: block; }

.inline-block { display: inline-block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.table { display: table; }

.grid { display: grid; }

.contents { display: contents; }

.hidden { display: none; }

.h-16 { height: 4rem; }

.h-8 { height: 2rem; }

.h-4 { height: 1rem; }

.h-full { height: 100%; }

.h-5 { height: 1.25rem; }

.h-40 { height: 10rem; }

.h-96 { height: 24rem; }

.h-64 { height: 16rem; }

.h-24 { height: 6rem; }

.h-20 { height: 5rem; }

.h-6 { height: 1.5rem; }

.h-\[100vh\] { height: 100vh; }

.h-36 { height: 9rem; }

.h-\[90vh\] { height: 90vh; }

.h-\[85vh\] { height: 85vh; }

.h-\[87vh\] { height: 87vh; }

.h-3 { height: 0.75rem; }

.h-auto { height: auto; }

.h-\[30vh\] { height: 30vh; }

.h-60 { height: 15rem; }

.h-0 { height: 0px; }

.h-10 { height: 2.5rem; }

.h-12 { height: 3rem; }

.max-h-full { max-height: 100%; }

.max-h-\[6vh\] { max-height: 6vh; }

.min-h-screen { min-height: 100vh; }

.min-h-\[40px\] { min-height: 40px; }

.w-full { width: 100%; }

.w-8 { width: 2rem; }

.w-4 { width: 1rem; }

.w-5 { width: 1.25rem; }

.w-fit { width: fit-content; }

.w-1\/5 { width: 20%; }

.w-24 { width: 6rem; }

.w-6 { width: 1.5rem; }

.w-80 { width: 20rem; }

.w-auto { width: auto; }

.w-\[90\%\] { width: 90%; }

.w-\[100\%\] { width: 100%; }

.w-\[1\%\] { width: 1%; }

.w-\[50\%\] { width: 50%; }

.w-3 { width: 0.75rem; }

.w-20 { width: 5rem; }

.w-\[40vw\] { width: 40vw; }

.w-10 { width: 2.5rem; }

.w-64 { width: 16rem; }

.w-11 { width: 2.75rem; }

.w-48 { width: 12rem; }

.max-w-sm { max-width: 24rem; }

.max-w-4xl { max-width: 56rem; }

.max-w-screen-xl { max-width: 1280px; }

.max-w-7xl { max-width: 80rem; }

.max-w-screen-lg { max-width: 1024px; }

.max-w-5xl { max-width: 64rem; }

.max-w-screen-sm { max-width: 640px; }

.max-w-\[75vw\] { max-width: 75vw; }

.max-w-md { max-width: 28rem; }

.max-w-lg { max-width: 32rem; }

.max-w-xl { max-width: 36rem; }

.flex-1 { flex: 1 1 0%; }

.flex-shrink-0 { flex-shrink: 0; }

.flex-grow { flex-grow: 1; }

@-webkit-keyframes spin {=20
  100% { transform: rotate(1turn); }
}

@keyframes spin {=20
  100% { transform: rotate(1turn); }
}

.animate-spin { animation: 1s linear 0s infinite normal none running spin; =
}

.cursor-not-allowed { cursor: not-allowed; }

.cursor-pointer { cursor: pointer; }

.resize-none { resize: none; }

.list-inside { list-style-position: inside; }

.list-disc { list-style-type: disc; }

.list-decimal { list-style-type: decimal; }

.appearance-none { appearance: none; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.flex-col { flex-direction: column; }

.flex-wrap { flex-wrap: wrap; }

.items-start { align-items: flex-start; }

.items-center { align-items: center; }

.justify-center { justify-content: center; }

.justify-between { justify-content: space-between; }

.justify-around { justify-content: space-around; }

.gap-2 { gap: 0.5rem; }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1rem * var(--tw-space-x-reverse)); margin-left: calc(1rem *=
 calc(1 - var(--tw-space-x-reverse))); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(1rem * var(--tw-space-y-reverse)); }

.space-y-8 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(2rem * var(--tw-space-y-reverse)); }

.space-y-6 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(1.5rem * var(--tw-space-y-reverse)); }

.-space-y-px > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; m=
argin-top: calc(-1px * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(-1px * var(--tw-space-y-reverse)); }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.5rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: =
calc(.5rem * var(--tw-space-y-reverse)); }

.space-x-7 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1.75rem * var(--tw-space-x-reverse)); margin-left: calc(1.7=
5rem * calc(1 - var(--tw-space-x-reverse))); }

.overflow-hidden { overflow: hidden; }

.overflow-scroll { overflow: scroll; }

.overflow-x-auto { overflow-x: auto; }

.overflow-x-hidden { overflow-x: hidden; }

.overflow-x-scroll { overflow-x: scroll; }

.overflow-y-scroll { overflow-y: scroll; }

.scroll-smooth { scroll-behavior: smooth; }

.whitespace-nowrap { white-space: nowrap; }

.break-words { overflow-wrap: break-word; }

.rounded-lg { border-radius: 0.5rem; }

.rounded { border-radius: 0.25rem; }

.rounded-full { border-radius: 9999px; }

.rounded-md { border-radius: 0.375rem; }

.rounded-2xl { border-radius: 1rem; }

.rounded-xl { border-radius: 0.75rem; }

.rounded-none { border-radius: 0px; }

.rounded-t-lg { border-top-left-radius: 0.5rem; border-top-right-radius: 0.=
5rem; }

.rounded-t-md { border-top-left-radius: 0.375rem; border-top-right-radius: =
0.375rem; }

.rounded-b-md { border-bottom-right-radius: 0.375rem; border-bottom-left-ra=
dius: 0.375rem; }

.border { border-width: 1px; }

.border-0 { border-width: 0px; }

.border-2 { border-width: 2px; }

.border-y-2 { border-top-width: 2px; border-bottom-width: 2px; }

.border-b { border-bottom-width: 1px; }

.border-b-2 { border-bottom-width: 2px; }

.border-dashed { border-style: dashed; }

.border-gray-300 { --tw-border-opacity: 1; border-color: rgb(209 213 219/va=
r(--tw-border-opacity)); }

.border-gray-200 { --tw-border-opacity: 1; border-color: rgb(229 231 235/va=
r(--tw-border-opacity)); }

.border-purple-700 { --tw-border-opacity: 1; border-color: rgb(126 34 206/v=
ar(--tw-border-opacity)); }

.border-gray-400 { --tw-border-opacity: 1; border-color: rgb(156 163 175/va=
r(--tw-border-opacity)); }

.border-transparent { border-color: transparent; }

.border-purple-500 { --tw-border-opacity: 1; border-color: rgb(168 85 247/v=
ar(--tw-border-opacity)); }

.bg-white { --tw-bg-opacity: 1; background-color: rgb(255 255 255/var(--tw-=
bg-opacity)); }

.bg-gray-200 { --tw-bg-opacity: 1; background-color: rgb(229 231 235/var(--=
tw-bg-opacity)); }

.bg-gray-700 { --tw-bg-opacity: 1; background-color: rgb(55 65 81/var(--tw-=
bg-opacity)); }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgb(243 244 246/var(--=
tw-bg-opacity)); }

.bg-purple-600 { --tw-bg-opacity: 1; background-color: rgb(147 51 234/var(-=
-tw-bg-opacity)); }

.bg-gray-900 { --tw-bg-opacity: 1; background-color: rgb(17 24 39/var(--tw-=
bg-opacity)); }

.bg-gray-300 { --tw-bg-opacity: 1; background-color: rgb(209 213 219/var(--=
tw-bg-opacity)); }

.bg-black { --tw-bg-opacity: 1; background-color: rgb(0 0 0/var(--tw-bg-opa=
city)); }

.bg-purple-700 { --tw-bg-opacity: 1; background-color: rgb(126 34 206/var(-=
-tw-bg-opacity)); }

.bg-purple-400 { --tw-bg-opacity: 1; background-color: rgb(192 132 252/var(=
--tw-bg-opacity)); }

.bg-purple-500 { --tw-bg-opacity: 1; background-color: rgb(168 85 247/var(-=
-tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgb(249 250 251/var(--t=
w-bg-opacity)); }

.bg-red-800 { --tw-bg-opacity: 1; background-color: rgb(153 27 27/var(--tw-=
bg-opacity)); }

.bg-red-700 { --tw-bg-opacity: 1; background-color: rgb(185 28 28/var(--tw-=
bg-opacity)); }

.bg-purple-100 { --tw-bg-opacity: 1; background-color: rgb(243 232 255/var(=
--tw-bg-opacity)); }

.bg-purple-50 { --tw-bg-opacity: 1; background-color: rgb(250 245 255/var(-=
-tw-bg-opacity)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgb(239 68 68/var(--tw-=
bg-opacity)); }

.bg-blue-700 { --tw-bg-opacity: 1; background-color: rgb(29 78 216/var(--tw=
-bg-opacity)); }

.bg-red-100 { --tw-bg-opacity: 1; background-color: rgb(254 226 226/var(--t=
w-bg-opacity)); }

.bg-blue-500 { --tw-bg-opacity: 1; background-color: rgb(59 130 246/var(--t=
w-bg-opacity)); }

.bg-purple-200 { --tw-bg-opacity: 1; background-color: rgb(233 213 255/var(=
--tw-bg-opacity)); }

.bg-gradient-to-r { background-image: linear-gradient(to right,var(--tw-gra=
dient-stops)); }

.from-purple-500 { --tw-gradient-from: #a855f7; --tw-gradient-stops: var(--=
tw-gradient-from),var(--tw-gradient-to,rgba(168,85,247,0)); }

.via-purple-600 { --tw-gradient-stops: var(--tw-gradient-from),#9333ea,var(=
--tw-gradient-to,rgba(147,51,234,0)); }

.to-purple-700 { --tw-gradient-to: #7e22ce; }

.bg-cover { background-size: cover; }

.fill-current { fill: currentcolor; }

.object-contain { object-fit: contain; }

.object-cover { object-fit: cover; }

.object-center { object-position: center center; }

.p-8 { padding: 2rem; }

.p-4 { padding: 1rem; }

.p-6 { padding: 1.5rem; }

.p-2 { padding: 0.5rem; }

.p-2\.5 { padding: 0.625rem; }

.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.py-8 { padding-top: 2rem; padding-bottom: 2rem; }

.py-6 { padding-top: 1.5rem; padding-bottom: 1.5rem; }

.py-16 { padding-top: 4rem; padding-bottom: 4rem; }

.px-8 { padding-left: 2rem; padding-right: 2rem; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.py-12 { padding-top: 3rem; padding-bottom: 3rem; }

.px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }

.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }

.py-4 { padding-top: 1rem; padding-bottom: 1rem; }

.py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }

.py-0 { padding-top: 0px; padding-bottom: 0px; }

.py-2\.5 { padding-top: 0.625rem; padding-bottom: 0.625rem; }

.px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }

.py-5 { padding-top: 1.25rem; padding-bottom: 1.25rem; }

.py-0\.5 { padding-top: 0.125rem; padding-bottom: 0.125rem; }

.px-0 { padding-left: 0px; padding-right: 0px; }

.pt-4 { padding-top: 1rem; }

.pb-2 { padding-bottom: 0.5rem; }

.pl-4 { padding-left: 1rem; }

.pt-16 { padding-top: 4rem; }

.pt-8 { padding-top: 2rem; }

.pb-4 { padding-bottom: 1rem; }

.pt-6 { padding-top: 1.5rem; }

.pr-0 { padding-right: 0px; }

.pt-2 { padding-top: 0.5rem; }

.pt-3 { padding-top: 0.75rem; }

.pb-8 { padding-bottom: 2rem; }

.pl-2 { padding-left: 0.5rem; }

.pl-3 { padding-left: 0.75rem; }

.pl-10 { padding-left: 2.5rem; }

.pt-\[25\%\] { padding-top: 25%; }

.pl-1 { padding-left: 0.25rem; }

.pb-16 { padding-bottom: 4rem; }

.pl-6 { padding-left: 1.5rem; }

.pt-1 { padding-top: 0.25rem; }

.pt-5 { padding-top: 1.25rem; }

.pb-5 { padding-bottom: 1.25rem; }

.pb-6 { padding-bottom: 1.5rem; }

.pr-5 { padding-right: 1.25rem; }

.pl-5 { padding-left: 1.25rem; }

.pb-3 { padding-bottom: 0.75rem; }

.pr-4 { padding-right: 1rem; }

.text-left { text-align: left; }

.text-center { text-align: center; }

.text-right { text-align: right; }

.align-middle { vertical-align: middle; }

.font-karla { font-family: Poppins, sans-serif; }

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-base { font-size: 1rem; line-height: 1.5rem; }

.font-semibold { font-weight: 600; }

.font-bold { font-weight: 700; }

.font-medium { font-weight: 500; }

.font-normal { font-weight: 400; }

.font-extrabold { font-weight: 800; }

.uppercase { text-transform: uppercase; }

.italic { font-style: italic; }

.leading-6 { line-height: 1.5rem; }

.leading-tight { line-height: 1.25; }

.leading-relaxed { line-height: 1.625; }

.leading-7 { line-height: 1.75rem; }

.leading-8 { line-height: 2rem; }

.leading-normal { line-height: 1.5; }

.tracking-widest { letter-spacing: 0.1em; }

.tracking-wide { letter-spacing: 0.025em; }

.tracking-tight { letter-spacing: -0.025em; }

.text-gray-700 { --tw-text-opacity: 1; color: rgb(55 65 81/var(--tw-text-op=
acity)); }

.text-white { --tw-text-opacity: 1; color: rgb(255 255 255/var(--tw-text-op=
acity)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgb(31 41 55/var(--tw-text-op=
acity)); }

.text-purple-700 { --tw-text-opacity: 1; color: rgb(126 34 206/var(--tw-tex=
t-opacity)); }

.text-slate-900 { --tw-text-opacity: 1; color: rgb(15 23 42/var(--tw-text-o=
pacity)); }

.text-slate-500 { --tw-text-opacity: 1; color: rgb(100 116 139/var(--tw-tex=
t-opacity)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgb(75 85 99/var(--tw-text-op=
acity)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgb(107 114 128/var(--tw-text=
-opacity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgb(17 24 39/var(--tw-text-op=
acity)); }

.text-gray-200 { --tw-text-opacity: 1; color: rgb(229 231 235/var(--tw-text=
-opacity)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgb(156 163 175/var(--tw-text=
-opacity)); }

.text-purple-600 { --tw-text-opacity: 1; color: rgb(147 51 234/var(--tw-tex=
t-opacity)); }

.text-blue-600 { --tw-text-opacity: 1; color: rgb(37 99 235/var(--tw-text-o=
pacity)); }

.text-purple-500 { --tw-text-opacity: 1; color: rgb(168 85 247/var(--tw-tex=
t-opacity)); }

.text-purple-900 { --tw-text-opacity: 1; color: rgb(88 28 135/var(--tw-text=
-opacity)); }

.text-red-500 { --tw-text-opacity: 1; color: rgb(239 68 68/var(--tw-text-op=
acity)); }

.text-black { --tw-text-opacity: 1; color: rgb(0 0 0/var(--tw-text-opacity)=
); }

.underline { text-decoration-line: underline; }

.placeholder-gray-700::placeholder { --tw-placeholder-opacity: 1; color: rg=
b(55 65 81/var(--tw-placeholder-opacity)); }

.placeholder-gray-500::placeholder { --tw-placeholder-opacity: 1; color: rg=
b(107 114 128/var(--tw-placeholder-opacity)); }

.opacity-25 { opacity: 0.25; }

.opacity-75 { opacity: 0.75; }

.shadow-lg { --tw-shadow: 0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rg=
ba(0,0,0,.1); --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),=
0 4px 6px -4px var(--tw-shadow-color); }

.shadow-lg, .shadow-md { box-shadow: var(--tw-ring-offset-shadow,0 0 #0000)=
,var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.shadow-md { --tw-shadow: 0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba=
(0,0,0,.1); --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),0 2p=
x 4px -2px var(--tw-shadow-color); }

.shadow-xl { --tw-shadow: 0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px r=
gba(0,0,0,.1); --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color)=
,0 8px 10px -6px var(--tw-shadow-color); }

.shadow-sm, .shadow-xl { box-shadow: var(--tw-ring-offset-shadow,0 0 #0000)=
,var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow); }

.shadow-sm { --tw-shadow: 0 1px 2px 0 rgba(0,0,0,.05); --tw-shadow-colored:=
 0 1px 2px 0 var(--tw-shadow-color); }

.shadow-2xl { --tw-shadow: 0 25px 50px -12px rgba(0,0,0,.25); --tw-shadow-c=
olored: 0 25px 50px -12px var(--tw-shadow-color); box-shadow: var(--tw-ring=
-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);=
 }

.outline-none { outline: transparent solid 2px; outline-offset: 2px; }

.outline { outline-style: solid; }

.filter { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) va=
r(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) =
var(--tw-sepia) var(--tw-drop-shadow); }

.transition { transition-property: color, background-color, border-color, t=
ext-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,=
 backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter; t=
ransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duratio=
n: 0.15s; }

.transition-colors { transition-property: color, background-color, border-c=
olor, text-decoration-color, fill, stroke, -webkit-text-decoration-color; t=
ransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duratio=
n: 0.15s; }

.transition-all { transition-property: all; transition-timing-function: cub=
ic-bezier(0.4, 0, 0.2, 1); }

.duration-150, .transition-all { transition-duration: 0.15s; }

.duration-200 { transition-duration: 0.2s; }

.duration-300 { transition-duration: 0.3s; }

.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.after\:absolute::after { content: var(--tw-content); position: absolute; }

.after\:top-\[2px\]::after { content: var(--tw-content); top: 2px; }

.after\:left-\[2px\]::after { content: var(--tw-content); left: 2px; }

.after\:h-5::after { content: var(--tw-content); height: 1.25rem; }

.after\:w-5::after { content: var(--tw-content); width: 1.25rem; }

.after\:rounded-full::after { content: var(--tw-content); border-radius: 99=
99px; }

.after\:border::after { content: var(--tw-content); border-width: 1px; }

.after\:border-gray-300::after { content: var(--tw-content); --tw-border-op=
acity: 1; border-color: rgb(209 213 219/var(--tw-border-opacity)); }

.after\:bg-white::after { content: var(--tw-content); --tw-bg-opacity: 1; b=
ackground-color: rgb(255 255 255/var(--tw-bg-opacity)); }

.after\:transition-all::after { content: var(--tw-content); transition-prop=
erty: all; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transi=
tion-duration: 0.15s; }

.after\:content-\[\'\'\]::after { --tw-content: ""; content: var(--tw-conte=
nt); }

.hover\:scale-105:hover { --tw-scale-x: 1.05; --tw-scale-y: 1.05; transform=
: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-ro=
tate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scal=
e-x)) scaleY(var(--tw-scale-y)); }

.hover\:border-b-2:hover { border-bottom-width: 2px; }

.hover\:border-purple-700:hover { --tw-border-opacity: 1; border-color: rgb=
(126 34 206/var(--tw-border-opacity)); }

.hover\:bg-gray-600:hover { --tw-bg-opacity: 1; background-color: rgb(75 85=
 99/var(--tw-bg-opacity)); }

.hover\:bg-purple-700:hover { --tw-bg-opacity: 1; background-color: rgb(126=
 34 206/var(--tw-bg-opacity)); }

.hover\:bg-gray-800:hover { --tw-bg-opacity: 1; background-color: rgb(31 41=
 55/var(--tw-bg-opacity)); }

.hover\:bg-gray-400:hover { --tw-bg-opacity: 1; background-color: rgb(156 1=
63 175/var(--tw-bg-opacity)); }

.hover\:bg-purple-600:hover { --tw-bg-opacity: 1; background-color: rgb(147=
 51 234/var(--tw-bg-opacity)); }

.hover\:bg-purple-800:hover { --tw-bg-opacity: 1; background-color: rgb(107=
 33 168/var(--tw-bg-opacity)); }

.hover\:bg-purple-900:hover { --tw-bg-opacity: 1; background-color: rgb(88 =
28 135/var(--tw-bg-opacity)); }

.hover\:bg-purple-200:hover { --tw-bg-opacity: 1; background-color: rgb(233=
 213 255/var(--tw-bg-opacity)); }

.hover\:bg-red-800:hover { --tw-bg-opacity: 1; background-color: rgb(153 27=
 27/var(--tw-bg-opacity)); }

.hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgb(249 25=
0 251/var(--tw-bg-opacity)); }

.hover\:bg-blue-800:hover { --tw-bg-opacity: 1; background-color: rgb(30 64=
 175/var(--tw-bg-opacity)); }

.hover\:bg-gray-100:hover { --tw-bg-opacity: 1; background-color: rgb(243 2=
44 246/var(--tw-bg-opacity)); }

.hover\:bg-blue-700:hover { --tw-bg-opacity: 1; background-color: rgb(29 78=
 216/var(--tw-bg-opacity)); }

.hover\:bg-gradient-to-br:hover { background-image: linear-gradient(to bott=
om right,var(--tw-gradient-stops)); }

.hover\:text-purple-700:hover { --tw-text-opacity: 1; color: rgb(126 34 206=
/var(--tw-text-opacity)); }

.hover\:text-purple-500:hover { --tw-text-opacity: 1; color: rgb(168 85 247=
/var(--tw-text-opacity)); }

.hover\:text-white:hover { --tw-text-opacity: 1; color: rgb(255 255 255/var=
(--tw-text-opacity)); }

.focus\:z-10:focus { z-index: 10; }

.focus\:border-purple-500:focus { --tw-border-opacity: 1; border-color: rgb=
(168 85 247/var(--tw-border-opacity)); }

.focus\:border-blue-500:focus { --tw-border-opacity: 1; border-color: rgb(5=
9 130 246/var(--tw-border-opacity)); }

.focus\:border-purple-700:focus { --tw-border-opacity: 1; border-color: rgb=
(126 34 206/var(--tw-border-opacity)); }

.focus\:bg-white:focus { --tw-bg-opacity: 1; background-color: rgb(255 255 =
255/var(--tw-bg-opacity)); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset=
: 2px; }

.focus\:ring-2:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw=
-ring-color); }

.focus\:ring-2:focus, .focus\:ring-4:focus { box-shadow: var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000); }

.focus\:ring-4:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw=
-ring-color); }

.focus\:ring-purple-200:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(=
233 213 255/var(--tw-ring-opacity)); }

.focus\:ring-blue-500:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(59=
 130 246/var(--tw-ring-opacity)); }

.focus\:ring-purple-300:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(=
216 180 254/var(--tw-ring-opacity)); }

.focus\:ring-purple-500:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(=
168 85 247/var(--tw-ring-opacity)); }

.focus\:ring-red-300:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(252=
 165 165/var(--tw-ring-opacity)); }

.focus\:ring-blue-300:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(14=
7 197 253/var(--tw-ring-opacity)); }

.focus\:ring-indigo-200:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(=
199 210 254/var(--tw-ring-opacity)); }

.focus\:ring-offset-2:focus { --tw-ring-offset-width: 2px; }

.active\:border-b-4:active { border-bottom-width: 4px; }

.active\:bg-purple-900:active { --tw-bg-opacity: 1; background-color: rgb(8=
8 28 135/var(--tw-bg-opacity)); }

.active\:text-purple-700:active { --tw-text-opacity: 1; color: rgb(126 34 2=
06/var(--tw-text-opacity)); }

.active\:text-purple-600:active { --tw-text-opacity: 1; color: rgb(147 51 2=
34/var(--tw-text-opacity)); }

.disabled\:cursor-default:disabled { cursor: default; }

.disabled\:bg-gray-200:disabled { --tw-bg-opacity: 1; background-color: rgb=
(229 231 235/var(--tw-bg-opacity)); }

.disabled\:bg-purple-300:disabled { --tw-bg-opacity: 1; background-color: r=
gb(216 180 254/var(--tw-bg-opacity)); }

.disabled\:text-gray-400:disabled { --tw-text-opacity: 1; color: rgb(156 16=
3 175/var(--tw-text-opacity)); }

.disabled\:opacity-50:disabled { opacity: 0.5; }

.group:hover .group-hover\:text-purple-400 { --tw-text-opacity: 1; color: r=
gb(192 132 252/var(--tw-text-opacity)); }

.peer:checked ~ .peer-checked\:bg-purple-600 { --tw-bg-opacity: 1; backgrou=
nd-color: rgb(147 51 234/var(--tw-bg-opacity)); }

.peer:checked ~ .peer-checked\:after\:translate-x-full::after { content: va=
r(--tw-content); --tw-translate-x: 100%; transform: translate(var(--tw-tran=
slate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.peer:checked ~ .peer-checked\:after\:border-white::after { content: var(--=
tw-content); --tw-border-opacity: 1; border-color: rgb(255 255 255/var(--tw=
-border-opacity)); }

.peer:focus ~ .peer-focus\:outline-none { outline: transparent solid 2px; o=
utline-offset: 2px; }

.peer:focus ~ .peer-focus\:ring-4 { --tw-ring-offset-shadow: var(--tw-ring-=
inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-=
ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-wid=
th)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--t=
w-ring-shadow),var(--tw-shadow,0 0 #0000); }

.peer:focus ~ .peer-focus\:ring-purple-300 { --tw-ring-opacity: 1; --tw-rin=
g-color: rgb(216 180 254/var(--tw-ring-opacity)); }

.dark .dark\:border-black { --tw-border-opacity: 1; border-color: rgb(0 0 0=
/var(--tw-border-opacity)); }

.dark .dark\:border-gray-600 { --tw-border-opacity: 1; border-color: rgb(75=
 85 99/var(--tw-border-opacity)); }

.dark .dark\:border-gray-700 { --tw-border-opacity: 1; border-color: rgb(55=
 65 81/var(--tw-border-opacity)); }

.dark .dark\:border-gray-500 { --tw-border-opacity: 1; border-color: rgb(10=
7 114 128/var(--tw-border-opacity)); }

.dark .dark\:border-gray-400 { --tw-border-opacity: 1; border-color: rgb(15=
6 163 175/var(--tw-border-opacity)); }

.dark .dark\:bg-gray-900 { --tw-bg-opacity: 1; background-color: rgb(17 24 =
39/var(--tw-bg-opacity)); }

.dark .dark\:bg-slate-800 { --tw-bg-opacity: 1; background-color: rgb(30 41=
 59/var(--tw-bg-opacity)); }

.dark .dark\:bg-slate-700 { --tw-bg-opacity: 1; background-color: rgb(51 65=
 85/var(--tw-bg-opacity)); }

.dark .dark\:bg-purple-400 { --tw-bg-opacity: 1; background-color: rgb(192 =
132 252/var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-100 { --tw-bg-opacity: 1; background-color: rgb(243 24=
4 246/var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-700 { --tw-bg-opacity: 1; background-color: rgb(55 65 =
81/var(--tw-bg-opacity)); }

.dark .dark\:bg-slate-600 { --tw-bg-opacity: 1; background-color: rgb(71 85=
 105/var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-800 { --tw-bg-opacity: 1; background-color: rgb(31 41 =
55/var(--tw-bg-opacity)); }

.dark .dark\:bg-slate-500 { --tw-bg-opacity: 1; background-color: rgb(100 1=
16 139/var(--tw-bg-opacity)); }

.dark .dark\:bg-red-600 { --tw-bg-opacity: 1; background-color: rgb(220 38 =
38/var(--tw-bg-opacity)); }

.dark .dark\:bg-purple-600 { --tw-bg-opacity: 1; background-color: rgb(147 =
51 234/var(--tw-bg-opacity)); }

.dark .dark\:bg-blue-600 { --tw-bg-opacity: 1; background-color: rgb(37 99 =
235/var(--tw-bg-opacity)); }

.dark .dark\:bg-purple-500 { --tw-bg-opacity: 1; background-color: rgb(168 =
85 247/var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-500 { --tw-bg-opacity: 1; background-color: rgb(107 11=
4 128/var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-600 { --tw-bg-opacity: 1; background-color: rgb(75 85 =
99/var(--tw-bg-opacity)); }

.dark .dark\:text-white { --tw-text-opacity: 1; color: rgb(255 255 255/var(=
--tw-text-opacity)); }

.dark .dark\:text-gray-300 { --tw-text-opacity: 1; color: rgb(209 213 219/v=
ar(--tw-text-opacity)); }

.dark .dark\:text-gray-200 { --tw-text-opacity: 1; color: rgb(229 231 235/v=
ar(--tw-text-opacity)); }

.dark .dark\:text-gray-400 { --tw-text-opacity: 1; color: rgb(156 163 175/v=
ar(--tw-text-opacity)); }

.dark .dark\:text-purple-600 { --tw-text-opacity: 1; color: rgb(147 51 234/=
var(--tw-text-opacity)); }

.dark .dark\:text-gray-600 { --tw-text-opacity: 1; color: rgb(75 85 99/var(=
--tw-text-opacity)); }

.dark .dark\:text-gray-100 { --tw-text-opacity: 1; color: rgb(243 244 246/v=
ar(--tw-text-opacity)); }

.dark .dark\:text-purple-400 { --tw-text-opacity: 1; color: rgb(192 132 252=
/var(--tw-text-opacity)); }

.dark .dark\:text-blue-500 { --tw-text-opacity: 1; color: rgb(59 130 246/va=
r(--tw-text-opacity)); }

.dark .dark\:text-purple-300 { --tw-text-opacity: 1; color: rgb(216 180 254=
/var(--tw-text-opacity)); }

.dark .dark\:placeholder-gray-400::placeholder { --tw-placeholder-opacity: =
1; color: rgb(156 163 175/var(--tw-placeholder-opacity)); }

.dark .dark\:ring-offset-gray-800 { --tw-ring-offset-color: #1f2937; }

.dark .dark\:hover\:border-gray-500:hover { --tw-border-opacity: 1; border-=
color: rgb(107 114 128/var(--tw-border-opacity)); }

.dark .dark\:hover\:bg-purple-500:hover { --tw-bg-opacity: 1; background-co=
lor: rgb(168 85 247/var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-300:hover { --tw-bg-opacity: 1; background-colo=
r: rgb(209 213 219/var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-slate-900:hover { --tw-bg-opacity: 1; background-col=
or: rgb(15 23 42/var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-slate-500:hover { --tw-bg-opacity: 1; background-col=
or: rgb(100 116 139/var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-600:hover { --tw-bg-opacity: 1; background-colo=
r: rgb(75 85 99/var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-red-700:hover { --tw-bg-opacity: 1; background-color=
: rgb(185 28 28/var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-purple-700:hover { --tw-bg-opacity: 1; background-co=
lor: rgb(126 34 206/var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-purple-900:hover { --tw-bg-opacity: 1; background-co=
lor: rgb(88 28 135/var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-blue-700:hover { --tw-bg-opacity: 1; background-colo=
r: rgb(29 78 216/var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-700:hover { --tw-bg-opacity: 1; background-colo=
r: rgb(55 65 81/var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-purple-800:hover { --tw-bg-opacity: 1; background-co=
lor: rgb(107 33 168/var(--tw-bg-opacity)); }

.dark .dark\:focus\:border-purple-500:focus { --tw-border-opacity: 1; borde=
r-color: rgb(168 85 247/var(--tw-border-opacity)); }

.dark .dark\:focus\:border-blue-500:focus { --tw-border-opacity: 1; border-=
color: rgb(59 130 246/var(--tw-border-opacity)); }

.dark .dark\:focus\:ring-blue-600:focus { --tw-ring-opacity: 1; --tw-ring-c=
olor: rgb(37 99 235/var(--tw-ring-opacity)); }

.dark .dark\:focus\:ring-purple-800:focus { --tw-ring-opacity: 1; --tw-ring=
-color: rgb(107 33 168/var(--tw-ring-opacity)); }

.dark .dark\:focus\:ring-purple-500:focus { --tw-ring-opacity: 1; --tw-ring=
-color: rgb(168 85 247/var(--tw-ring-opacity)); }

.dark .dark\:focus\:ring-red-900:focus { --tw-ring-opacity: 1; --tw-ring-co=
lor: rgb(127 29 29/var(--tw-ring-opacity)); }

.dark .dark\:focus\:ring-blue-900:focus { --tw-ring-opacity: 1; --tw-ring-c=
olor: rgb(30 58 138/var(--tw-ring-opacity)); }

.dark .dark\:focus\:ring-blue-500:focus { --tw-ring-opacity: 1; --tw-ring-c=
olor: rgb(59 130 246/var(--tw-ring-opacity)); }

.dark .dark\:focus\:ring-purple-900:focus { --tw-ring-opacity: 1; --tw-ring=
-color: rgb(88 28 135/var(--tw-ring-opacity)); }

.dark .dark\:disabled\:bg-gray-500:disabled { --tw-bg-opacity: 1; backgroun=
d-color: rgb(107 114 128/var(--tw-bg-opacity)); }

.dark .dark\:disabled\:text-gray-300:disabled { --tw-text-opacity: 1; color=
: rgb(209 213 219/var(--tw-text-opacity)); }

.dark .peer:focus ~ .dark\:peer-focus\:ring-purple-800 { --tw-ring-opacity:=
 1; --tw-ring-color: rgb(107 33 168/var(--tw-ring-opacity)); }

@media (min-width: 640px) {
  .sm\:-m-4 { margin: -1rem; }
  .sm\:mb-0 { margin-bottom: 0px; }
  .sm\:ml-4 { margin-left: 1rem; }
  .sm\:ml-auto { margin-left: auto; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:h-10 { height: 2.5rem; }
  .sm\:h-8 { height: 2rem; }
  .sm\:w-10 { width: 2.5rem; }
  .sm\:w-8 { width: 2rem; }
  .sm\:w-\[1\%\] { width: 1%; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:justify-start { justify-content: flex-start; }
  .sm\:border-l-2 { border-left-width: 2px; }
  .sm\:border-gray-200 { --tw-border-opacity: 1; border-color: rgb(229 231 =
235/var(--tw-border-opacity)); }
  .sm\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\:py-4 { padding-top: 1rem; padding-bottom: 1rem; }
  .sm\:py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
  .sm\:pl-4 { padding-left: 1rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .sm\:text-xs { font-size: 0.75rem; line-height: 1rem; }
}

@media (min-width: 768px) {
  .md\:top-\[136px\] { top: 136px; }
  .md\:left-auto { left: auto; }
  .md\:right-12 { right: 3rem; }
  .md\:right-10 { right: 2.5rem; }
  .md\:my-11 { margin-top: 2.75rem; margin-bottom: 2.75rem; }
  .md\:mx-2 { margin-left: 0.5rem; margin-right: 0.5rem; }
  .md\:mx-16 { margin-left: 4rem; margin-right: 4rem; }
  .md\:ml-11 { margin-left: 2.75rem; }
  .md\:ml-10 { margin-left: 2.5rem; }
  .md\:ml-auto { margin-left: auto; }
  .md\:mt-0 { margin-top: 0px; }
  .md\:mt-2 { margin-top: 0.5rem; }
  .md\:mb-0 { margin-bottom: 0px; }
  .md\:mr-10 { margin-right: 2.5rem; }
  .md\:block { display: block; }
  .md\:flex { display: flex; }
  .md\:hidden { display: none; }
  .md\:h-8 { height: 2rem; }
  .md\:h-72 { height: 18rem; }
  .md\:max-h-screen { max-height: 100vh; }
  .md\:w-8 { width: 2rem; }
  .md\:w-1\/3 { width: 33.3333%; }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-1\/4 { width: 25%; }
  .md\:w-full { width: 100%; }
  .md\:w-\[25\%\] { width: 25%; }
  .md\:w-\[15\%\] { width: 15%; }
  .md\:w-\[85\%\] { width: 85%; }
  .md\:w-60 { width: 15rem; }
  .md\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .md\:flex-row { flex-direction: row; }
  .md\:justify-start { justify-content: flex-start; }
  .md\:justify-center { justify-content: center; }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:p-8 { padding: 2rem; }
  .md\:py-6 { padding-top: 1.5rem; padding-bottom: 1.5rem; }
  .md\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .md\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .md\:px-12 { padding-left: 3rem; padding-right: 3rem; }
  .md\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .md\:px-40 { padding-left: 10rem; padding-right: 10rem; }
  .md\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .md\:pl-\[15\%\] { padding-left: 15%; }
  .md\:pt-20 { padding-top: 5rem; }
  .md\:pt-24 { padding-top: 6rem; }
  .md\:pr-16 { padding-right: 4rem; }
  .md\:pl-3 { padding-left: 0.75rem; }
  .md\:text-left { text-align: left; }
  .md\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .md\:text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
  .md\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .md\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-xl { font-size: 1.25rem; line-height: 1.75rem; }
}

@media (min-width: 1024px) {
  .lg\:my-2 { margin-top: 0.5rem; margin-bottom: 0.5rem; }
  .lg\:my-0 { margin-top: 0px; margin-bottom: 0px; }
  .lg\:mx-0 { margin-left: 0px; margin-right: 0px; }
  .lg\:-mx-1 { margin-left: -0.25rem; margin-right: -0.25rem; }
  .lg\:my-1 { margin-top: 0.25rem; margin-bottom: 0.25rem; }
  .lg\:mx-8 { margin-left: 2rem; margin-right: 2rem; }
  .lg\:mx-4 { margin-left: 1rem; margin-right: 1rem; }
  .lg\:mr-16 { margin-right: 4rem; }
  .lg\:mt-0 { margin-top: 0px; }
  .lg\:block { display: block; }
  .lg\:flex { display: flex; }
  .lg\:h-64 { height: 16rem; }
  .lg\:h-\[30vh\] { height: 30vh; }
  .lg\:h-auto { height: auto; }
  .lg\:min-h-screen { min-height: 100vh; }
  .lg\:w-1\/2 { width: 50%; }
  .lg\:w-8\/12 { width: 66.6667%; }
  .lg\:w-1\/4 { width: 25%; }
  .lg\:w-2\/3 { width: 66.6667%; }
  .lg\:w-3\/5 { width: 60%; }
  .lg\:w-2\/6 { width: 33.3333%; }
  .lg\:w-\[18\%\] { width: 18%; }
  .lg\:w-1\/3 { width: 33.3333%; }
  .lg\:w-auto { width: auto; }
  .lg\:max-w-4xl { max-width: 56rem; }
  .lg\:flex-1 { flex: 1 1 0%; }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .lg\:flex-row { flex-direction: row; }
  .lg\:content-center { align-content: center; }
  .lg\:justify-start { justify-content: flex-start; }
  .lg\:justify-end { justify-content: flex-end; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:overflow-x-hidden { overflow-x: hidden; }
  .lg\:p-12 { padding: 3rem; }
  .lg\:p-10 { padding: 2.5rem; }
  .lg\:px-12 { padding-left: 3rem; padding-right: 3rem; }
  .lg\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .lg\:py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }
  .lg\:py-4 { padding-top: 1rem; padding-bottom: 1rem; }
  .lg\:py-5 { padding-top: 1.25rem; padding-bottom: 1.25rem; }
  .lg\:px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }
  .lg\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
  .lg\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:pr-0 { padding-right: 0px; }
  .lg\:pl-4 { padding-left: 1rem; }
  .lg\:text-left { text-align: left; }
  .lg\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .lg\:text-xl { font-size: 1.25rem; line-height: 1.75rem; }
  .lg\:text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
}

@media (min-width: 1280px) {
  .xl\:-mx-1 { margin-left: -0.25rem; margin-right: -0.25rem; }
  .xl\:my-1 { margin-top: 0.25rem; margin-bottom: 0.25rem; }
  .xl\:h-52 { height: 13rem; }
  .xl\:h-\[70vh\] { height: 70vh; }
  .xl\:h-\[64vh\] { height: 64vh; }
  .xl\:w-2\/3 { width: 66.6667%; }
  .xl\:px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }
  .xl\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
}
------MultipartBoundary--jp4s04Prax7r58rcbeQOam2nREQD6vuJy3WOXxojCZ----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.codewithharry.com/_next/static/css/470c5e8db7cdc7e9.css

@charset "utf-8";

:root { --toastify-color-light: #fff; --toastify-color-dark: #121212; --toa=
stify-color-info: #3498db; --toastify-color-success: #07bc0c; --toastify-co=
lor-warning: #f1c40f; --toastify-color-error: #e74c3c; --toastify-color-tra=
nsparent: hsla(0,0%,100%,.7); --toastify-icon-color-info: var(--toastify-co=
lor-info); --toastify-icon-color-success: var(--toastify-color-success); --=
toastify-icon-color-warning: var(--toastify-color-warning); --toastify-icon=
-color-error: var(--toastify-color-error); --toastify-toast-width: 320px; -=
-toastify-toast-background: #fff; --toastify-toast-min-height: 64px; --toas=
tify-toast-max-height: 800px; --toastify-font-family: sans-serif; --toastif=
y-z-index: 9999; --toastify-text-color-light: #757575; --toastify-text-colo=
r-dark: #fff; --toastify-text-color-info: #fff; --toastify-text-color-succe=
ss: #fff; --toastify-text-color-warning: #fff; --toastify-text-color-error:=
 #fff; --toastify-spinner-color: #616161; --toastify-spinner-color-empty-ar=
ea: #e0e0e0; --toastify-color-progress-light: linear-gradient(90deg,#4cd964=
,#5ac8fa,#007aff,#34aadc,#5856d6,#ff2d55); --toastify-color-progress-dark: =
#bb86fc; --toastify-color-progress-info: var(--toastify-color-info); --toas=
tify-color-progress-success: var(--toastify-color-success); --toastify-colo=
r-progress-warning: var(--toastify-color-warning); --toastify-color-progres=
s-error: var(--toastify-color-error); }

.Toastify__toast-container { z-index: var(--toastify-z-index); transform: t=
ranslate3d(0,0,var(--toastify-z-index) px); position: fixed; padding: 4px; =
width: var(--toastify-toast-width); box-sizing: border-box; color: rgb(255,=
 255, 255); }

.Toastify__toast-container--top-left { top: 1em; left: 1em; }

.Toastify__toast-container--top-center { top: 1em; left: 50%; transform: tr=
anslateX(-50%); }

.Toastify__toast-container--top-right { top: 1em; right: 1em; }

.Toastify__toast-container--bottom-left { bottom: 1em; left: 1em; }

.Toastify__toast-container--bottom-center { bottom: 1em; left: 50%; transfo=
rm: translateX(-50%); }

.Toastify__toast-container--bottom-right { bottom: 1em; right: 1em; }

@media only screen and (max-width: 480px) {
  .Toastify__toast-container { width: 100vw; padding: 0px; left: 0px; margi=
n: 0px; }
  .Toastify__toast-container--top-center, .Toastify__toast-container--top-l=
eft, .Toastify__toast-container--top-right { top: 0px; transform: translate=
X(0px); }
  .Toastify__toast-container--bottom-center, .Toastify__toast-container--bo=
ttom-left, .Toastify__toast-container--bottom-right { bottom: 0px; transfor=
m: translateX(0px); }
  .Toastify__toast-container--rtl { right: 0px; left: auto; }
}

.Toastify__toast { position: relative; min-height: var(--toastify-toast-min=
-height); box-sizing: border-box; margin-bottom: 1rem; padding: 8px; border=
-radius: 4px; box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 10px 0px, rgba(0, 0, 0=
, 0.05) 0px 2px 15px 0px; display: flex; justify-content: space-between; ma=
x-height: var(--toastify-toast-max-height); overflow: hidden; font-family: =
var(--toastify-font-family); cursor: pointer; direction: ltr; }

.Toastify__toast--rtl { direction: rtl; }

.Toastify__toast-body { margin: auto 0px; flex: 1 1 auto; padding: 6px; dis=
play: flex; align-items: center; }

.Toastify__toast-body > div:last-child { flex: 1 1 0%; }

.Toastify__toast-icon { margin-inline-end: 10px; width: 20px; flex-shrink: =
0; display: flex; }

.Toastify--animate { animation-fill-mode: both; animation-duration: 0.7s; }

.Toastify--animate-icon { animation-fill-mode: both; animation-duration: 0.=
3s; }

@media only screen and (max-width: 480px) {
  .Toastify__toast { margin-bottom: 0px; border-radius: 0px; }
}

.f { --y: calc(var(--len) - var(--nth)); position: absolute; bottom: 0px; r=
ight: 0px; width: 100%; transform: translate3d(0,calc(var(--y) * -40%),0) s=
cale(calc(1 - .05 * var(--y))); transition: all 0.3s ease 0s; min-height: 8=
0px; }

.Toastify__toast-theme--dark { background: var(--toastify-color-dark); colo=
r: var(--toastify-text-color-dark); }

.Toastify__toast-theme--colored.Toastify__toast--default, .Toastify__toast-=
theme--light { background: var(--toastify-color-light); color: var(--toasti=
fy-text-color-light); }

.Toastify__toast-theme--colored.Toastify__toast--info { color: var(--toasti=
fy-text-color-info); background: var(--toastify-color-info); }

.Toastify__toast-theme--colored.Toastify__toast--success { color: var(--toa=
stify-text-color-success); background: var(--toastify-color-success); }

.Toastify__toast-theme--colored.Toastify__toast--warning { color: var(--toa=
stify-text-color-warning); background: var(--toastify-color-warning); }

.Toastify__toast-theme--colored.Toastify__toast--error { color: var(--toast=
ify-text-color-error); background: var(--toastify-color-error); }

.Toastify__progress-bar-theme--light { background: var(--toastify-color-pro=
gress-light); }

.Toastify__progress-bar-theme--dark { background: var(--toastify-color-prog=
ress-dark); }

.Toastify__progress-bar--info { background: var(--toastify-color-progress-i=
nfo); }

.Toastify__progress-bar--success { background: var(--toastify-color-progres=
s-success); }

.Toastify__progress-bar--warning { background: var(--toastify-color-progres=
s-warning); }

.Toastify__progress-bar--error { background: var(--toastify-color-progress-=
error); }

.Toastify__progress-bar-theme--colored.Toastify__progress-bar--error, .Toas=
tify__progress-bar-theme--colored.Toastify__progress-bar--info, .Toastify__=
progress-bar-theme--colored.Toastify__progress-bar--success, .Toastify__pro=
gress-bar-theme--colored.Toastify__progress-bar--warning { background: var(=
--toastify-color-transparent); }

.Toastify__close-button { color: rgb(255, 255, 255); background: transparen=
t; outline: none; border: none; padding: 0px; cursor: pointer; opacity: 0.7=
; transition: all 0.3s ease 0s; align-self: flex-start; }

.Toastify__close-button--light { color: rgb(0, 0, 0); opacity: 0.3; }

.Toastify__close-button > svg { fill: currentcolor; height: 16px; width: 14=
px; }

.Toastify__close-button:focus, .Toastify__close-button:hover { opacity: 1; =
}

@-webkit-keyframes Toastify__trackProgress {=20
  0% { transform: scaleX(1); }
  100% { transform: scaleX(0); }
}

@keyframes Toastify__trackProgress {=20
  0% { transform: scaleX(1); }
  100% { transform: scaleX(0); }
}

.Toastify__progress-bar { position: absolute; bottom: 0px; left: 0px; width=
: 100%; height: 5px; z-index: var(--toastify-z-index); opacity: 0.7; transf=
orm-origin: left center; }

.Toastify__progress-bar--animated { animation: auto linear 0s 1 normal forw=
ards running Toastify__trackProgress; }

.Toastify__progress-bar--controlled { transition: transform 0.2s ease 0s; }

.Toastify__progress-bar--rtl { right: 0px; left: auto; transform-origin: ri=
ght center; }

.Toastify__spinner { width: 20px; height: 20px; box-sizing: border-box; bor=
der-radius: 100%; border-top: 2px solid; border-bottom: 2px solid; border-l=
eft: 2px solid; border-image: initial; border-right: 2px solid var(--toasti=
fy-spinner-color); animation: 0.65s linear 0s infinite normal none running =
Toastify__spin; }

@-webkit-keyframes Toastify__bounceInRight {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(3000px, 0px, 0px); }
  60% { opacity: 1; transform: translate3d(-25px, 0px, 0px); }
  75% { transform: translate3d(10px, 0px, 0px); }
  90% { transform: translate3d(-5px, 0px, 0px); }
  100% { transform: none; }
}

@keyframes Toastify__bounceInRight {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(3000px, 0px, 0px); }
  60% { opacity: 1; transform: translate3d(-25px, 0px, 0px); }
  75% { transform: translate3d(10px, 0px, 0px); }
  90% { transform: translate3d(-5px, 0px, 0px); }
  100% { transform: none; }
}

@-webkit-keyframes Toastify__bounceOutRight {=20
  20% { opacity: 1; transform: translate3d(-20px, 0px, 0px); }
  100% { opacity: 0; transform: translate3d(2000px, 0px, 0px); }
}

@keyframes Toastify__bounceOutRight {=20
  20% { opacity: 1; transform: translate3d(-20px, 0px, 0px); }
  100% { opacity: 0; transform: translate3d(2000px, 0px, 0px); }
}

@-webkit-keyframes Toastify__bounceInLeft {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(-3000px, 0px, 0px); }
  60% { opacity: 1; transform: translate3d(25px, 0px, 0px); }
  75% { transform: translate3d(-10px, 0px, 0px); }
  90% { transform: translate3d(5px, 0px, 0px); }
  100% { transform: none; }
}

@keyframes Toastify__bounceInLeft {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(-3000px, 0px, 0px); }
  60% { opacity: 1; transform: translate3d(25px, 0px, 0px); }
  75% { transform: translate3d(-10px, 0px, 0px); }
  90% { transform: translate3d(5px, 0px, 0px); }
  100% { transform: none; }
}

@-webkit-keyframes Toastify__bounceOutLeft {=20
  20% { opacity: 1; transform: translate3d(20px, 0px, 0px); }
  100% { opacity: 0; transform: translate3d(-2000px, 0px, 0px); }
}

@keyframes Toastify__bounceOutLeft {=20
  20% { opacity: 1; transform: translate3d(20px, 0px, 0px); }
  100% { opacity: 0; transform: translate3d(-2000px, 0px, 0px); }
}

@-webkit-keyframes Toastify__bounceInUp {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(0px, 3000px, 0px); }
  60% { opacity: 1; transform: translate3d(0px, -20px, 0px); }
  75% { transform: translate3d(0px, 10px, 0px); }
  90% { transform: translate3d(0px, -5px, 0px); }
  100% { transform: translateZ(0px); }
}

@keyframes Toastify__bounceInUp {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(0px, 3000px, 0px); }
  60% { opacity: 1; transform: translate3d(0px, -20px, 0px); }
  75% { transform: translate3d(0px, 10px, 0px); }
  90% { transform: translate3d(0px, -5px, 0px); }
  100% { transform: translateZ(0px); }
}

@-webkit-keyframes Toastify__bounceOutUp {=20
  20% { transform: translate3d(0px, -10px, 0px); }
  40%, 45% { opacity: 1; transform: translate3d(0px, 20px, 0px); }
  100% { opacity: 0; transform: translate3d(0px, -2000px, 0px); }
}

@keyframes Toastify__bounceOutUp {=20
  20% { transform: translate3d(0px, -10px, 0px); }
  40%, 45% { opacity: 1; transform: translate3d(0px, 20px, 0px); }
  100% { opacity: 0; transform: translate3d(0px, -2000px, 0px); }
}

@-webkit-keyframes Toastify__bounceInDown {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(0px, -3000px, 0px); }
  60% { opacity: 1; transform: translate3d(0px, 25px, 0px); }
  75% { transform: translate3d(0px, -10px, 0px); }
  90% { transform: translate3d(0px, 5px, 0px); }
  100% { transform: none; }
}

@keyframes Toastify__bounceInDown {=20
  0%, 60%, 75%, 90%, 100% { animation-timing-function: cubic-bezier(0.215, =
0.61, 0.355, 1); }
  0% { opacity: 0; transform: translate3d(0px, -3000px, 0px); }
  60% { opacity: 1; transform: translate3d(0px, 25px, 0px); }
  75% { transform: translate3d(0px, -10px, 0px); }
  90% { transform: translate3d(0px, 5px, 0px); }
  100% { transform: none; }
}

@-webkit-keyframes Toastify__bounceOutDown {=20
  20% { transform: translate3d(0px, 10px, 0px); }
  40%, 45% { opacity: 1; transform: translate3d(0px, -20px, 0px); }
  100% { opacity: 0; transform: translate3d(0px, 2000px, 0px); }
}

@keyframes Toastify__bounceOutDown {=20
  20% { transform: translate3d(0px, 10px, 0px); }
  40%, 45% { opacity: 1; transform: translate3d(0px, -20px, 0px); }
  100% { opacity: 0; transform: translate3d(0px, 2000px, 0px); }
}

.Toastify__bounce-enter--bottom-left, .Toastify__bounce-enter--top-left { a=
nimation-name: Toastify__bounceInLeft; }

.Toastify__bounce-enter--bottom-right, .Toastify__bounce-enter--top-right {=
 animation-name: Toastify__bounceInRight; }

.Toastify__bounce-enter--top-center { animation-name: Toastify__bounceInDow=
n; }

.Toastify__bounce-enter--bottom-center { animation-name: Toastify__bounceIn=
Up; }

.Toastify__bounce-exit--bottom-left, .Toastify__bounce-exit--top-left { ani=
mation-name: Toastify__bounceOutLeft; }

.Toastify__bounce-exit--bottom-right, .Toastify__bounce-exit--top-right { a=
nimation-name: Toastify__bounceOutRight; }

.Toastify__bounce-exit--top-center { animation-name: Toastify__bounceOutUp;=
 }

.Toastify__bounce-exit--bottom-center { animation-name: Toastify__bounceOut=
Down; }

@-webkit-keyframes Toastify__zoomIn {=20
  0% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  50% { opacity: 1; }
}

@keyframes Toastify__zoomIn {=20
  0% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  50% { opacity: 1; }
}

@-webkit-keyframes Toastify__zoomOut {=20
  0% { opacity: 1; }
  50% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  100% { opacity: 0; }
}

@keyframes Toastify__zoomOut {=20
  0% { opacity: 1; }
  50% { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  100% { opacity: 0; }
}

.Toastify__zoom-enter { animation-name: Toastify__zoomIn; }

.Toastify__zoom-exit { animation-name: Toastify__zoomOut; }

@-webkit-keyframes Toastify__flipIn {=20
  0% { transform: perspective(400px) rotateX(90deg); animation-timing-funct=
ion: ease-in; opacity: 0; }
  40% { transform: perspective(400px) rotateX(-20deg); animation-timing-fun=
ction: ease-in; }
  60% { transform: perspective(400px) rotateX(10deg); opacity: 1; }
  80% { transform: perspective(400px) rotateX(-5deg); }
  100% { transform: perspective(400px); }
}

@keyframes Toastify__flipIn {=20
  0% { transform: perspective(400px) rotateX(90deg); animation-timing-funct=
ion: ease-in; opacity: 0; }
  40% { transform: perspective(400px) rotateX(-20deg); animation-timing-fun=
ction: ease-in; }
  60% { transform: perspective(400px) rotateX(10deg); opacity: 1; }
  80% { transform: perspective(400px) rotateX(-5deg); }
  100% { transform: perspective(400px); }
}

@-webkit-keyframes Toastify__flipOut {=20
  0% { transform: perspective(400px); }
  30% { transform: perspective(400px) rotateX(-20deg); opacity: 1; }
  100% { transform: perspective(400px) rotateX(90deg); opacity: 0; }
}

@keyframes Toastify__flipOut {=20
  0% { transform: perspective(400px); }
  30% { transform: perspective(400px) rotateX(-20deg); opacity: 1; }
  100% { transform: perspective(400px) rotateX(90deg); opacity: 0; }
}

.Toastify__flip-enter { animation-name: Toastify__flipIn; }

.Toastify__flip-exit { animation-name: Toastify__flipOut; }

@-webkit-keyframes Toastify__slideInRight {=20
  0% { transform: translate3d(110%, 0px, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@keyframes Toastify__slideInRight {=20
  0% { transform: translate3d(110%, 0px, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@-webkit-keyframes Toastify__slideInLeft {=20
  0% { transform: translate3d(-110%, 0px, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@keyframes Toastify__slideInLeft {=20
  0% { transform: translate3d(-110%, 0px, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@-webkit-keyframes Toastify__slideInUp {=20
  0% { transform: translate3d(0px, 110%, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@keyframes Toastify__slideInUp {=20
  0% { transform: translate3d(0px, 110%, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@-webkit-keyframes Toastify__slideInDown {=20
  0% { transform: translate3d(0px, -110%, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@keyframes Toastify__slideInDown {=20
  0% { transform: translate3d(0px, -110%, 0px); visibility: visible; }
  100% { transform: translateZ(0px); }
}

@-webkit-keyframes Toastify__slideOutRight {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(110%, 0px, 0px); }
}

@keyframes Toastify__slideOutRight {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(110%, 0px, 0px); }
}

@-webkit-keyframes Toastify__slideOutLeft {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(-110%, 0px, 0px); }
}

@keyframes Toastify__slideOutLeft {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(-110%, 0px, 0px); }
}

@-webkit-keyframes Toastify__slideOutDown {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(0px, 500px, 0px); }
}

@keyframes Toastify__slideOutDown {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(0px, 500px, 0px); }
}

@-webkit-keyframes Toastify__slideOutUp {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(0px, -500px, 0px); }
}

@keyframes Toastify__slideOutUp {=20
  0% { transform: translateZ(0px); }
  100% { visibility: hidden; transform: translate3d(0px, -500px, 0px); }
}

.Toastify__slide-enter--bottom-left, .Toastify__slide-enter--top-left { ani=
mation-name: Toastify__slideInLeft; }

.Toastify__slide-enter--bottom-right, .Toastify__slide-enter--top-right { a=
nimation-name: Toastify__slideInRight; }

.Toastify__slide-enter--top-center { animation-name: Toastify__slideInDown;=
 }

.Toastify__slide-enter--bottom-center { animation-name: Toastify__slideInUp=
; }

.Toastify__slide-exit--bottom-left, .Toastify__slide-exit--top-left { anima=
tion-name: Toastify__slideOutLeft; }

.Toastify__slide-exit--bottom-right, .Toastify__slide-exit--top-right { ani=
mation-name: Toastify__slideOutRight; }

.Toastify__slide-exit--top-center { animation-name: Toastify__slideOutUp; }

.Toastify__slide-exit--bottom-center { animation-name: Toastify__slideOutDo=
wn; }

@-webkit-keyframes Toastify__spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

@keyframes Toastify__spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}
------MultipartBoundary--jp4s04Prax7r58rcbeQOam2nREQD6vuJy3WOXxojCZ----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.codewithharry.com/_next/static/css/15f7f4f00b653c3e.css

@charset "utf-8";

pre[class*=3D"language-"].line-numbers { position: relative; padding-left: =
3.8em; counter-reset: linenumber 0; }

pre[class*=3D"language-"].line-numbers > code { position: relative; white-s=
pace: inherit; }

.line-numbers .line-numbers-rows { position: absolute; pointer-events: none=
; top: 0px; font-size: 100%; left: -3.8em; width: 3em; letter-spacing: -1px=
; border-right: 1px solid rgb(153, 153, 153); user-select: none; }

.line-numbers-rows > span { display: block; counter-increment: linenumber 1=
; }

.line-numbers-rows > span::before { content: counter(linenumber); color: rg=
b(153, 153, 153); display: block; padding-right: 0.8em; text-align: right; =
}

div.code-toolbar { position: relative; }

div.code-toolbar > .toolbar { position: absolute; z-index: 10; top: 0.3em; =
right: 0.2em; transition: opacity 0.3s ease-in-out 0s; opacity: 0; }

div.code-toolbar:hover > .toolbar { opacity: 1; }

div.code-toolbar:focus-within > .toolbar { opacity: 1; }

div.code-toolbar > .toolbar > .toolbar-item { display: inline-block; }

div.code-toolbar > .toolbar > .toolbar-item > a { cursor: pointer; }

div.code-toolbar > .toolbar > .toolbar-item > button { background: none; bo=
rder: 0px; color: inherit; font-style: inherit; font-variant: inherit; font=
-weight: inherit; font-stretch: inherit; font-size: inherit; font-family: i=
nherit; font-optical-sizing: inherit; font-kerning: inherit; font-feature-s=
ettings: inherit; font-variation-settings: inherit; line-height: normal; ov=
erflow: visible; padding: 0px; user-select: none; }

div.code-toolbar > .toolbar > .toolbar-item > a, div.code-toolbar > .toolba=
r > .toolbar-item > button, div.code-toolbar > .toolbar > .toolbar-item > s=
pan { color: rgb(187, 187, 187); font-size: 0.8em; padding: 0px 0.5em; back=
ground: rgba(224, 224, 224, 0.2); box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 0p=
x 0px; border-radius: 0.5em; }

div.code-toolbar > .toolbar > .toolbar-item > a:focus, div.code-toolbar > .=
toolbar > .toolbar-item > a:hover, div.code-toolbar > .toolbar > .toolbar-i=
tem > button:focus, div.code-toolbar > .toolbar > .toolbar-item > button:ho=
ver, div.code-toolbar > .toolbar > .toolbar-item > span:focus, div.code-too=
lbar > .toolbar > .toolbar-item > span:hover { color: inherit; text-decorat=
ion: none; }

code[class*=3D"language-"], pre[class*=3D"language-"] { color: rgb(248, 248=
, 242); background: none; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; font-fam=
ily: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace; font-size: =
1em; text-align: left; white-space: pre; word-spacing: normal; word-break: =
normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none=
; }

pre[class*=3D"language-"] { padding: 1em; margin: 0.5em 0px; overflow: auto=
; border-radius: 0.3em; }

:not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backgro=
und: rgb(39, 40, 34); }

:not(pre) > code[class*=3D"language-"] { padding: 0.1em; border-radius: 0.3=
em; white-space: normal; }

.token.cdata, .token.comment, .token.doctype, .token.prolog { color: rgb(13=
0, 146, 162); }

.token.punctuation { color: rgb(248, 248, 242); }

.token.namespace { opacity: 0.7; }

.token.constant, .token.deleted, .token.property, .token.symbol, .token.tag=
 { color: rgb(249, 38, 114); }

.token.boolean, .token.number { color: rgb(174, 129, 255); }

.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.sele=
ctor, .token.string { color: rgb(166, 226, 46); }

.language-css .token.string, .style .token.string, .token.entity, .token.op=
erator, .token.url, .token.variable { color: rgb(248, 248, 242); }

.token.atrule, .token.attr-value, .token.class-name, .token.function { colo=
r: rgb(230, 219, 116); }

.token.keyword { color: rgb(102, 217, 239); }

.token.important, .token.regex { color: rgb(253, 151, 31); }

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }
------MultipartBoundary--jp4s04Prax7r58rcbeQOam2nREQD6vuJy3WOXxojCZ----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.codewithharry.com/img/logo-blue.png

iVBORw0KGgoAAAANSUhEUgAAAJIAAACSCAYAAACue5OOAAAgAElEQVR4nOR9B5hU5fX+e+v0sr2w
DZYOgkgVlCIqItiiYiG2qLEklhiNGjXWNGOJRo3RaGJMYjfGjlIsqCC9d1jY3mZ3ernt/5xzZ5bV
YEDFmPz+3/Nchpm9M3Pnfuc75T3vOZ+A/w9H/4q+haFI5+RkMjHW6QoMsmBWG4ZRaJq6Tzc0l67r
smVZkiBAEEUFFiy4nS5YlmE5FNlwu1y6Q5WSomVEDUnoEGDt1vXEFkBfZqYzH+xuMzr+f7ur/+cF
qaK01plIxU7W9NSsTCZzmGFqlYZheEVBFARYgCAi4AtCFiWkEmEIog5FBPSUCV0H7r7jNpw44zS0
de6BYGoIBAuwauVHaGqthyU4sLWtHaGuBLbv2o5ddXvQHYlYxYUFMZdD2WMZ+oqOzpZX9bj1RgxW
6r/gdnxj4/+kIJUGS8YbIr7XEWo7CgJqAMiyKMM0TYgw4VBVCJaJdEaH0+mCIIiwoMOlqnA6VCRi
XUglLHhcAkYcMhjzXlqHDz95HdFwB8LRDhw//SSoqopItBu7dwqo7TcUkBKIppsRS7Zg7ZblWLz8
A+zY1YZlqzbCNA2tpDCwWxGNhZlE15PbmrSl/wW36aCO/zOCdOs1d0/atG3DD/7x5t+O1gy9UIAg
qLIDoihCkhTA0qHrOkRBh8PhgiwIMAwDliDz+3UjDVmwIEkikrE06Sq4ZQEZHfjLo3/Gzt3rsXzZ
Auxu2IqpE4/GxPHTMH3qSUhEK/DuwpeRMbvxycpXcenFP4THL8KUwqjbsw2lJX3Q0NiBhe+vxnuL
V2HNpi1WeXFJh0MQ53c01j/caZoffes37yCM/2lBeuDWnxdu3Nl43Yp1K8/cuHVdZf+agcLGjatQ
WlSItq5OeFx+1jYkTDR0XYNlavyaYBowTBMVFdUYOngUksk4Vq7+CMlUDOVFFdCMFDpa2kBv/dEV
t+HEmXNw1U/m4KZr78Of/nof3p73NgwDoE/OU/IQ0rpQ6BXRFTOx/tNliGeaEY02IKmFIAsmYGlQ
RRmK6sXHy7bj+TcXY/GKzVZlcWm9V8GzXQ2Nv9mZ1v9nfSvpv+AavvT43V2/neBUnY8989rLDza3
NU85dfZZgcfvf1ZYtfJ9bNm2GT6fF2ldQzqVhmFoMAydzAsfhp5BJpOBrhkwDBMZPQlZktHV3YGG
hgZkNAtaJo5EKoZM2oJmAG6XgiuvvhpP/eVR6Foaa9YtQTzRDbdDgFsuRHc6BJcsIJkCfF4R/fqW
YcyYCdC0KCTZAiwTbpcLAW8QmpaER0lh+oTBuHjObEGwSgIrt22fFLZw5YDKiklBh76jM5Zu+B+b
kv8tjfTIHXce9+b7i279YOmysdMnHi5des5cjBgxAxAdSGaSOHrWQHTFEtDSFhweFyTBgXgizhqJ
hEUQBMAwWaBECJBlBTpSkCSZhY0GRWmpVAKCKSEvWMCvtXa04e9/XISnn3kQm7euR3e4E12REJyK
Axk9DckCyvt4EetKIJqw4BUl/PSa+zBmxEQMGdAX4dh2JJO7IcidkNVOWEI7dKsDlmXBlZgECW6s
2rEbT746HwuWrTAH1/RZhkzHbcu2db39Ld/yAx7/Exrp4Tt/MU0QhGefeO7Z60YPP6TyoTtvF887
9RSUFOTDkoJQHR58vHQ+nnv+GTjcEkzDgmGZ/CiKtg8Ey2IB0rQMtIzOgkNhfTqjQVUV/ls6TcJE
fpIEPaMjkYyDZC+taThq8mw88+KjUBUngsFCGLqGWDIGh0OAyyEgEtGQSgPlBcXwuLwIBgqwfv2n
uPbGufB4gdGjDoPDaaK9czt0MwyHU2BBEtPlECwFhXleTBszAsdOnijUNYcqPl678+xRw4bOKgpI
O1o6o3Xf9hzsb/xXa6SP//n8oPse++Pv5n/4yVEnz5gmXTr3BBw67BDUN+xESWkFYtEE3HlHYM45
R2LxktX8HpdfACyR5AZOhw+xZJyf54ZoWZBIHxFIJAhIaAk+lw4SGvKJREHhSbYMAZKqQhIdfK4I
BSYJqGkCpi0Icamd30saTpWcUMV8yIYTRsaCqWuoKClBfetKfOfY4/HEQ3/Fuk1voqhYwva6pehf
VQW9s4M1oiDK0EwgbZDvpqAxlMLDzy7A/I/XGEMHVCxSpa4ffrC8dcu3OyNfPP4rNdKWD5dLeUHf
/T/95d1/zA/mDXr6vjvFE6aPQ1lxCYfc1QOGo7F+O3zefCxethYrV3+C8eMmoKOjDpYoIBHXkUxZ
HNILIk2xLTg0CD0Shb3PTUHr+V56yX7ZFjx6nyXA1nCGAV03WIgsy2T/SietpqSz5wp8vggHBFNm
QYNpoTPeiJqCSqxavwwdbRtx5unnYMeu5RgxfAT27N4Etyjbn0efS9cmq1AUN/z+AKZNHIPJE8aK
S9ds67e1ruuiIyaMKaosd79bV99hfRvz8u/Gf51GevO5v5946y9+8bu2jvaqe2++CiOHliAYyEci
mYFgSSgp649du7Zj0OgpgCOIS+aejc3bN2DO6Zfg4Ud/gY5wB0wDyBgmvO48NmWsXazcvTf5XxH2
c0OS2MxxRMdaSbQPCDzBkqgybGDp9vskSWVBNFmYDFiq2xYEwbS1lixCEA2YlgHR0qBlNLgEAXoG
8AgCRg4fhmcfXYRYvBuxjg4U5b8JTSdTm2GTKqsqIKnQyQzrEkxBhij78N6K7bjjwWfgdCh7Kkuk
K+Z/svvVb22S9jH+azSS2Rx3NrXs/vMd99x7x0kzjsp74Q93w+8y0bf/YIS7O1FUVAGnw420pkPT
DDzxx19g0TsvQ9e8cLl8KCoux4pVHyMSj8PrDUCSFZ5ENhusaXJrxhag3DNJUXoJmgVBkFhr5c4l
n4j/btqfIUsKTzgJE59BGBUEmFkBtRgtN/kLRMGCx+2GDAMOVUQmYyHgcWDXjk0467wLYcYMSOJa
+3qyppbeZ1gWazuCF7y+fKTSGnxeBafOnIZYUgzM+3Dd6ZPGDh00YoD7zS27uvT/8FTtc/xXCNJb
Tz059YIfXfbO5m3bJv/5nhvFs2cfCVXQEPT50VC/Ay5XEB53Cdo7UkhmVLz69nwcN/Ny9Ckfizfe
fBmZlIFNm9aitbkVkVgSHocXoqgiEY9BUR224bFsh5uASZIKQrhp+i2ZcmhCVhuRgNjXJPC5gCKT
bjIgWDoEwYAoahBFHSIyEKFDspx0MkduJtIwhCQsaICkAbKBeCwD2W0hzaYW+OUdT+IfbzyHyrJD
MHjACHR1L4MoOGBJDogkcroJU8+wxqRUTSbVDb9TQdCpQEESkw6twdTDR4nPvv7hiHhCnDt19OA1
G3Y0fOvO+LcuSHddf8MtN9/968fGjBhW+MLD92BQbRUsQ0M8HkY8EUN5ZS2bk3gijZLivrjlrh9A
FJ340Y2X4Jnnn8DWbbsQ7m7Dlp07oSoyMroGRVZYTERRgiiJtrbhqI38G6PnOT9ISo82Qo+fJMAy
bZggp5zYBxJsgTNNq0ejmabCfhmdZwoGTBi2uhM4jcdHKgYoogBTA0qLinDxOT/B9Tefj1NnfQ+p
xCcQBAuCJHDaxjINWDAgyzJURYVGmkk32BgLkoJ4IgFJ1HD6jInY3RzJm790w1mzj5oubNi29YNv
bxa/RUFK7kk4w5HQC48//dQlD9x8nXL9Jd+FU7KQiLYjEY/A5XQhr6gMu3ftgNdVjmgUCEUM3P7r
W/Hpqg0IBGo5ugk6XXC7/PB5/XCoLkiyyr5LJBaFojh6bBhPEAkPNPKBWW5IKDRRYlMiWIKtkUTw
ebqpg2SC9IwiWJAVyxYy03azyLDJJChCBoqYhiiSD2fA9s4VSJYHsuVBSX4lUukYCoIBJBIptHSu
wKChJehKb8WAYQH4ZULfVViWA7AUiIIMRXJAEkTIpoWg2w89lUQmFYVbkhH0ehF0OOEUdUw5dAD6
VBwiP/78i1OOmjDhsNGDS19Zv6PxWzF14gGcc9DHxg83D5g9d/byeQvnnfzBc38TTz5mKtLpJDKZ
NBwOJwL+PAYR492d6FNew6+Tdmlta0RzS4adYzqfhs8XRDQWhsvpRnNLve0YWxY0U+fXciPnB9nK
yMpqFtgOs5XTRkLW2balLwcLkDCShpBlEdlsiw0VSL3OAXq0197vMtHQVIdMOoNYPApFBZobTDz4
yG/g9+ejqLAMbpeHgVH7/SL7X3TQ+9OZNFpaG+BQHXxPCCglBJ6G0+lmjTllzCg8/Zv7xS11u0+q
azeW/+Cccwd8G3P6Hxek+S8/Ne3M75+wWJIjw957+W70qygDDBWSIAGSAUsxYCoGDImCdxmhqAbd
CsAbrEa4m70alJbUoKm1DopDgB4PIc+lItbVxD5FLNrNEZjfE0AkHEUqoSOdNJDRDOgEUAoOuBUv
VFmGJADJTAqaaEFwq8hIBrricYSTKWQsC2rAjYwsQJcdSFoS0oaIjGDBkC1kJAtxggVkETpNvEDR
nMpCoEgmRCkFQUzC7XdDdqqIJDUkJAfSHie2hxQsWh1Ht3QkLL8CwWUiYXbBGZSR0ruQtpKIpmOA
wwcxrwoRBNBlBKC5+wDOQsR1C5lUEk7ZQoHYhEOK2vHyr74Lj5octuCjdxdff/GRk//T8/ofNW0v
PPb70y7/yU3PTRo7PO/Pj9yCgNcPM+1gvMUSMoBgwBLZnrAfAkuC11cMf6ACqiuIjz/+EAs/fB2p
dAqjDzuCkWePaIfviXQKmmFApIiKzJtlwdAtOJwu1m4UjmtamkNtggR03WQA0FtUjFQ6iVQszgJI
eTqPxwPT1BGPkyYkYNLGjggUMNl3yt48yXbQOewX7FtpslayGNlkwDOZgCTLMC0yjwrjRfR6jAIB
WcGZx41FS8NWJBJhyJIA0dJZ+9L3eD1BpA3TxrNy2JZlEDABybLvE/mLpLEg6Zg2cSB2t0Q8r723
+fQzZo/bunJ93ab/1Nz+xwTp7w8/dMGPbr39iQvPOsn965uugpHJoLOzAy45346oRA0QdNs8sLmQ
YEKF21GMrlAYGzZswLsL30RSS7JG+nTlh2zGAsEgImniAiWgSzJE1QldFJExNejQEElFkTEogjLZ
bMoOEQppI8WCooqIdMfhEBW4HR5IlohUIoF0MsW4kUtxQTQljqQEXYQkOjmdQcCkYMlQZA8sS8vC
BbawWaZuR3zMfbJgahZUyYKiiDC1NKy0wZokE09i1/YV+PElF6J+zxYEg0WwtAwkQee8IN0Sg/w0
y3a77GDAhGiaoDsjZp36aDwD2eWGrIrQ9QyOGNMfhimqz7229KQrzzm1cfGKdav/E/P7HzFtj999
z8U/uu22R2+84hLnz66+DOFIF/s1+XlF9kVknQs7Ktrrr5Am2VW3mZOnz7/8OK696leIRrt5tZIj
PXH8dPYjyF8iX4fOpyPn99A5hfkl8Li9/DyRSCAWS3EEmEiYrJVIuEgTxeJhfnQ5PfB7g1kKisCm
Cll8KPf5/Nwye67XjgatHm2VOwyD8nZ7z9GzIDp/rgx0doaxYdNKhMMhvhd0nv07JI7YEonofu8t
aSPynciPdDpc/D1zjhuJS8+a6XjipbcfvfkHV178Tc1r7/GNa6SH7rr1wtvuu+/hO358uXreyTOQ
jEfhVNwIeAohE36iWYzD2KYNNrDHcbMCSfSjoKAvfv3bWzF92hlwuvPwymvPIJaIY9qUWSguKsOq
9csRS6eh0UTLEgzCXvQUSScUh4pILATdzEB1Sgj4fXC5JQjQeZWTJhQyBlTKwgsiHCQYmgY9k2K6
iWXo8Kk+KKYKh+iES/FAlV0QLfKvVMiCyuZYEhU2bWSCct434VHkg6myACPD7h8kSwCdJVsWAm4H
jLSJs+ecjES8Ez5PAMkkmTs7whRlWwhN8t9IjIUs0Ik0azyBAVAL7oI+iKcTiCW7IIsEgMqs8Yb1
zYffmSc9/MxLM6497+zm91esWvVNzvM3Kkh/feihM2679/7Hbr7yMse5p86yHUQK1wP5jJm0d7TA
IbvtaEkkUTAZQ6EhiIQgu7Fi1acIBsvQ0RmConjx9DO/R58+/RjJXvj+a+gOd3H0kguZTL7JzNpn
bUKUWFqtqZSBTDKNRDwDsnSEGpPWmDpuOg4dPg6HHToJfasHsUYydB2CacEhuRFJd0OnFIhlwNA0
aLpmMwXMNNJGCi6nYuNV7BMBNg9csJO/rB2zPpVl+1TEFkhnAJdTZoT+zptvglOhIKELDkWC16Ui
Hu0iwwa328t+Hz7nI4mW0JPi6Y6nmPHpdMjQtRQMM8PP6T01RUVwOLzSk6++e+xPLr58+6IlH2/4
puZa/qY++JmH755+069/+ceLzjzeef4pU6BKOlx5XmTiKXQ27IEsulHkr0Amk+IJsCh5SabBkrKC
pQKiEws+nIcrL7sfTrUIN915JVTViWFDDsW7H7zKZo68W0lQWAsYmgFZsiDLKiPRmUQULpcLMmXm
vSL6VvZF/9ohqKyoRZ8+lSjNL8OuzesRi4WR1nVUFZVg5MAatLQ2My1l0849GFpZAbczANnhYOdf
Vsi5dSKdSfH3b2vdy0EjedEsHaZlI+lksqmAQCTzZlDaA3B73Eik4jBMid+wdkMdRh0yDE27N0FR
NJhGAgYbUgupVJyF0sY3swvMsj7zPBTvRqHTAa/LAehJpBNd0DNJqLKCfI+ES04Yjng84nzi+b/+
8bc3Xtd59S9/M/+bmO9vRJDWLXp/yNmXXfzMCdMne2+84kJoyQRPFuEltMr9/jyYusRC9EUjh+eQ
zQ9UlGDHqh34eOkC9iGGDB6FdZtXYE99M/xeH5+na5ms7yTD6XBCyyQ5t5XMJFBTVoiZM07DKbPO
ZkFqa2/C2g1LsHnrWvQrq2GN4gsUMGZF19bW3obKin5YvXY5/jnvFQR9YShOJ0xDYO6Tzxtgv6wz
1MYaKoc75ZK/dpEBOJFLeoN8F/LPrCzGBI62JBaI3z58Mx665xGoqgO6nkQm3s3/97id/Pkub+Df
3uuKPn3Zx0rGw8h3e5krlY7HbH/P4YIgeXHN3BORNGTvo8+9+Pff//znUy676aaDHs0ddEFK7tjq
O/6cc16uLCssuvvG78PQYpweUBwKyENAFkW2nVYRhp6ESXRYMwNDtGCYgp3x1gSIhoD8ghoOCd5a
9DraO1rR3hXBmjVL0NHRiKBfhpU2kUgn4FEc8EgKkvEUYvEUBlZWYGckiSnjDsOck85lf+rZP9yG
N+a/j/IiEeecdTlOnjwbtQOrbLNEh+xi+1NZMwSjJwwHBBV3bN+AWCyGrXUb8MnS9/HR0vloatoD
p0tA3/JSeC03Wpqb2HxSIZzscrJAJVNpOBUnp2rCiTiZGCTTCWjwQEMG4YSJDGS8v3gbtuxsweih
hyHctgkZJYVkvBHF+YWQhBBgGVlzL2SRbztCErKmLk6+kSpAUjz8vSktDRUSLFGDoXVDlUxomRSu
/e4k7GxsLPrz88/846N//HPspFNO2r8n/yXGQRekc6686oXucGTw6688BUMP7zcutLJEMUsyocgq
X5BmiVBVN1zOPBQWlCLWnMTrb/2dJ4sU/cL3X4XH70U0oiPgdqNvWV80NtdBdaioKK+AqSWxrb4B
Rx52GKYeOYvNVEtrPfpXD8bzf3oBYw8/FlAkJNubkU5H7OvgfxNsngQosAFtmXN9BDj1rR2E44+d
i0QqgZ27tmHp8oXYuHEtHnnpRRTmFyISi/EnmOk0O8mFecXo6GpjhiaxFmRFZUEizUy/gVgJ7Nwb
Mcyb/yLGDR/DucU8XwDdiSY+jyK3rzv2RsHA3ddegHNveHDQ3b///QsAjjuY835Q+Ui/+Ml1P3/g
ySdvWPTMY+Kg/lVIxrqgyr38eUuBSQlKS+5BHlS3B1YyAc3SQG5DPJVEdzQFUfLC56vCa2+9hkQC
uOHWa1BcWABLMNHS3oWyUj+aWyLwiCryfHlIp6IoKyqBx6WipWknrv3BzehX2Q8bN36Co444FoPG
TAJMHanWejZL5JAqNLlyKJvOEOwCAcNOb5jZCfB58hmw1E2TTRTROkAAIFF2U0ksWL4Wnyx5D7sb
tmPppx+io8uE7BQQS5ksUCnDgtvr4TVLTN5kKgGHK9Dz+U4pBlnLoDNuYMuiN+FAF6A1wzIicLoU
xobAZpL+VSBadvQnZkHRmGQLvGQK9t8MDSInpjOMy4kOGdFkFKIahGH50dop4vRrfmGOHzbwV699
uOSmgzX3By1q+9O9d8/++e8efuDZxx6Sh/WtRDwZ5shClnqrJMkOu7PKmUaotYEdVwrVidTV2t6M
Jcs+xDuLXsOC996GP1CKx568D93dCS5edDidUBUB7e1R+HwC3EoA4WgIQV8APrcH23duR9+qatxy
3T3YXbcZkyZMQ3lxOUQtjWRXO4OR7qIyyA4n0vEooOpZZNomtFGqhvlGzDuSkUjE7UsXBNYYnR2t
iIdDbMacHh/KKobj2OmnY/CgkZg142wUlxZi6451CPh8DEHY/CQJ0XgUHk8QGdPgJHMqEWNhcqpA
OqlhRHUtDh8zHk0NG+BSqXwp3RPB0rBBSduvEnO0GAAZ0b6fFMnx3wjfsuFMhgss0U5As+kzFbic
AUwYfaTw4F+fGT9r4oQ1m+p2bz0Y839QBGnHR68VXPfze9+aM+vY4KwjR8Pv9jHGIpkq57YES+2h
k1mMGZkwiEUoGAiWVsGZJZcJkgiPLx8DBozHzOPOx3Fzv4d3X30Dr7/1Lqcu4vEYND0Dt8uLaDyO
0pJ8JInjLNGKTSOZjnBIfd8vH8HKdYsQ9DswaurRENJdSKa64XYRHpxAqG0HkvF2+AMeaHocTKm0
7IhIynKVpOzhUSlAELjcyOd0wO9SoUBDtLsZrY1bUewz0bRlEYJqBma8ARMOHYHLz7kMohmHpUVR
nOdHMtGNRMKAJKQhCiZHlalUjGkvhi7g+KPOxNPP34fjp50Mn9uBTLwLimQhoyW4YNO+cxLzlURL
gmSKECwxmzrRWQMRtkUMUlhOWIITmijAEGTolLMk/MqhwCQmpm5iWNUgbNi8UVqyfuPUK75/0Z8/
XPpp8uvKwEERpFB3+JlwLDnmqd/chWisGwFfHr8uQujxPizByD7mntvvTXV2IkOmg9SxYFNkCfPp
jkQQa0/itw/dwX6Jadp+Bd1YYg+qqsb+FRHZiIobj0WQjhs48ojDuaQ6mQhj5vST0VK3EalkDE7V
AdXjgex2weNwsz/GSLRgZKOuntS9nerIIdamiUQyxkh8grSIaXAKg7LvXo8PnW0NcLk82LJ9AwzT
QiyZQFNLM8aOPRqjDp0MgbhUaQ0NTU1IaSabSNNikInNK4GPl51/Iwb0r8aDD/4Il3/vSiQj5LyH
4XSpzJ9Cz92UbGa4tdcn0bP3VWCQwxYw9HDRie9i8O+RVSdZdmiaBJeaD6TC+GD1Zl9XPDG4vqnp
2a8rA187RfLnh27/3psLP5z90F1XQ5AMlJX1sROiHNkT9mIfguVmP4EI7qZgwhTTfBAtlg6CBijd
QeCd1+1HMFACl8OPVes3orZmOCcwfd48Tl1QwOd2u5BOZ2C5ZRhOASnJ4mPS1GOxqWEdho8ei7SY
REF5MYor+8BSNdQ3rkVby2ZYig7JZaEz1ghJcPGhCg4oFO8QYi06+dFB2tQwkOfwoSSvCMX+fDgo
9RGPw0wkIOsmCqtcQMdqVHli8OtNUGPb4co0oW7DWwgIURxx6HAcddhYTBo5iDnbzKRMR+FWdBiZ
BGTRi8UrPsZx08/Fuo0hCKIToqRytOdS3Db4mDVbNstTzK5/+5AsnQ/GrcgHhRO64IAOL3TBC0NU
+bDo3ks2t8ohafDJwNnjR2DNhvWzzjrlOxd+q4LUsGJz/j0PPfWr2396hVRZXswAHfkZVP4siSKv
hP2NHK+IMuFcp8/5LIk/g/hHeXle9O83FKUlFZxTojyd7bsk4XI5WZsYhr0q8/IVHDv9Ozjjoh8w
F4mwFPqcaHcHn1dWWs04USTSyf4ORYSGYde46Z/jJdE12Mi4k/0jy7BXNjnopI1UpvACZlM9+1yE
QpO2Iq1F7ALKD3Z0tqC4qBxDBh2KUSMnwusTenQ0/8Z0gq/9mZcexVXXnY5hg4vYGaf7SDk0+v/B
GGav4ge6d6riYG1YUViEWcdOlxYu/uBXV1x4bv7X+aqvZdq0RNuTbZ3h8Q/ccAOcshMyVVxo5NhJ
MCnlIRkwRZ0Pix7tW8h2jew5RW8ZyURGsFeUIimsoIWMAMEQ4VS9eOn1v2HFhhVoDYeQV1yCtJWB
qDqQSMc5KVru7o/2pgbymfHIHX/B4UPGQOqKwEyEoGaScBBICdH2KwwJoumBUyyAJBYChheC1AmR
/DXZZHND/CJTlGFQnZkoUWYLmiCDUoKGJXJ1B1FMDCMNk9BzpRa6SGVSUcTjIfjVFPwOHUKqAy49
Ai0ZRTIeR1FRNbpiSWytq2PkmrKDxLtTFCdS6QjGHDoAv/zZr1BaJKGzfSNK87wId3fAofggEi/c
dDHzgLQTuQkWccMFDTHiS1EjDEsFTBWyKUM1JJC/rlg6nKIAMW2wWVNlLzIaYVt52LKrDevrtmHW
1OMw76PF7oaG5pqO7u4Xv6osfGWN9Nx9dx717FvzT3votpt6MuS9x96qjX8dgrD3a+0qD5H9kVyN
Pr2XVg2tfFrRsVictRHxj+iwmZQOZhfuat6KQ/qPxY1X38PVrWoWdU5nWZW58UXXk8voi1lNmMub
Sb20Y46JkPt7TmP1/vzeY2/pUzbcV+1KlJLiPgh4Va6y5QretNWjtYkBSb5WfeMu1kYZLWNrw685
uFxdtitfuH1P1vejQZ8fjUVw6ZlnY09r26kLXlt31Ff9tq8sSH965Y175540Ux4xeOABv6f3ZOb+
L2UJYESbN6ngkIhclFGXRe5jNGjAMGTS4BtLpopMganpXNUqmBRNmZg8eSKqqgshyHFAjiJldsPh
FiA5LZhiApaU5Ec+pDR0MQVDjPMhwsWHbEw0iLQAACAASURBVLkhwcF+hmSpdoQEGbKgQGEmgmRX
kRCRU1SySVoBkpGAYhGqbUDqFa73/EbdgNfpRToWQb67AEF3ALIg2ybOsDuk0ARTeobMMdFmaOLJ
PNIi29+QTDCGJHBal4osddZUIDYFTKQyCRiWbhc9mNlKYsWE222hpKiYsS667uEDBsq/uvfG+76q
PHwlQXrglp9cuGLD1hHXXXjGvwjHvp7vS4A+/3/00lS5VWOYBsaNnoK8PEcPn5ryaMgi4pFoGCfO
OhNVlbVY8N4/WUNoqQRPMjnwDCl85vvEz3z3Xo62+Jlr3dd1936/0Is/lRusvXpdf+79nF90OBHq
amd/jQSHegzYmkLKFnCa6FczmM+n6NDmNZkH5GPubzAvK+t/2hwq+5GeB/z5LKykKU+deQqWLP/g
kFNO+u5FX+V7vpIgPfvGvJ/dcMX5YiDo4udfJEC9R+/Xev+NcA2OUnNUDBHsg2T0OONCEycchcPH
T+WVpOupvQlS3WTT4HBr2Fq3kMHJolIfDDMC0aEjmQ4x91kTNT50yeBHQ9JgyoSik5bKACZFZm7A
dHL1h2gorOkoz8eHmTVT2X4C5LiSr6eRP8URVRIqEpCg2+kwio440UOcJQ9UUYVC70mlEets4SiQ
aEWy5bVr4rKjrLSS7wFNrk3KUz8j+F84gVbuMLnWTkAKEFJZzaTDoVCVjQ+y7MyGfRrSmS4kMi2A
GIbqUBAOd2P37s341W2PiLt2bfvZV5GJLy1I99zy0x83trRWfe+UGbza/r1GEnuO3uf0PtfMlgnZ
bESZTQiymXRarZV9qzDz2Dn8GvtHnOW3ex0pioDnX3gJq9cuwYXnXcv+VO5zKSqjyKr39+9P2Pc1
9rUgPj9yPtTe6hPrM+fS76CoLtTVwQKiiErPb+ztZ5EfQ9Gp7c8I+/Q9v+wgf5G+nx71bM1fzgf0
eHw8h9RobN6Cl3HR2XPR1t5cefxxZ137Zb/nSwvSS2/Pu/qKC06DoioQsjY8ZyJy4/PCg39j0iwq
NsyuKoLbOIMugYnwxC0ykjomjZ/G5c90HlebmBZHbE4yDTpw5NhpGDL0EDhVhQHNdMaE01VA3SJh
Ch4+LNHLj4bg5IiMPBpToHiOaCjuHjxJzh7UgYQPQeaDJ1xUIYouWJILguiCKZNvRYS8DEA9KkUV
muiCJjr5Uac+AbIDZkpDvsOL9qY6yBQ9iZQbkzg5bHPyLDQ07uJJJYebFhRDKAfgI8mmxJ9FiLzN
Ms2wpuVImRz6DJHwLL4nmiZw9kCQKfmShKQaCEc60NzcwPx3QjQu//6N+HT5oqu+rFx8KUH69U3X
X9nQ2Njn8nPP5OdKFks50LGv1Sz2WsU5zZSLNEijNDXvRmWfGka0yRmlg25wrjnEEUcMwk+vux/N
TXbVMlWKUIQXCOTbxLfPjX+5BhaQfz2EHLUkez37juD+9fb1jtjAnGonc5bo97S2drBWzUVN3OjL
sPlMexp28OKztZTIdXCf/6yvMog75Xb7WBPmro+S0HRvIpEuxtK8Xj9Gj5qEu379cyxZtoCwsD7T
pp7ypYTpSwnSvEXvXXH1RXMFuqkydSvLfLbTR29NZKcZeh97SfK9D4m1gmQjvqbBN5YxGjPN/R4d
LpU7yRbkBZAhPg9RSUQ7aRlPmrju0tuhWBIckgvJaAampqC0YBDqGzrgcFUho1GmvRCJlAsZzQfT
8AFWEKraBxb8zMK0SDOYVJQo23xxNjd2a5p4IgXRHQQkJ+KpDFR/KWRXHtKUR3TkQfYEEE/p8BbW
wJHfD00JASHDg7QcRNJyoisaZcEuzi/AoJpyJAmNNzM9cEeOsE8awZFdmBSZ+n1Bft/+hmw5yBtj
H5IiMEEi1nuG2QKi7ERnlPhZAjIpigjbYOpueN3FKCysQsawnX8CUQlKeXPec1i7/lP0qegnbNm6
+offiCD97aEHT1izaWu/c0478ct8/tceVIrd1t7MfZHsjmtpXsHJtIljJh+Nqaeeztzv3pomFo+g
cvQEeAtLkVczkAWWKknI58hNILEkPW4fN5T4zMrPlhJZjHgb8BWXIxPphuR0I6+8GtGwjYoT95y+
tzsbjRG2RZNCgkG5PzJR9F39+g5mhH77zo0449Tvw6dk0x2CwN+f++7cYut9LQfmw+WwIaOXRrcr
dXOVJfQaVeiSpiPsiP6fYGS/hO8Fab8JY4/Cxx+txfplu3HvL/5OZLh+r7647oQDnb8DJra9/MZr
15976mzR73Jlb/iBvvPABhUWSmbuxpHjoHGEQX5PKNSIZNKC3+vk5KRDopUbxtw5VwCNEUiigO7O
NjgUD8qHDMMn897A/Id/zVRVSk0cM+1kFBUWw1Xup4+EHonCX+NDqqUDDlWCSPQB+k42cbYwCUYG
omkg0t7OV5SKRKHKHhiSB8FAKbH4UeYpQ6h+FTxBLzxFJRB1DxIxEabhhkyUW0gIxzLY1UxNwQpw
4jFnov9rT6Fl83aIso7uaDsk5muJ2ZDf+IyJPxBByl4wFyhQwQL1Z6J8BZVRZgyqdHHD7a7Flu0r
0NTRiKLSkSgpHohgYTM6Q60oKSnGmk0fYfjIqTDiVCIFFBf3wblzrxH/9tzD1wN47UAm8IAEaeP8
1yunnHHuuPeff/LryMo+R09EBfNfoyoIrF3sfJod1VA7Py2ZhEMRMG7MVK5QpZVGtj6VTOPOGy9A
W1sbvO4A4yNLPl3A7Eryt9ZvWAV/wIujp53MfSNLiitw7mkXMKhHtrLn27mThMiVLn5fAPAFEA+1
2qZGsenC3e3NrEWofj/XyJTQ6X41g+y6/GQcDqJ8JOJZ/AjYvWc7Tp59LhZv/pnNDGX6RzZbn23X
/GX9IjsTYGNYJIzsjzFLQoYKFToFHk431/jl0HNmHVjEsrAjOVpwwWABFry3GFUDx6CjsxWXX3It
JkzpM27Dcq1y2Bilfn/XcUCC9NQLL14zpLZGqa0szSoioqJKWQEw9vPu/Q2R/SMWpF6ETYE7W1lc
ptOntBIFhTLi4QicihfxaAT9qgcgP+BFc8OndvdZgRo2bMHuhm0gqiVdZ3NbE9fAlZb1Q5xoJcef
ie271uGZl5/GzBmz0XfAIIQzcfv7BQuqIUNWspqAIkPLgMPpRWdTI9yeIIJjq2DVJ5hTDofFzmpz
Uzs3Zm9PpbhjkievkB3b7rad8FsGTjziGJRX9cfmzWuweMnLmHXmj3HYvAF4b+MW+Hx+pFKZnt+c
azzRcw8OAEei9s20KCRJh06NOCwdhiJCpY4mcgBOZzHaQyZUdw0Glh2GzpCBXbvXY09jCLV9x3DF
C/VBIFhgylFHYHc7cOV1p+Paq35DXemUS6+afQ2AH+3vOg5IkD5cturUi848+ctKyAENoafcRvwM
7zen2mlSavvVYvKkGXj5pTeQz7Zf44y62w1uf0Pnbdu+DmvWrsTNP3kAJYVViEQj2L1nFyTFiU+X
vwen08kI87QpMxk/ae9oQnV1jc2LNsyeloAmBwBCD2syFGpDwdBD0bBqOXxrKR+h4Pl//gWP/fk3
mD71RLz/7jNIxCxEYCKasihvavPkUkC5W0Tkgk0Y2HcYF0CuX7+a/b2TZp2DRRtuzob4zuzvFQ8I
s/r8sM2gaJct0aOFrAYnHC6BNxf+BV1dJgTJwyyK+uadKMgvRnPLHhA58uw5V7NGf/GVJzHl1Gl4
8r7f4pQTzsNlP5yBvMA/8LuHbzntoAjSm08+OP7sq2/qc+qMo9gam8y7ljjSscfX1UifH9kVmW1E
RDk32Qd854SLWJCohp4sT0FeKZ/m9groDNVh4KBBKCurgCjL0BFHSW0toskYaqoHYfSkIxALhVho
RMlCOp2iXoxobN4Nd8BPkDk0PQ2B83yWTWUVbNOW36cfGtetQllFf0gFQfz6jh/D4Q7g+9+/E+s3
rkBds4FgngDJFUQ0FeIe3+RqUTYtlDLx2N+ew7nfOQHTJs5AfcN2rNmwGMMOO4pgJ24ar6p7sTjx
c6b9wMycyFgc15oQVZh6QskKYvEMukIa8ov6Yf57L6G+oRXh8FNIaBbu/eWDGDr0SF58sUQCVRU1
eHXBW+jYbrFwHXP0XMRDwJxTJ+CyK1eWfzCvbvzkGTX/dv+U/QrSGws/vPzoSeNEt+vLYUYHa9Cq
DSaAsYcdad826ixCbYTTKcTj4CRnRZ9+2L1nG7zufOhpDe3tHWhe/jEOGTKBcSialILCEn4MR0Jc
B0Y1ZAX5JZAo5Cb8xtQ4YcyoOU1OlpnYunsr+gw4lJptY+mid7FuwzKccsolGDpsHKoqavHTK+9i
PGhrWytWbloB1W2jxUsXv4w9mz9BqrkOL7zwOsoKy9jHo6iT/u4kBoBDtSmzvba5+LLD5n1ZPX4a
RWWWLCKdjqOjk/xLL+r2bIfLWchFobvr6zkSjqQSDDlQZEd5vro9D+LpZ36HG358L15962V48idB
jwEzjzlDfPqZhy4H8PUEadXGLdN/cN4c6MiVxth9GEXLtu2WkIPxpb1/t6c8+5ht0ilkG3XmzrJs
jUa5LLsEyIveKUrDSkFABEGPgJbGt6BKLlQVSUh2N3CE3tnRjoUfvY+6xijqXnsR8xe9wiEtmbzq
qgHwevx4cd47aO9oxoJF86FbFuaccga6ujpwxMQZGDxwJNAYQ8mmbSgpLkFV/yGAQ0ciFYYhyZyb
opJxl+EHEjLWrVqGt19+Htd+70bASCO0+T14LAt/euBvGD/6OPTpPxhTBg5DsLgYfr8P5x4zAas+
fRMdTavgFlVs3rgSXdFGZgpMGT4WBXERSUNDFBHkubwY1r8/RIGIbq2cB6SuKQReKkI+R6oW7KZh
hqDZlkFMsG/ndRtoa6+HI0+C5JARM7qR1mWU1IzE5vq1yCsajIxUiaLiQxjOSDsjSDkLEEo1IO12
oosA3HSCdzxwqR4oKQEebu8MyG7gzNMvxZ2//uHR+5OTfytInzz3pyEzLryibMbkifv7nG9s0Eor
KCiF6i3E0cdMxEsvLIbfK7CdnzBuCt574CVMmnAM5s65HPn5xYwk0ygtcUPwAqs+3oLZM5ewWauq
7M8hb16wEI8+8Qs0NtXh1MnHIpHoRnlFNaZMnoHC0jKObOr27ERNxWAEAgXYtnk91m5YhqOmnMCI
ecOezehTVmm//6QLUFLYD11aAtU1tehOhJhTvnX7ehw6YgLm1S/D439+HEMG9MPkSTPx6fptDPqV
lAawq7Gba95I6+aiP9JWhh5DKp0+IB+JUGrSaPT7TFniXZ9SGYMDAer2Vlt9NOrb6+APVLM27IqH
0KesCprYzItPSyQxoHYYjpw4AxeddyGWr9zNWnn1h3Fs3L4We5q3Ys3apWVnnXnRkGee/eMXVuj+
W0F6deGH544dMVT0Uu3ZtyRIBP5plgGnJeO7Z/wA1Mi/tu8kJBMqurq6UNWnGocOH4N+Q8oAF5Bp
BRoam9HaasIb83JJN5Vqn3HeRAzoPxwnHj8XBXkFuO8XTzMouXTxAgwfPRSUBHvp3ddRUlaGvtUD
ccTE6Vj03ntYuPBNhDs7mKqytf59hOc3IBXvwtJl72HokEHwu8sxfMh4xC0D6zcuh8fvR2VlFXOy
l7gUDKqoxvU/eQDt7a1YtXY5KmonIqXmoa6btJEFj6Czn9mvpj8y6TCXS1lpZAscnNirpnv1CbeE
LNOUNl1ywiERc4raQZusu1SD0HOJ2y+7JTfbCtXQUVFRg67wTt4Z6sP330I6Fsf446cy+Y4oyHKJ
vXDfXfQK1m1Zg4svuhGzZh2Od+a/KJSX1pwP4Povmqd/K0gbd+ycccykCQdTLr70IOyDBCkc7sTE
I45HQV4tigqG4PEnH8OqtZ8wX6mkuIzBNK0b6A7HbOHTMpxPGnB4Ba6/9CrcectjrAkeefwu/OHB
17n3EGmm87/7Q6xeuwKLl7+Fa39+B3avqkN1TQ3aWrtw4hlHYdbRM3HTj+7DilWLUbdzM8aMmoCh
A4bhjlt+y9WwHkcxFn+8EI3dbTh83HRMOPwobNy6DAU+B1YtfwfvvvEYh/R9a4ZgzKFTMOKwI7F4
1SpE4jHkB/LQFe6Cz6Ww8NbvWsTmR5HssiPmD+3nhhE+REg2lbzHkhEI1EyM8pQOLyPXu+q2wC97
+dzFn7yDqNmJstIqroAhDU09OAlHok4sBNaS/0i+36jDJmPc5CDC7cCJs+bi/cVvHPuVBWn91u2D
br3i+3aj1l4/SepVDvNNaypSs35/EIl0J1KxMCr79MW27TvZf4gR6zAwCB4qZKWG+Q6gWPLC7aiG
16OC2BrxndS3Oo01axZzAnPIgOEId7Vy84VNW1bD4S7CmCNGI6268OmCbcgrDOKBxx/CqjVL+TOn
HnM2Xl3wKkeRt93+FAprRLz016cAv4R/vvE0UlELmzevxycrVuO0E07GPfffhBOOnoXLzr8ah8y+
Al0TT2GT+94nC/Dz392N7Z33w1dcgIzDhZZYjOpsMHpoDRSfE3oqzvuXeBUn5x+5hY6IbMFA1tfM
4mt2NYkAFT5YoomMFiM7B0Vy884BbsmJ4rxCxMLtXLtnmh0oyXNADIlo2rUWWjwMhwDUVPTDkmXv
Y8wIKmMH35Npk2fjxBMn9XT+nTVjDn770C3/lgr7haHCy7+///BQd8Q9dEC/b0A8DnxQ1UjOdyDE
ldDbTz5diPLSKvh8Ac5r8XJI29gNRXScZ9KAeNRkvOS6q37FrxFKfumFN2LHrk244trT8Ogff45k
Ukc0BowcPpQ3y3niqXu4XwARzTIZYNzoyezEf/fMH3K+74YfX8HXMe7I6SzId93yB34e9Iq44Zp7
8eiDL7J/QmZu1dolvNrnzX+BfbrHH3oNFWUBRpNHj5mK8pqBzP6cMf07MKPd2T4IRg8Xifs+7Wdo
2TZwOT+JEHzSximGOFyc4zvrpLnc/+n4Y+fggXv+xlHc+4vfxPlzr0ZTyx6+Nu4Ol7DzlCMPGY+O
TmDLGmDbji74AyL9DveTj71x+BddzRcyp6oryn8oicIRc086npFsCBJyxTRcWZXt02PtF33N9Q7e
t+4Sc3/+3KVYgh3OKrw3hwiZm0oUwOMrwcL33sH0KWdwRDZkQC0cLgVa0hYiglGcqswRhyoSautE
XrkXY8aNx+jDxiGY70dJXgWOnnYizjjjXDgdIqIRID8PePrZJ3Dx+deib3UfjBg8Hlq6G4P6DefO
ICWFJUgmu/DKm3/E7j3rMfuYk5BMRZgQtnPHKqiihh997zr89Y+346TJJ8JjaKgtq4GezqAovwof
LVuM2iET0BwJY0PdZuzctQnHzJyDUncKV55/MeKRBihCCpKRhGyZ2cSxxXuh0D1mfcTYWq7RFri/
pWg6ssxMg7UHFUXEYt1wyE4Yehrr1n+EdDqMMaMORVGxByvXzIMgRHHUVOJ4paFZEgb1H4e333kZ
j/z+Ibz0z79h2pSToTrzEMiT0NbRiVBXN5Z8uhANDbs6tm3fuM/+Sl8oSH1Ki28dPXxI1ZFjR/EP
2SswtiCJPRW036wgEcAYjYcZZpBED9pb2/HCP/6G6VPmcJeRosIACgIlLEDZrWsRj6WgiPYeJKpL
RrQzCVVQkEmYiIfj8Pk8cOcT4QyIxIGSAUD9ziTeWfgizpt7JjZs2oGKslLsqd+NDRtXoyvUztl+
MpHHTD8BZSWl+O0jN2DsYZNRXFjF6ZRrf3gX1qz+BN0dLUjFoigvKkdD407u3F9VNRAbd2zEyNFT
sb2xDkV9+qEr2w983OABmHP6Bdiw7gMUBv0QrARMLcGb3NjUY4V/u9ULTuGCSaoQtmixeLMN5tNc
KiWrCqIJ6otQBFXxYfiQI3D8jHNQXl6Liop+mDljDoLBPEC0vz9liNi+YxtaW1sgydRXyuLU0ur1
n2Ll2lWIJbrR1tHI/aY6O9uE3Xt27DPh+oU+0p7G5v7nnHh8FsGmH5KlyLJM7G1iIIi92I6W9S//
P6AE9r8ZdDNJfQdcHqSStnC99MorePR+LxP8KXSWZSAR05g4X1RYCK/XCeQB6RY7Eez1urLsEJMp
r9QMjkxhMplGYZEDiAH33nMprjrvGnQ2tCIoalDSSQwpKcfzH76JgoISjDvjAsST3Ygm2nHkmDGY
NmkUtu1Yj0MGjcf4oUOxdtkirF/yTyAeRp/Cw+ATIlDdMtKWgV0713FAEI+E4JAMzJw8A39/8QkM
KC/ET390NRq3LWLnPBPrglNyQBecnGaRRLnHB2X2o7V3ukTTxuHSiGZLBQ1mllKbnoDbiVSymXcT
8PkDiCRWcbc4w5JQ37gVuhbH5k2LMGToYSgsqMKCRYswbfKJOHH2HCx8bwX6VAzEISN9QDDblikB
DB8yCjffflntF83UF6qT3Y0tBcMH9v96UnAQBkUxxIq067wcXI0h8kbHQEV5DTZuXgWUgrcHLRlR
iEzGQH1DAwsHCRaNSCSGeDwJl1uG4gHMDJBKGpzHM4g7poOhgGFDRnIkZu80IDKHiZiLxAn3BgvZ
3yF/gqLB7nAIA2qHY9uODdx5jugqZ552KY6dfipzx3mb0WxFLgUI5KvYhH7a+zaJvHwXxo+ZSm35
mE+9l/RnO9U5XtHXHT0lXL0oKjn+Evme1KuB8pW1fYdALYLdLc7jAwiOS9kGhXquHnboANTt3lbw
pQTphQfvHZlIJZXq8opsxCZmTxV7ul7katK/eUHSmQZBDiQ53DSBxIknf6hf3yFobGlAZHsG5YeU
on5lK5uByuoKEPkxPz8PapGAQKUXvlIX/4RYNzWoiEOgcuygAKkUuP2Gi3DRGd8D0hGYsQ4UuRSI
ZgrRlp2oLSxB67bt2LnqfZS6COUOo7qgBDoR7eJRuAQTmUgIQroT1SUFGNm/H8pK/HC6TLhcIhxe
JySHA2ktgdbORgzuPxhWsh3jB/bH3JmzEI9shJ5qg2CFIVka9V3nKmPan4Q449xRmypruduvmSv4
5n6WdOiU9Zd0e0Md3t7LbmdDOzeJiMEwOmEZbbBMKlsPwRLCMKwo96oUNJvBsLt+BwObZJ+Ilsvt
nCiczBW5CABRsFKphPLqiytH7mue9ilIqzZuOnJI7bcbre1r0MonOqqY7UJcVlqCefNfQpz6HHXa
eTlXse351a9rhegG9mxsQaLNQjIEtDSH+DPy+3jgKLZXXOuKBu6YdvRZZ6G+fjtHPqQN0tFuTrNQ
yiWYZ7Mh86sHsJYhJ7+6spbzdlQ+RMJO2irc1d5zjYTTEEZDfKY99TtwyLCxWLH6I4w5bDJrSsrz
UY6LWiKTNiL+kNirX8KBkdr2P3KaKDd6E+bodVqMRCEhTI1GZ2cLPlqyFC3UNSma9WU0INoBDOg/
DCtWLJ6yry/dpyB1R6PDayrK7T5GPfuXSdn+O2J2ZfxnBv1omhy6yWQSKJUgyTbRzeUELr/0Dnzn
nMPRFkrA7c3jBUt17kXFJVi3ehuqBpZCIo6RBJRW5yO/zEOKB1oIgBf4zQPX4Y6fPYTkrhZI1Kfa
4US4sw3J7jBGDxuPLRvXYcbkU/H2vFeAQgdam9o5QoyEotzki3YlEBU38oJlvP9twkhyLwPdISHh
lKH787CmeTtqRkxCXfseFBaWIhWPIRZqhRZqoQ6TUKQ498YmXIfre2l3JeKj9Ir+LdY46Wzu0uSK
YDp0wT5MwW13fMkd2do6m/RmcA9uWRShWNRe0QMZPojIR2trE1eSEMWGPppM9crVH2HLtnp0hmyz
D9jtpKuratHV3TnsSwhSrLaqvPSgVDF83ZHrNpKrPKWurVQ7H0/orJko//XTa+/H6edMwMuv/hl/
+sMT+HjJUm5IWl3ZH9RHy1EBOD3A1o170NpoO+fPvvgXlJfL3Cr56O98l9kDuQoR8hMo36ZnfYuB
Aw7Buwtfxpp/vInq6oGoGDaafxVpwFwnWwJI49nKD0e2Gpjq2Cj9kMN16LvodzCXOrtzE1eoZLVR
z6SIezv6ft3Ru94OvXhPdq8piX1P8t2Yvy6CMbRLLrwGU2ZVoqAaMJK2iQsGgAEDhqM7Etqnqdpn
1NbVHS6fOGqEXeVBleHEjcntBWvtjd7+EyNXdUq9JQO+cqRTYJNDvlJxEVVDuHHCWbNw9PRZaGhs
YRLb2wv+gb88+zCT2ulGEuxPDiSlBoguSwAiMQR+/+BrmDZhIuKNHaisGITO9npIPg8Ki4Mw0ybv
6X/oyMkIhWKYOO4E3P+7u/CHP7yMdEMrCopqEQqvRzCvhD+TnGbRsOBzepiaIshUCZNBUnEgv2oQ
1u3ehuGjpsEUHVi7aSXGjhgHn8MFUbB3oiTVz30qLSfvIkCbyWf2I0fci5MsBPdFgr3RBe06kN0k
iPtIShbvv2tZdpUMReGC6YRsFEFBHmQpg2Q6xua6OEJpkxLkV9ufn2gDXN7sl6lA/75DsHrN0vID
FqRYIpFXUvi12uUctMHOtsuPUCQGt8ePSLiTVzNFV5JUjM6QBrGbtIiE/v1KMWDgmYDzTLbrlMSN
NQHRaIKdSSrxKSiRwIyMOEBBnWymkUrEEczLg5HJh8frh5XW0Na5B+UTxmDXvVtQUlTDeSnSLKMm
VOHmm34GX1DFxAnHcON18i/8hdR+Jg093op4IsrQRKC4GE2xDGqqB2LDord4tVPA8P77n+LU489g
LWZXj9haVzBtbpGY3Rn8YOaf7AarttNu5ZQBdX3Jal+KRjlA0bPmTAXcxXvfT5qJqoDjsWjevj5/
n4IUTSQ9BXklsNjuWpD5B+3dmJCepqXsrzR6NWTopaes7OpAb8Cxp/TG+syZgL0frGRlPbveF6ZL
UFNOFMolCDc0oLR2GE44eiYWf/QExh/1K7jCCd5x0UFOUNK+Htqii4m7EuAVaINhN+B3M1ppdsdh
hgwYlsZ7gqTaOhCs6Ifuhp1sNglfEgwF5X1HUaEKKlQPJg8fi7cXvoggdFx10RWYPvlU/GP+s7jt
gTvRQpGbywO/x8GMrUH9BqCmtAK722tS6AAAIABJREFUdtEeuzt4T96B/Yfh/OPOhNNsRNuuJlAt
zKTx49ARa4cz4eSKZSpVJ+USs+wmpcSWpKpYepH3MUGvVsmiCV1MZu+TGyZ0thrcSzN7P8Ws9dAp
s081cukMMskMPIUedMc6IfgkxCQNHd1pJDMKnN4gO9frtySQ1FLoPyCf/aJICvb2pzJ16o1Syslz
wIIUicachfn5/xU+ksKFmGm7jxKhvF1hjqTWbVrFuaFcdWpSt4sJaVVzFxCinZLql3LRgsk1bLTn
LJf+cBWHhWBZNSJNuxEsKkcq2g2n6oEejyO6Zw/yjhgJj8fP+b4jJ85EXeMOhJFh5//Sn9zOq5bv
IEV/za349JN30N66i3EmwpJGDh2FflX9mbmQ1NL8OZu3r8XgIXZFB/kooa6vd3/sKG/fcCC7JqLY
w57kwCXbLociR9KwlLOk66K9XoIl+Xhj3nNo7WzGqFGTMLD/cKTMBG+l6nSR5nJTwLPPpk37FqR4
XCrMz/uXtjDfyOhRs2qPNuo9aOO9eJp6TgcgCRaisSaMHTMGazZ+yNsteNwemNSzMruFhCRmt1Mn
51XI7qpNg3Ym5pVucINRkUI700Ay3IJPlryLIybN4NMytI+H24U8yvG1prF1xyocf9ypSGXSqOzb
F79/9reoLK+E1R6FrghoCbUhP68QJUUlmDpuKjrba2Eko5AEEzV9B2Dpx2/xQqCGqiMPmYBFdZtw
5uxzkEmGWcD215J9f61tBO5qK3BvTtuntQsYGEeyCFZQYGqaXV4lK1w4QQ1SqQMJUW131m3hxHd1
VT6bfAJhrzn7p6gYAkSbAV9ZAai1Ackq7bWTTCb2KTP7FOVMJiNSH6IDyT5/0yOXDc8hsuRjEAWE
UG1iO0JVICoqv86dPghnIh425QvEvdte7Z0Yq6eMHBxYdLAAUnWHJ1DACDncXiCvAM899DNmAdCg
qG7RB69z5w6qcyPBpQoTKoUi/4Y2MCYTR5qIggFy9Nua9zBinosEqaPcth0bORNPzvnBiMrQq0oX
WSHqPUhjU1SZ871yfyc0PVeBTNcf6jKBbltrUYtwGr5Sm1HBQyLUm7G8fWqWfUqXaZoCdUvb25r3
mx1SbtdrYW/b5Bw1kHYbog74qQxtdxVBfn45YtFm1A4oQUPzOpTll9tKh/Y4E7IfQKqciPy0iZ6S
+4kGf4lEWsvKRTIWyksrEPQH7C1EHURzTXGV78ev/xWvz/srfnju9diyfTk+Xf0++tYMxsChQ4lu
CKQTyAUkoY5WxMImXKrMyLDT74cRdcErSlBMHV5FgSZZiIYaYKS6UVtewt34nYoMTc/u89azpoXs
Xmw232h/7gU5+DyRpt1hRcq1n7a0vQU5tKsBmzkHVyO3hbp49ylBdHDZltPpQEmxTXwqLankHc09
3YDsAYSsIaMAMJHmlNWBCxKVqLjdbiTiB3Xfk680uA+S6kUskURKs81UqKsNfcqq0dTYyj26RSif
zU0Rmmva+SQx9xM/p5mQW8nUib+wlIVP77Z3coTLjbfffR4zjz2dfaSu7nbORc0+8QKs3LSEEnWM
IXV2tqKktJp9DpeqQqVyactknhJpokSsixFxGk63CytWL2ZMipzfcDyMWDwEt/I1b1Cv30Ko6+cF
z2LzJnEPcNKAVGXb2raeuUqMywUKWJOHQsCuPU345NMFCMe7EUvG+J62h5u4ezBtnkioPvGV9jW+
mCH5TftG2SFZe+kRdmQH7oFoZtFzzUzBtJwwxST3SEqlWiFJCeT5JXR1JACTigxdEKiUmmNBgzEZ
gZFc3mUmGxhmVygtLd3gTYgFnvQopGQUqsPJeJCT4PJ4F/Lygph93OnQYhFIioEjJx+NSMceFPjd
aNj4CSqmHI1AaxOsVAfcehKK5AKSdpN06qTbp7AURUWViHd1cMRrQMd7C57DqDGT0N2xE4qVhGLF
93t/9quRTNuvtLiz7V4mK/02Ibt2yKxm0jrvxfv/2vsO8DjKa+13Zna272pVVr25yE2uGGxM7z10
CIQSCJCQRkJJLpcbkkty8+cPqXAJuWmEXAIxLZAQHBvjggvuvcqyJFu9rLS9zs7s/5wzM9JakY0B
h+Ten+959pG02p2dne/Mqe95j9fqRnd3F2SrCxlF45nAm7euxuK3X0NJST03NMyafRrGlVZi5vQZ
oIaS4iJdQVIN7mtfu3PM8xhTkFxOJ5KJE8Px/GGXzkCSYW1DzZFUJqGIJ6OmGZPMfWiCZhBQ6GMh
aa4aO9s0ZJjIPs25ozy523hNTq9BecprkBjoYYeYcj99Ax1IHG7BtClzGT04oXIc18wSsQgnNeO5
FELREFrXL8P4GfOgDkT1uf0OgrgSQ0UGqhphlIKWzrAfJ8sSSvyl6O3rwpRJMxlpabXbTnhUzMcb
pQBMvzKXUjh6I+0ZGOyBq0gfuth2uIl9tk/dfg0XaleunoTb7jpHlwzFQKyJuqdBIEriUiKNO3qN
6WxLopiLxqLH1bQnjCLKOpIvSfib55BXOOQH3znmhGqd3TbLhAp6JzXx9pCzSBGIVQZsFspBJUDd
ewVuCd09ByFKKvsEGiHVbCIyhA0hVjI1gSz5EDQCXpb5aiQiEeQyGe7jEqlxPpqA0+GDklaQSqS4
tbq+fhIuvvIWpDNxyDYLMskInAUu5NQ4rKKKIpqLEuzGYPM2IB2GkEshN9jByAAyqwoBy6xOJqnw
OL1cYafxokO9GqpKy2C3qAgGDsNly7JPRxOZiJ+cHhqNhieApKpBzepMtMd6gMBoORGJTAZpahyw
2uHgcofM7gCxwvX39cEmu9kFSKdolksBKvy1PFvYpLchbaYMgsk4SHi0iA6MzSaNFKJoyJQojin9
Y0qK1WrVKDT8Z1q6UGp/I6hU7hBcbrbdFK2lYhHYvYWs0yWbY7hEAmISKSqBs7yaw2DSSoLbC03J
sH9k1p5gsL4R4IlzSOFBFuT+zhb+6SsoYQ1FdMakKUnjxIID+jjTRJRHhtGdz7UyVWGzQj4RYZrm
nTqZ63Gk/aj4zJos7ybEcZiy0YtvMlHkz6AHdSBTPxv5cCwgRr3NXHQNzbwSOeCU0WY/TgBkOzjy
5Pd49QCIHG6aAUzBbDjG0zDHPMExTZvX7VKDkYhU5Dv2GMwTsYTh1PdIhKgP3jNsf07n/zHHzkjG
RZd50pIIJZNANh6CjXwbnkJpjJeS9PhHKilDgbcEwbb92LD4FUSH+jFzylzunmAYSEEVJJqAZLFD
lp2Mc45FY7ALImRZ5lBeKnVw5puEM5UMIpyMoKCsDNHYEBwWms6U5XNWFQEZav0mtjTJCiWbY9xU
IpnAwUN7cc9nHkROVJFW4yCeqb7+XtjsnuGbIpcb+Tmy8ce+yNGMAovVhVQ0gXSKGO6cKC6fCEnN
YDA4BBfxHVjsxrEtOrd3WmHME6n8w90tnAKgchIpeoIH799Cw6A1NDZaEKa2+MMRtB7ei0Cgn3zJ
MTXMmBrJ43KnguGxvfOPeuVGMappeRxCksGLRP341pIyzodQVJIiTiVR5FxJx55tzGlUOKmRO0or
K+q4NkYTJRctWYjNW1fhYOs+zvjC7YW9uGzYnJo/IVvhK6uB3anjo6mb12JgeOgOpkZGinzo3MzZ
KjwvJRnj/xM6klqqqMmSc07MtZ0c5sHEGK7BsZ7Pf9DxyWckfJPH4BanHJVex9MjV8IbmXkz+nwa
umzyBdB7SWOleoDoINDSth82qwinw8KmzeWkhlQvFsw7FfW1DaTBxhxEPLaz7XDEA8Gg96ORGQPI
ZSSQTI4AE+xOI6lIH4k8/01/Pf0UNZ13sthfii0r/oI5s0+H5PEiGgnAanUhoaShCQJqGmYgFwpx
dre6cjysksz+EDUM3HztF9A/EGUms+27XkLrof3oC7RDURMoJl+pogbRoQD6Og5ws0NpWTnOPe8y
zDztAsQjAxjo70JZhQ9aLoOcKiGdyXIRl+aHqJJOvi5Y7WjtaMOFF16OrkAXVC3FU4qSSgwenweq
cvQSx/GsjORGT28/1Bw4lKfplCRIgqLCRcjSjKJDiimSpRQAQV7iMc7uZzMZFkQSLnsFgF4wUVhN
NWDxgptOqbfS4wJoctr2rVnKgo8Zah4lanME+wKDFSdASk740u9G/ag8wYhgWk4P1m14GwsuvxXR
7hZU1lYj2NcNt6uQ/R/icLRbrPAVV4KowrpaDnDkVFleg5oqP2rqGzD/zIu5wEnjOwnkH+hph8/h
QDaZxOHm7cgqaQwMdvL7wn2dyIoaxk9oRCR62ChC62wtpIko+qMBhP0DXdjbtJW1JEVGgWA7CnxO
WKwq0ooR7UEaVQYZ4QQfHaSMtUi7UTadGFV4VksiyhqSkJ40xitnEJ6mKQeX0/FHNBWT574gg/6w
zrR7YOMAXnrteTROnQtLoR6xSaZnowKxKNDafgAOu2vM6uCYt0Kh19vd0dPz0QgG8+hrMBh+jCyv
GXOKTC7Jw+wYTyMyKz89JGNOSDKVwkknnYW1m5Yj1d8ND82cTWcgWCRd10kCSitq4CupoIEm7LOU
l9fB4y1GV28XwpEQUrE4kMkC2RwsDg8KPMV84UPhEMomNrLA7ty5HuHgICrLalFQVgufpwg9Ha3Q
ua1UCBaBh+uJFhrPZUMsncSh7kPYuH0tTjvjUsikHXIaQrEQUmqGEZuReHAMU2Z21JrPj2YHPvLh
LCyDt7AS3qJqONwlSGUFDITCiGeIJJ5Gn1K9VOJJCfTdefRYKoGcoptYcshpHNjzL/0cr73xO252
oKXk6x1CUfiAgd5uolPsHmsfx3a2Pe6Wts7O96Qy+UcvumvJz6ibcxa6f/YIM4DMPP1i9DYfQGFx
KVLJpAGngN4tkFVgI2RigR/2pD5xiVQ7ozCJKyAWRiG1Mrm9HAHZBWCgdT8ap56E2opa+MsrQHjY
oc4WuAsLOaciCIlh1KGay/H5UGRGWrCpeSfzEFxywQ1obtvCuaWBwVaUV/oxvr6OiSKOuKmMIvkI
bvu9TR6hIx7+5mewd28/PnPnzcycS/jxno79SEmW4Xop+W9knpmCmlrBOcWiMisdaayHH/gmHrzv
m7jj3tuxccU1PAKf64Q2AV6vFxZZwup1b9HkzdaxzmPMMy3zl+xubWuFnXmQjFCRccEys4LpY0Uz
/KBUTE6QIcgCM3ooQgRZMQrJpsLqptyFFXbfeGRTNtjEEigxEaJqg5rJwG51IJspQzxaANk3E9EQ
DQv2w5qTkBzqh8tOs0FiELQwVISgiGEkLQnErAmErCkMSnFUF6cQa3oNX7zzNuza9ScooVaUlxVC
SyVhzVkgxgApbQUUWZ9mSWUUyjPZs/BPqMaBSDtWNq0GXFYUVlZzVy87atEYcokEj1/XRAHF1TV6
vSwdh+hyI6XRBGsbckIJUhknbHIRJ0sz2SRclQV4/c2fYMu2JbjvC/ehu3cnICaRTESZz9tmKUUm
44WAUsQyDmTFYiiSB0OpDOIWDSEhgVyhhCEhiIicRNIqIWPzIJh2IYM6ZLJTEY5MxIRZD+DHP/41
Xv1rN7qitVizvRDBXBn6o0OoshXBk4igHGnkAm2Q3XHEXAHknBMRSkkQXUOIxbahJxqA21cNRwng
rQV+/MP/xsYd29AXjKGguB4VldNgsRWi0E88nElMn3H6nrFkZkyNNHfq1NVPPfvccesblnrKywi6
j8DczTTlJ5uATGM+DSyzYHfAIxTxBOlILM7vc0q1sPkrEGlvYV8iGRqEo7QAllgfhvq7YLVbRkBy
I8SAxnMa17so30NV+lmaiKXLX8NlF9zOd7adophIegQFYJCMDtfdBIFV+4HmncwFMHPibMRjgziw
ayNu+MRtmDd7AVKqnhGm3A8Byhi9KImcGafnqOEgJcYRiQxxlOebfyaevP8GdHS24dR5p/F3IoRB
Uokz7fCsyvmcoFyx6k2cd86ViKdifMzegV7MnDEHA+EO1JdPQHd/G2eeJUmD013EScWa8umIhTNw
2R2YOu9SPHDvZXjxrVXw+0VYHV72ucgMk6ZVVRERoj/2EYOcBUFKSzs8nGei15H2pc/t7j3M0R6M
Tqf6qcCXpuvGKNgHFHIqSsfbHjiwE/fe+9g7xy1I137xvh0V/mKlva9XrqyoOqYQWagblEBi2Syz
zlP2hqKicCSKeExBLJJEJrmH/Q2KHvr6O9DedQA9/QfZSdSyfj5OOh1FKhHA3Xd8Fd7wAGrHT0Ko
9xAkahFlf0j3Caym/2AoU2dFLbppQLFoh8tRgI629czGYXfbEO7pRYGjSBckukqqcb2IkMyiz4Qt
r/Lhqqtvxiknz0c2Fkegvwvnnn4eZk09iSdhikEBkiXHY8+5X0zWE5dpleb2KrAngVAghtL6yYyz
WPXk4+jY3wItLuK6yz+Prv5O+IprUOLyYPPOd9E+eBDjGhrRHRWw6WA7pkw/FXE1i8LaYsQUN77y
4CP40p1fwOypc4GcF4JmgVPx8XVIpi3IWERMn3cmHnnsbixctQrnXjgDt918H158cxvG19ejoMDL
ky2J51L0FBvnbUE8lYDF7oCiShAsbgSjKZ1UPtqHcCCCHev3oLZqGgLBMFNQ19RJoPo1QZLpUvf1
M/GrcuedZ+w4bkGiVVdZNbirqbm8oryC737tSF0wDJGVDE5HHj/FXRfKMP6F+8MyKTjshah0FvDf
06edhIqKSkTi/fx3Z0eCXx8K9SKTDuKPf/4tHv7qd6hTj7tAi3z63ZAPadEFSf98uvuoQ6OyqgKR
+ACsciGWLX4F5599HXMl5rI5hgvnA6DNbhFaFMXQMWqmzAaicVSVVcNKvhdhwtUcR2CkiYh/SFH1
RJ1mEMuT9o1FQigvrwXsDuzbuBy/fe4JnHPWpexUk580Z9bpONh+ABbJhfq6+TjQ1gqfeyquvvwB
+CsKMBDuh81qgdvhwB/+8ATaDqhMekWV9hBpskQcXo+fc1ak2WbNOQf3f+0GLHp7KU4/YwYefvDH
mDH3LPx1VRv7deSjERYqmFTg5e+od9RSFKcYrC4wmN7o98qKWjQ3r8Dit1/Bpeffilgyg66uTXh9
UTdr+SkzZvDr12xYjsrK6sHunvaxFcrRBKm2svzg5j17yy8650wDy2O4U+QfEUhqpCmdoyqR2VUt
vMlW2Y3CAi+KvA5MbTgTmRRg9RYjQ+UBNcXzaQkxSM15yfYmTJ9xGtoP70VH+x6kVRHW8nFo3bIc
4yfPRLy/2+CrlPkzh8sjmp7vThBDmVCO8IAAKV2NxqrLsL9pFULju+Hzj9fz+2KWi7bUsUqoRsFG
c2v1hJzNQqTsbiT622AVLFBzcaSyGuz+QiQHOvUYUsxxzS6VTSCT0zt+ySeUrICL6wqFCO3aimef
+h6+eOMDaGlvwYKpZ+P13z+H5YuX4nD/ICR7HSTXBBxs68fLr3SgoDSOTTv2Ysb8Utz6qc+goboU
L7/+Fh66/19wxtx7sW3DMlSWn4KElEBvxxCi0HDWBTfg//zXv+CXf1iM+jkWfOuJX8HaHUBf2xak
UkOw2wSk0iEWfpUaHrQsLJIVyUwK9mI/kgoh2R3cA6cJXiRpAGEqgEkVPrjFCDLhFpQVVGHOmQsQ
SUbYLP/0V4/qM0qaBlFSWthyNHk5qiDVV1asXb991xnm3Z/Lo57LzzYP50AEPcqwSDLfqUTmKYge
TscPDgUx0LIPm7a8gzlzFuCksy+kmQwIDfYy4nDe2UW4+bq78Lk7vorlK1/G0OFmjKufjI6WvSj2
+rjU8bf5FMLYEDLSC9nmwurVcWiZIkAgex/GoY5OzHKWQaCqvEkTw+AuQk4KUNSUHgaTnUtn4C72
I9HfizT35ZchHuhFPBqCk1j8SWQFowcN+vRtyQDMCS4PQvu24bd/+AkuPO9qhmHMnXMGNmxbxV0X
NBDn5LqzkNTGoS/oRl1DBvH0AMbXzMcFl5Xiv1/4Gvr7o/DIvejtVpgPM5nQu29JYFORBLO5eav8
ePQ7n8Vzr/8J8xaU4fEnFjJjr6V7gG8IchPIdaCMOUFnfaIdalSvE1J/Hmkkm2hBX28P55lojzJK
AgUuN9fbKOJd+vYitLa28fdMawoTbkyYPI0nJQyllsDrcq3p6h96f4I0b+b0P/3q5df+JUtIO7az
xtQjA73Hs0OoqCdIRihJTmiOoyK6CNR5oGbSKKiehgfuugzrNu7B6afPxwUXfxLpoTAOdx/gksHQ
YA86upJ46Y2f41+/+QPUjatHUbkf4UA7SipKkEpHDe1n5Fc0kVk1NNUGJVeAQJMNLa3F2LWrELKF
+BKjQNwOYagFs2tmAQ5Zb72lUJvdIhEiHSOlIRmNwGNxYPu2tUwu5ZBkZnjtad6F3r42zDnlfCQH
O7nzlcybXbRzYlNvLEyzeUj2d+OlV3+KU2bMoekfcLns6Du4HZNKqmCVC9DaEcWi17fBWT4eCdQA
Ugmzqmw4dBDbd/wZEzxXot4+BVtXvIWcKqO7I8BMtlNPuYIJMsprpmFAjeNHT/wLRI8NslPAJedf
gCJrFoFIJ7QMtT7VwiJlEYn0QMmWoj/YA4dm5yy2haywxYZ4JgtXUQ32rzkAj7cUGveyEENcBMnE
AGTJi2kTJ+C8My5mLHcwMqCnCoQsZEsKXT29OPniC/60be/+MeXlqHQXLy1e2llV5v/6WfNPkktL
SvJwLkarDxE+8cwxD/tGhKDjYqmgzwMLDA6gr68PPZ2HMXnCbFx15ac4kpPtNoyrnwgXmZNEDKX+
GlRWFuDaK29FRVEJ3E4nrIRv41FUaT6mxOpOFyJFJQCaC4kktRuXYONaF9ZvDKKovB4FpXbYXA6G
XxxsWosCdw7VjY0GBimr0+jJes4nnowhHB3E4jeew6zp85BMxWGTbSzYA/2dmDl9HjpadsPlchk+
mU6RI1p07RiJh5hqedHLv8HJs06HohAywA+3q4A3wu32YSgUA+QG7Doswld1BTK5MsTjVhRX+FBT
W4/BrnoEIxlMnDQNe/Y0oal1B2oqqtAf6OUWpngiwhv6x7/8FrNmnYzte9dh48Z2PPe759Hcugv9
gR4eU0+cj2+v3sqohLPPmY+DB7fAo4mwUpBKCATZhrCahr+yAX9ZtJobAmQbkUykkEmFjFpdFSLh
EIPdgsEB1htk2tLZFALhOPa3tie27t73+aPJyzF5U844afb1WU2rWHDyTIZxwgi5wV0YRht1Vod3
ipIGiyQynyGMFhmL5EBpaTUap56Cx594GHv3b8EnLvskKiuqkc7G2Z4jE4dNzKCv7wCmT54CizUF
iXrchSTNiOZqeSqb1qe1qlZEUk4k0mXYv8+HJW8q6Ov1we4qha9Ego1G02YlxAfSqPa60du+GmKs
HxV14wGvi5Nv/V2H4CmrQX9LE5wZCQo5sBPnwFtWA3VwCIH+TjTUTOMEpUO0ITgUgNfpg0yaN61A
LiyHpFmwff07WL9mGbwlQCDcAZvbilQyhJyShAsiIn29qPZNRiRSgb5ILawlDUhrTviKHXC5RQT6
shCJB0kh7kgLLEk/EmELLjh7JgaDUSxc/DRUN3AwsA9Wnx27D6xBgUtGLtGOs+fMQaXVgnB7M5x2
G4rL6rDi3S18/cc1lCIW64GH7p10Eg6bPlbLXuJH52AffvPM8ygqLMa82ZSxTyOWCvFoe8qB2alL
mKaIW6injioNWb7xtu5rhtXm2jMwGPzF0WTlmKnTqRPGvbV0zXpdDxl+0eghx/kPczq03sFp56iJ
7C/VwYhqmPqnmOhKFIfnuZpVaMplkMYysTxErkV5mmAozMNZlKwP8YQfgf5arFjixLJFAiLhYpRU
eTBljgyXlycncHAWjeRgtXngdIuMctzwzhvgme8eB8prJmL/plV8bMoAUxs3yio5600dJJMmzmSM
EaEIiTW3qmqcPvma/Izqcdi7YRme+dV/cPaa2r7J1zj3rE9gwfwLGO9NUY3DUQC7swyBhBN96QIU
1k2Gs7CAu3N9Rfp5plM87gml1RVIak5IvhpUVl2EodCpEMRpKCmZgYFAGIFAFN09HTwf5IEv/x98
97GfYOXqN9F8cPcwgwhNVaLoM3/6prlH1PVLPhPhk7zeIn6ecm0///V32aeieXJ6J0yW/SvaE8p0
w+A2IB+Lmigbxk9461iyckxW26suOvd3/7Xw1a/Fk3HRbncbZk0zMESqIUy6cOkVMwWaqhON2202
WMhRzcYwd9Zc/OcPn+DKcsP8uRhq24tIvI+TgYQnsslkJpPIpodgE1S23jRZUlVt8BZPRaA7jnCk
DHv3ebB5YxR9gxEUFkzCpEYrCAxI4MehAeqoBQiTRo68nE0gK0Rxxaf+BedfV4dPJ3pw0fnX8oiu
QlsByvw1SFv7sWHLW5jS0ctnX1Y/E90Hd0BRRdQ1nIycZkdGEZBIZZFUwmjasIqRjuX+Cdi5axvn
Ya647nz4iiqQDEe4jy0RDHF+qb83BbhKEFKKkHNUMG8T+f3UvRoc1FiQ6ifaQdiz7nYJgSEiFq3C
u+vb0ThlAqLtXdjZtwRT51px6kmzUWpzYt+Gt9FQXYNYQTkmF9aho6sNgsvOIX8yHkWWevuyKvut
qkojMTKgySzhyABCyMBjtyI00I7SQiccYgprV72KG2+6Fx6XB+VlSaSTWSTjMabakSzEkufgDtzD
Xb25Mj+e/cCCdPqNd+w7dc7M3iUr11ZedcnFR/xveOSoNjKH1mSUZZywpDOzklotLqrnSIYih1Rv
t963b7Fw1dlqsaG4qBzbdq3BgrlnIBkPIUIckBYP0ooD/U059AfGY/XyNFo798OC2Zh9sgdlVTro
kT4zEgIIBOktIGhoBrLQA5sYQZRYRid68MTjL+Haey7l3Mzsaaegpm460t2dDLcgLUnc1MlwgAmz
CJdNLCJdrftQM34q4kM9qKyox6KlL3DtaSjQg9ZDB3DdVXfgvGvvRja3E9GOQ4zCrCoej9qaadi5
uQPtoWKIUhVSrhoo8HCbHWFu9X32AAAgAElEQVTv+rspgZmG12cFlf34BvACtlIZhSXViASLsXn3
fpQWnYpTF0zC+Ekipk724kDzCoQDnagqKuH6WsTgb0qJOhsKfQ/KWut8SypnxQVmvM2yVXC6HTgY
6EUkSZYlDiErorV1CNt3fQ++IgGVFR6eKuW0OdiaeIu8rGG3HeiAmk73rFx36Kis/+8pSLRmN05+
+9XFy2+/8pILTMJnXW0a0bjZwKgP7tM7WXlGK/E+U08XXT0hBrdNQzI1hFQ2i2KPBIfbxl88lbWh
oKQUrYdaYHeUIRMREA+qiKqV6O2yY+cOAXuaQpBsNVhwei33x9NdTdeIInmyWPSgu91uA89wtVkG
AGsEqsuCZEcfpl9zAdbOG8B1t5yCWy69E28tfhVfvOarCMR7Me+My7Fm62pMbpgBzerk2WceqwuD
wT4sfXcpwpFBnoBdVVGN7lgCkt2Lrz/6DPwl5Qj29UHNhuGw+FFTWY14/yAUpQjBpIaMaw6iWiUs
9iJo6RFAfiSkQFE0VBTpiUG7AygoBHo7dTpnC9UflRIMDCjIxsshRVSgK4zS4gbYMhoO7zqEfc0H
MPGy6zEQHoCNr30OyUSag9N0KqsD7CgRrBI7XTdsFiCsaCjyOHiMFt/s2l4G+QVTKShpffSqJSdy
SoRM/sBgBzpbDuGddW2YP6fh7VVbDhxTTt5TkC49d8HTt9//rVsTyZTodIy0fQ+D/k2ccd6AZArV
mdNITfHMV59XgbegBHaayhPqZgoVIZThqEAltlqLA9msFcmkjGiqEgcPZrF7nx29XTJ8FYWYd34F
82ankvosNBKc/h7dpIlGQy3RbVNqJxlJwicnEYm0w1fig4M0TNsgMsjiL6/sxl9feRYPfeubOLl8
Gt/Jta4pjEvas28r57TIL6isHo+f/vzfUFfTwBn1g617sHrtm7jztgdwKZlHJcMcSIQXt1OzJFXZ
cyKiySwyljqEhXJkXI3ICCXIpPUhhEpGP//gYJQhr+QnUdsgzSyMx/Sbo7RS5J9zF9RgsI8Suxq6
QiF0B9LwuWxonDoFz//u97jzjrNgtRfBlkwgngkP1wJ5AoCq39hmdaGirBrdvR0YEBLwVdVhcsNM
nccyqXJGn/aLGiTt5NPa9FHxvJ8iDarW8NSfH8rdfOVJP//QgnTVXQ9sWHDSzK4/vbW85uarLjOw
QyNLH8NPg4STTGksiArnkyz0OlVDRVkJErEoQgMRdu48bivc3kqoSphbrXuibvQGgOLiM7F5QxqD
PSXYuCHAxdCJsx1Ip4FQiNGufPcSPxJpn2RCf5AQ0U/iz9S8YB4AIoYaUnoxuXYGYrYcYrIAV1EZ
egb7cP1tn0N9aR36Nm/Dm0sW4qKb7uY78EDrbqRkGS+9/msO/VdufxcN0TCsNhmfvPWrOO+C6/QP
c9ogBcPYtWsdqkpr4MlKUIciGIqmIaABnZFKxETAUlgNMUOj2sHEXiREsajGQuQrcoC4uAgqTQJl
9FCCRo+QmaZWfW+hwDiiaMQLh9eO7m4rJEsQ8+Z/Hr984dfYeLAT5SUlqK5zwBdJsXansF6vBgk8
AT2TS6N/YBCyRUAN8YQLSaxc8QduPPB5e9hUW10lsMouaJKMWDrDKRFyOWx2CVuaB1FZ7Or69s8W
rn8vOTmuCZKnnzz71ede+ctXb2bydn0NR26iPuqAsC0kxZKo16DIzGmG5+/xFEMULcyxGI0muaJP
/M2CYIO3aDb27+pFMjQbi95QMG6SBzMXFCJCExEy4AF5NiO2JCFSdaCB3p5fovscgV4VqYTEpOtZ
au2hnJaY5vwK3ZlUYVdliaGoPd09mH/ZJcC5l+DKa+5GU38zO63+0gqEQoO4+9MPceT15A9e5iSl
5PNheMZhSoE2EIDocGHGzAXYuXk1SuUwSr1VsKoqOsOFGIg74akthSrb4Ujr3d0UAMRjGqLhLCpq
3CitEPmmoAE9JETkK1HYTRrKOopVoqhMxlC/AEdxJWK5IiSDTrgLW7Fuw0Zcedls9PT2orw8zfVG
E6NNmWyKwKwEc1SzzM+0o3MXVJcVJcWz2fdpb3+XBSpJ1DVRHYrssNjZR6QHwY2XbHgXE6qLXm9q
H3hPGTkuQbrjuit+/LtX3/hi56EWeXxNDb+N6lxCzooYZcRkAY6MHVZFQS4ucKcsT8kWgZSQQljK
Ik3wjQIJdouL1b0o1cOqFGPf8hRCzUUYV9aAlkSC63WKUZ81zRY9TL4F+p27iQw/iQTLahdRXq33
waWIeMPrQHfnAGZPmcuwqWxGghpMwKe5YSmsQKo3xuU3a7kfk+v9mIzTjBYVIyEijSRGQoNhOODi
iUJqMgIrdfQKCrKpCCqLfMgkidGuDImsjMMH0xiIuyEWepDO6ufHF1kmP0iEzWaFUTM1p8IP/02/
S9KR31U1rkNppQU9HRq6D0WRzLQjnbbDjhrs3dCEyf46eGpnoSgUw7plT2HcZA1nnHk6/rx7BWZP
PQWpPic2t/agongupJwXfbk4Gmeci4rpZyCjiFA0HQ/PiiGbhZbNsYkcHBpCT3Bx9pH7v/eDRe9e
e2IEafrFN3Zce8k5G3/54hun/9+HvsDP5RNr/U0dLDcy9YZzRia3s6pyu46oWJBJudHSbMO2HTIU
1Y10XELNpEKEw7rPQIQidEFFcSSpLhgDXoThY+u5T1XNweURoBLTnU1GShHY70plkrBLHr4wNM6c
tJMg5eG+Sbijxm4LOjEXFXMzxk++QBaZozsi8vSSGswoSAUDfCOV1DSgff8edPbJaGkWERKLAE8R
YqSJHLqQ6NPBddNLWohvDEkXspxeUTLqeMZ3FYebgWG02aG1KYWewZ1MCVhWeBZKy89BKhZCOt6B
7W27Mb7dgxmzrsfraxciHI5icGiAK/dU97OlNBQ73exDeZ1WzJ45A4//9OuIUNFas6Kzt4s7k+n/
8UgI0XCEu19CKWKSym245b5rxy73fxBBonX9Jed//77Hfvj6N79wp+hyOpjEijpkpawBC6UsN5Xk
JZMKWkJG1KAROVZWgyUnc6eFNetCLulD90EnNr5rRRZeZGBDIi6CUlVOl27CyE+QpCOFxrxD6Xdq
vqBNMOb86WaPfIsiOxLBHNRMKbo7OzG+rg4uytAqKciEQqDikyIBii6hMZd+UErIW1UBkirBnmFI
qHlX6C0V2RRS6QgklxX2unrmXWztDiLnPAU73jqMQ0ErCuv8kAmvlMibnCGMCIXJD26u0X+bi95j
Rqb0sNoklHhmwOuzwGqX0NOZQiKdhcc+HjUTarBtTzdmjfs02vcG0b16N2ad92nE4gd4KA9RGfb0
9KCqshJVE0/Cj37xfSx8bTGcRXb0BBKwWQUYs5VZyxOVAN1fBDv0WKTvH698HDe1/KuLVxxYMGfG
bYlUqmjezGkMGyEIfsagUbFQRptSAYwR1il8uQdPBJN6Er2ZRXIjmyxAX08htm2zQnb7EUlYUV4j
8CyR0BBgEINwlGOzYfhLmkKkozCNn4YTG48K/Bw75HYZg30HoWWCcPkimHLqaRCzKhSGVMiwkPRx
z5NuR3IukfNd9LwsECucRY8gRGPnST3Qh8sSLMxkriEUjqK3B2hvFbBvZQJxuJjRPK1aCUPG55FO
HSlIptKmn5y6EI803cP/18ACQDmywf4MervCqKh2o7BYRnBQQXdPCwLxHcioEchCBaomliCRcSKa
kDF+QgOa2oYQSe/Fgvnno6l5K9xuDyKREObMPodnjnz7Rz/j1iWZmIGTqg4DwoimFxlATScjtCQ0
7UvHKx/HrZFoXXb26U/95LcLf3LvdVcKFnYKRThMLZHTWX2yRIqRk/iGzxKikBjDUhpk4n5WSjDY
7sbObVYkUx5YnCKH9YTrIYGoqCGfRP9CpJnyLOQRvgMtMn3krNIFp4QeCZ/dDlgchIuqhNVVgJbm
A9xWQz3vDsEGmfCVms6Yr+8ahsmuiDKQmGQlk4fBAFWyhJMgJyKID0W5U2Oo34MNK9ejeZ8HFtUF
r78CMkGCc7oQACPlGkUZ8ZVILkkmuVxp3AiCwXFgmnEGCZKDrmj8Wi6cpjX0dCQQTu2ELPlQ5z8H
pZV2/t4UFVL5RcjacahpCNPKL8fql1ZgpiuAae75aD68G/NOuwbBnBVff+JR5FyApMmIhkV4bV7k
LCmjzKU7hdSQkEoqOYckPZV5H23772vYxVtrNmyYOmHc3blcznvS1ElMJ5czbQ+ze2S5+g8dl6e3
LhOmJqVCVYoQ6POhq9uJ/qAbdp8NZBULdaQtbwDVoXo6dSGhSIaeE/M0EvsUxh1M0U1HG0VtKor8
It/ddGGzGaC/Q4PDHoCWa8E5513BO0M4a5GkXxSG8ckkLBlZz7fobU85vd0pZ6AqTTJVkRxSGYmU
A5s3x7F+bQtC4UrUTK6E3V2CYJjGgOnnTJqUUhYsSIIuRBS16cVQ/dyHBcv4G4ZjbWqvRByIhhX+
X0W1nTVRLDEAu6UEEyaOQ3GZhaPAYIBIyCR0d2RQWmmDaCvEoc4gCopcaDl8CE63D/6aAoxvmIkf
/tc3sfrdFpSVFyKdVBHLJOGyuxGOx3iEKSEWKB+VovwfhO6Uqn7y/cjG+27x/OSlF/30+79+Ppfk
bKgKiyrCkqXcqgRVtCMtWJEUZaQsNiiiDarmAjIliPWXoLvVi1jSB5fPhkhYT8aR5qHcSUmZnmQk
reT16RpqNBlKvkNKF3ywT8VAX3IYy0+blUqRw02dfeWwuyqAaIp5gTRK5lgM3W0xZm0QwjFl4YdD
k7jNO+4AQi4g4AUGvAKCNMU6msSuvSKWrIxg5yoFuXQZCn3l6GmzM7sZdaGSIJMQ8U3g0IVFU4/s
3Te/z2jtanYlGR1TyKR0NU/vHQooGBg8DC2XRkWln2828gXdHhHjp8gsUF6fzJrP6rSj8eQFKKk6
H3bHRdi5dxCVpWfjd6++gBfeXAfVncPezkHERCuscikyqgPlRX6U+ArZBFppULOKnFWQfvp+5eJ9
j99ZsmbdusaJ4z+TSKYK5jVOhSTo1lGjvBHDWTUd4y3qBAqqYkNwwIn+bj8UoRCCXQT1IzLxuhfo
69LvZJ6tZtMvpOn/mCtfEwmCaZLIp9KxRQ4nI5b0FECWHEw7woEshgY6cf5Fs6GKOY7mREkn8mIn
QRMMu2nmFQTGK2UlwdCyItPsBDpF7NyexJZ3uxDss8BbWQjB5kWCarI+/TuQiaUcEJU6KFlKNwY9
Rxn4nDYSmZnQcf5b1DPzZJrJgtANRbzffd0Zzn6XV7lhtYno6w6zENXXkmMtgaiJOCnr0o9PHo5M
sF8jy58lZj7ZBVXwIJH0wV/px7PPL0QgcxjZnAqbQ0RWEeGyFjBllKKEOFOfoXxbNkNXozOlqTe8
X7n4QE3nt159zXe+/8zvtc5AFEqGTkyCkrMhnbMhCiviOTJbBJovhZbwo7+1GKGQm5ns29voLtMv
hHlByAwciyBu9P9oQ7gkIuslh8pa3Qzu36l/I5JtyVaCtBDDn95YDEdxASyyjFROhWIDetIBoAjQ
KOKjQpRdz3rKogQbYcbTAoQgsHPFANYuC2DzX6my7oO/ugyKakVGBaMOEjHdDFFi1FNgmKWYQcVk
XmBpxKzR9zQflNmOhnXNSwJIf5s3TFGJxxCyLNLqIAq9VXB5RBZQulFIWDmKzRp+ZN4u5ow0SUpz
QBHGYfUqEeefdR+qnJcBip11h9dTCEXLIJ6KQFU12Kk0IspIqprmtru+80Fk4gMNBHtz5Ttbzzr5
pGsOdnSVX372+ewHiZSoozZpWccYkc0l0rfew1ZE4rXI5iwoKAX8FbpDTRd+sE83A+x0CiOmYDia
kUws+IgmyhcsvUwiobJW4mMe2B3DOZdZ0d4KBpCp8Ur8afl3MG3iPFTN8XPFO5nRUOhzs6aIRTOw
UTkhHkcskYJG1DSCgLYDwFtLdiDcX4aB3iT8lZXw+R2sSeMJXZFRSok2m4SBokvKE5F5ad6TQywi
DH8nKS9PZLbW0YMsbU+nhmgoi7IqiQWSfB1qrS4strGW6utOMulEw1Q/H59a0ygidDhHrkPOdNIN
8848rJQ6yIoMf1ZhQSCg4cbbzsO+XQGE0y3IpBW47AXMZmcnwbZYESa0ALAzlkl99iMTJFrfuv/r
zY//6pe3XHLWFWJJcRWShB+yumBxFcHpKgXB+0KdLuQs9XDKAtragHhcv4DhoC5ArfuppqT7v4KR
XDTN2nASUhjxM4Q8oSIhonKMr1jiY5I26OoYBDQP45II5Vc/oRhKuBgvvPhtuJINqJ9UDZskwOID
Ep1Z5NIyLAUCklkrBrtEbN8xiA3rWnBwTQ5Fbj8LidtTzFEV3RR0Xh6v/vnBQR3/ROaFNCtpyM42
oGV/HImYiuJSWU+qqsbNkKc1zO8QGsoxW1tppYSBHhKcOErKHZxcpdA/GG1DcUEtaidYWEDIXLrc
+ntJ0EiLsSsgjvhf5jXMZgW+Jv19aRQXF6Np1yBuuekS7NzYBi3bBjUTh9MmMqoyraQRSiezXpv9
tmRWafsg8vChGEfvuemWP+zYs+emN576HcLZGMKZOMIZyqwG0N7aDgSno3bcDFilRt4IgoBEgiO5
lD3bFDTOkdm85edV8oVnrEUXlUB85F/QRtLdSsfbsUHD3pZVuOqqczB+MtC6V7dcVtsgXn35RXj9
/Thl5qdRW1uJmmk2FPmB1YuiGAgfQiYpww4/ispzPKYqmXTyOTs8uhYww3baNPpMMknFRsQ5OMC0
3FjxZpyr74XFDtSMkzlZyiXIvO+FvPIImSr6P53Hgd0KQkNpnHyGm532pp1JhGKdmH9aAwssCTVp
PNKE9L3pfMgkmsTDZNrNslF+OSmbJSZbEclEhv9xzpUKHv63zyKS3oycFoZNFtEdHYBNll+MZtI3
fVBZ+FCCVFcsFXUOqvttEPwWwvnaYDCluTGtdhbOPvkGlHsvgcPRgOIK3a+gUJi0ydZ39RB30nSZ
zRzy/AnzYv/NyQoj6pv8DDIH1DNH0Z9obPDGVQoGA2GceUEJCxhNkGjZk0FVrRWTptH/u7B3Rz9K
CsvQHVyLiuILMXm2C75imSM+cmYpH0n4bwoCaFNoY6lsM5xINKIuOt+iEl0gutuBXTubMWVKA8ZN
1jcbRj4pP0Iz38tpgYwuEHQ9WvbF4XTLOGmBFX3dwN4dAU45nHdFAYPfTNSDaBR36TgU3ZqCROdu
ClL+omtAmq/AJ6C7PYWyMisq6qL46S+vQzi+E1k5jXAqEvDbHZN7ksmxe42OY31oDuT77/ziXb95
+blfPP3401LDlEZ4CgtRVFiOIqsN7y4HdmwCaifQXFndNyITQCr5zy/EUTPOxUhHCmlN02bWp/Iv
/GhhAvTNI0EiwWNQm2PEfCx+NQyn04YZp+j1k8nTyf8AUnGgpFTPP5VW6IJCG0SbQAlswRDkbF55
wsxQk7AzVEXT0ZimFiJHm0zOuuVJdlxnn+pCVR3YVNEibasZyXHzu5iCRMemnz0dehqjYZqbtRMh
Alqawpg4tYCPNdg/4qTTZ7GPZTj0ZD7p2OTks4bO6IhVOc+pJy1GVQOKDNtpbGst+ZEHsWzbnWiP
r9Xcsvy5cCbz6w8jBx96+u767Zu23XP7V+e+8faiyY9+4+uw23zo70+iaYOAyJDEPgUVYilBTF+a
NoHs+/69PRg/ycebSRfbdByFvHLBsUh1Tb+IstnMn5nTN6+jFTj7UjuadinYtXcbEsFi7NysYPap
Mt/Nu7cA3J0d0c+D+adwZFVkuNzi1IWUBIhNaVIXYDo/ynuRRiBTTTmxzsNhzJ7n40Qpsf9lDa1J
f5slEvPBmiOrmyq6JsGADkabMtPCyUx6PhkDpp1kYW1Ef9M50HspRUDnRUJB2ohuIHpeyYwcVx/s
p4+vh3HzkUDRuboLKIWQhd8vY/W+79LkgMURJfPgh5WDDz/GGcC0upqlW/dsv23pshWe/c378PLL
r+PtN9egrKwa4SE/KvTWeM5azzgZeOmZIcw/swLV9SNVfjOy0YxuJtoA2gjTtzBNynBST9IvDm24
GQ3RppOGoIs6frKMiROrEAwQDDWL0JCVtUrNeH0DaHMo2pLyhGe04JrhNZtTdWRD6GFm24tLgWV/
6cXkxlLWvGQa6RzyC7VKXokkZ5RNTB+HnHaC2I6bZOPzJkEgYSFhqKjRT4iuA5ltuiYUnNDryKST
9qLAJZM2js8pBoGviZmHMzPpaeM1pNGoQWB7y6OIZ1sCYjJ+YUxTPjSp+gkRpO37dycby0ubVm9a
f33nnq3STRdfjVOnX43Ssgak0jJvCNXUCJzfeRg41Kxi4lQrJ/OQG8mzmOEy/56/qWauJHf0avno
yA7Qw3O3V0JppZU33PSj6EITNwSdl3nc/JVfYD3aYgSC7r+itUlDWZUNBT590+yOkfMewbmPHNO8
MUir0sZSbZKEnJ4j8zTQS1BeCQ6XHnmRAOWM91ITAZ03P2/Tj2+x6L9TREeOOf3kuT6WkcQoC18m
x5yVvYNvYdX+R7PfPvfCT7+wZ/OWEyEDH5wFc9Ra33zwL8V2+YeBrKaVVVZhYmMNYokMPD79bqAv
Q37JhpUpOF0WVs2kVUzbzxd31N/I84lMs5dfnxprjU5e0l1LCcsio1mYLqipIUxhNX8Omx5tbIEd
vXgwXoh8Jcewr2I3qAasBqcXl24sRk7MWPT9uC6njERidG4k+HR+kVASDpfI2o0E09TMWeP1glEm
Mn0surbkI3E3TVCP8MgnoukVprbS65MCFKEXS3bfnrtt+twn7nntv/94ovb/hAkSrRvPSn7jsrOv
WPnIDx9FOpFAf0+a0/BkcrhanwADtAqK9FYc5GkQKS9ENu/YIwBt+XkY8cjXAiM1uOHXGLkb+kyz
rECf6Ta4eulimyufC9QUoOMRJPpMOo6/QuYbg95DZo9C8fxjWixHfk8SLK4LJnUBMGYp61rE8Gsq
60bMp/leM8qz5CVwTWeaNBpDdg2hpWtOZpAptF26FibijEXrL8E5FQ2rn9y07KH3ub3HvhYn8mDn
fULCaRO/f6fd4u965IkvUJsvR0BmeL99A5W5EiirFIfhshg1uEhVR3DZ5vqbEsmoTR79fzOpKcsj
pQTyPehvcpo5whPyRjP87eCkY2q9/M+h1/nL9Q01fTgTAjz6dflZe04rGNpCNnDaojETjRoEikqM
62Fkqk2wH/KK16ZvaZZkyPfr79HQ26Xp+TrDLJKjTn7bym3XocwutD8y+xNXvfe3e3/rhArStV8W
cs+8/LuBB2998/GBocHMkg3f44tAF4AimZ2b4iiwTeEOaTHPnJhrdL4lf+ULi6mh8p1vjNJK7Jel
R6Iu+h+pftJOHO05jhTafHM2+rhjLRNvTUlH8klMszw6jyPlmTSzNELHpuuhGjcZnaMpDBTdur0j
xTpTk5OQaGpe4GFoNi4Yx/T/hwIaggNpbsCk/jl6zoTfLF/9ABLRA5HvNl595bw//lvog+3w0dcJ
cbbzV19sZXZK6eOR0+ZeOPuNd79dq2hZYUL1PP7SrftVTJlZyLmj/DDfXKYKH0tDYJQw5cbQWPlm
0fQdTE1Bv+uO7cjmZrNHOunAkSbzeMaCmNEiCRZpFnKWSaBMGK15PqpRKmETo5BDrR+fUggkLEqe
OUwmBG5HIrNJ/yOBiAxpXPYxtTt9P4dDPx5rJ86gCzwk0eWRuXREr6X3r9/yHWw/+Fz6Pxov/eTV
7/xo9QfZ1/daJ1QjmSud1poqq+p+9NCtSw6v3PQUlq9fyPmkqjoHps0Zwerk187yH/l38dE0w3sx
B5sCwSbEyEhT4pMedHHJPzG1gJZnSk3f6jiYiXUErtUwnYquIczPyhdM5Gle87uRwHEUJo+kFygx
Sn97CkQWfMkwdZxsJHCgOuJDwUh2qkbDaMKA5sjySEaeSNZ37/kvrNvzM+XfJ1/4uU+t/fmb7/2t
Ptg64RqJ1obmb+euOe/fW+x2d88pjVcvePrFm70OWzXOOL2Rs9t0ccS8O9Zcw5uYX/HPwyPlV8/1
fxz53iNAZNKIWSCH0wyZ6a6nZCQ5x2uWphhQzxGd0Q1Lx8jPTeXnr8Z6SAa2yNRApl+GPGE2yySm
5mFQXr/+f8pck7llAXDo50tCxk57Wj92aEjjtvEp04t14TU03srFA7BYXNi4eSPSUR/mn23ltEbK
aBg90PI0/rrpG+pjUy/4ymc3//5DZa7fa/1dNBKtT39DyEoWvHpoX/WD37jznY6X/vp1LFn1An9B
YASjbK58gRpLC5mvfy/fJf84tCmqPkx7uNTBEVJOv4MJEGe3H6k1zM0fjq6O8Rjtt43+fBPAZi5O
KtpGNCAJuBnSIw96a2KXOJlJzZXRLCTRyWbQxDHt3pqBx1uA4GAGZ54xD6ee60JPB/hBKZf9+5/C
kk3fzH5v5mX3f37LwqePb9c++Pq7CRKtWx8WlHhU+WN1bf2XHvzk0oN/WvEoFq996oiuCowRdY0O
vfNrVPm9bqYJGssMma8zk4P5nRtkQoi0oX6SPCzYx6rvHW3lf7aYl5Myn5PzmiHp/+TrkDkik0NV
eYr2zGaB/PM2NSH9r7dTRSyis8FxMlXWz7+7fxdmz7diXIOV65fk/5FJq6wB1q3/Ft7c8Jjy/RmX
3HfPht//5/F9mw+3/q6CROsXK6x0vy0aP2ni5773xQ3bVm16Br/780NH+CTmGi0Q+SZuLPz2Eb5V
nrYyNYrDyKvQZ5lIzHzgPcFAzByOqQms+myaYaf8WI/3WoI4UpE3Q3zSgByBZXOcoOWyS17+yAT3
0U8yad3d/UyBWFVn5Tol47AkwClX8bnKhvkm4aQG0b8suReb9v0m9e1JF9/xmY3P//xE7+fR1t9d
kGjd9JCQtchY6fOXfPrbn13zVs/A9tyTz9/Ivf0Y484e7jgdpbXyTdvoQqjBSHhEbYwuMF182jiK
YBhMNqhrqdrxxjQJdZAhrIsAAAnSSURBVEQLWG0jAnK8CcnRf+efP4zIEBgRUlEaAfsPl0ryMvkm
vpvMHQkbISQzapiDBC6hEKPJgIaZc8s5c22a7pJSDa8uvQhth98O/mb+zZ+4d/vzL3zwHXv/6yMR
JFrXf0XQrv+KsMtT4rz93+9a+ozPVap948lZ6BscHH7NWLmj0dnq/NceC+dtbpBZZTdxPAQhIYfX
BMOZCT8zgYnjFKL3WmYi1FzclODRBYHOizgvSdBN5zu/E4Y1DUdvEgoLKqBoUT5Xah4lX6+9o5Od
dHqOSkCHDjXhJ/89GT410PzzaWfOP3/pD9/+8N/gfX7fj/oDr/2y0Aen8NV7b3jqoUvnfz7y6H82
YuOuZUd1vHGM4ukYQ6WH/2b179I1kSkgtAkEpjOxQGYkmMsri5hCZEZhR3vARAeMkWU3H9k8WgFy
7smMkm9G50NJWar8j+UPmj1xZLZKK+xwydXD0Zo+4Dqnl3wcwNZNC/HCO/Nz55dU/HXRebfOPGv1
s83Hvxsnbn00w/3HWH/4QY7Ixs4+2LTqp0+8eufUOVOvxh1X/+gIrWAWaoGRvJO5TPOFvL4wM/Fn
dqtmDW4iuuillbpG2rsNmDR9BHBG2oo+x/SlTGis2Rp1rGWe4+gIzlz0uWb0R+F+9Tigebeumah/
jyIss+ZoLsoZ0ftI6LoO6+dPguU0fLzWJoU/iyA47279HDYdeF15aO65jz+85o/f+Mg2b4z1kWsk
c938NeJAxtuTG8+6+EefX/98ONSpPvzjOejobRvG8pCznDLUv4mc5CKmibFJ6hvITB/OkUo3CSM5
t2ZRk17T3gK8+sJ+zFmgh8cmttlEEprCSMcxHfDR+azRy/SFzAYAMw9lLvM4VJE3R+Xv2RZHW5PG
ZRWzyMuZcSOxaL6fBKjzUIzPjaI7MmEU9nf3NcPq2ohfvz4VwYENnU+ddsml/2ghwj9SkKA74doN
XxU6RI//81+748VbPzH/892PPbUALy7+DxqXxpGIZJAy5Gehk8Z0Q0q+caGyG4ga1SOzLYg2hH6n
Whgxx9JryGktr9I33CysmhrP7NE3i7imUJrLFKbRdTmdVmcEnmLS1QAjJBd0vmauKKNEEQllGFrD
2tMQINKCZodIoE8XvnR2YPjcOCDJpdHZ9y089/Zl2mU1Da/85ZwbGm5a9odlf/eNOo71DxUkc936
sBAV7XjljNM/u+AHd616obN7i/KvP5mMPa1rGSzGOZhYngB5dQ1AfXF0x5LA0HO0cTwpQhqpQSkG
f0BfVwpz58xHMqlHcvnpAlEcyRab5upo64jITBjBRZO/wsVX6wgmm86FBIQSiZRqoNCf2q6r6nVV
ZX4e3Qz0O2lK0kT93Ul+ziI6EAmq3M+2btWL+NUbE5BIrup+5qK7b/z5zsU3lLzw2JgTr/8R6x/m
Ix1tPfudnMthw7ztW59/8rdL/72xrHi6cMOFP8O0KZW6mTJQhJFQHvzCEAjyLyhbTNGQiRCk15O2
WvzaAK6+xc8bRhwDhLk2k5TIi9RMfyffCTfXaMfYBMHld9Zq2oimMQm1zCo/ffa2dUBVvQ7RpfCd
hI9AaPTdGPjfB2xZk0TjXAda9yuIJ7ZjT8/X0dG/K3NxVeMzpynJL32xfZOKf7L1TydI5lr4w1yx
Ixa65YUV//eRRZufKZsz5QbMKP9XJEKlsNsFTJwmY+JUXaDoYSIQaTMyBtekqS02raK7PIVrbrdz
N4lsaDHSaqP9n2NltcfKyI8VOZo9cDBgIHR+1KJEjn5Hm4ZZ88S/CQbMhkd6/lAzUFo9gFf+9AXs
7FqkXTRp3trLnd577tn856YTeY1P5PqnFSRarzyRE5xuVISamr/8wsonP/v2tueLKjyXY2rpg5BF
D2SpADPnljB5BG0C3dk+o92JTBppJrrj31gYxtzTCzBtFnDooC5E+dFhvvDkY5Lyn8sXILMpwJLX
pZEvUKYg0XPkvJMpbTwJePk3Ogf52ZfKHMUxpCQzUqAFj3zoxF+X/Ss2tryeO6V21s7xmvLQb1o2
fuR5ofe7/il8pKOt678i5C67S+gW/A2PfP6e/5zxxTMXft9jiwaWHzwHW7sfRG90Bfq6VLQ1UYSj
R0a0iWaXCGkn8q3S2SEOl6lGZQLJhlMH6oj24kKp5W9hu6PLMSac1fybj5EdAZENcyFJI5qJaZD7
U8OgOhJyM71A7+1qX42Fr38Cj/1yimZVD29/7Pwbr1zRvHb2/wQhwj+7RhprzSx/1F/h9N40hL33
tw4uq7NZfOKciV9AY/3NKPB4MXHaCLiMoqDlb2hYu+tJnD7rPjgcIudyaBNNH8aEXFDdy/Rv2Pm2
jkCB81GXwy1TeTATMk1myoJeS+bMpLMhs0baZtY84KnvBlBcUoArbpKxcxNpxTiaD/wSy7b/AvHU
oHJm3cw1102d8cjNrz7xnrzW/2zrf5wgmeu66T3Oi65KnLJ3y2sPL925+KyW/vXOCu/ZqCu5CXff
dSs8bmrPBrZt346yoimYd5YdyxcNIKn0orR4MlIJ4h1woX4ScOiArsVmztMddjNnNdqJzl/51X5z
jIWJTzILvzzAJqAD+Sli++WTuzBxfDkKqtbgz0uexoGed3MzSsb1nVM1beE1Rf7vnvrW04F/yMU8
Aet/rCDlr8un7Cwstq++qS205a7DkZ3TeyP7bFPHnwlX7mLI6gQ89+on8OqzQFuzhl1NSzCl/gJ9
VHlPL2TRjXMvL8DSN3pw4x0VBrmp4UdZjywIH1HGEUe0Drd5Z/RWb2Ck44Pen4wQg0kHFi97Gau2
P4ueSFOusW5aeIJcuOKK2ok/vmPpr9b8o6/fiVj/KwQpf61cmPOse23N9XsOv3zLnq69Jx3o2+az
2WWh0D4fTnEqGuouhBqtw933TcDTP9mOnsgbuPGKR7F/hx5yUzGUnGPClXNX6jEaEkzhks2OGMqW
K1F0da5H26H1aO7dhJ3tG5HVUurUqmldtmTo7dnlFb/+yebl6/5R1+fvtf7XCVL+un1eQqwr6qkY
yrx4R0+y+6I97esmRxLRwkDksLWwwA8bauCQ6mC3VKK2agYc1jKcc9FMDPbIqK4pRSqR4zkenNhM
K7AJWaSTA0inhhCLd/KI+VDoMPojbegJHkLHUAuGkkO58YU1yRqvv3uC179xqsvz+tUTT36j9tkH
/mmSh3+P9b9akEavuVU/Fu/59P2lm1ZtP3lcY8sFy95ZNGswJNUkc91Fgqg6MmpUlmxRcSgYEjJq
lC9PKqPzxjis+uBDp9WVc9u8msfmUjxWT9JndYX8Lm9nodO1r9xmX3N5zaS3Gp/5ct8/0/f+eH28
Pl4fr4/Xx+vj9fH6eH28Pl4fr4/X/9cLwP8DeVUEL0h8dC8AAAAASUVORK5CYII=

------MultipartBoundary--jp4s04Prax7r58rcbeQOam2nREQD6vuJy3WOXxojCZ----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://www.codewithharry.com/img/user.png

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

------MultipartBoundary--jp4s04Prax7r58rcbeQOam2nREQD6vuJy3WOXxojCZ------
